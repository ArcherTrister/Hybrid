2020-01-13 14:18:18.592 +08:00 [INF] Starting IdentityServer4 version 2.5.4.0
2020-01-13 14:18:18.675 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-13 14:18:18.772 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-01-13 14:18:18.773 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-01-13 14:18:18.775 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-01-13 14:18:18.776 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-01-13 14:18:18.776 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-01-13 14:18:18.776 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-01-13 14:18:20.431 +08:00 [DBG] Login Url: /Account/Login
2020-01-13 14:18:20.434 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-01-13 14:18:20.441 +08:00 [DBG] Logout Url: /Account/Logout
2020-01-13 14:18:20.442 +08:00 [DBG] ConsentUrl Url: /consent
2020-01-13 14:18:20.442 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2020-01-13 14:18:20.443 +08:00 [DBG] Error Url: /home/error
2020-01-13 14:18:20.443 +08:00 [DBG] Error Id Parameter: errorId
2020-01-13 14:26:31.280 +08:00 [INF] Starting IdentityServer4 version 2.5.4.0
2020-01-13 14:26:31.322 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-13 14:26:31.334 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-01-13 14:26:31.335 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-01-13 14:26:31.335 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-01-13 14:26:31.335 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-01-13 14:26:31.335 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-01-13 14:26:31.336 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-01-13 14:26:34.414 +08:00 [DBG] Login Url: /Account/Login
2020-01-13 14:26:34.420 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-01-13 14:26:34.422 +08:00 [DBG] Logout Url: /Account/Logout
2020-01-13 14:26:34.425 +08:00 [DBG] ConsentUrl Url: /consent
2020-01-13 14:26:34.426 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2020-01-13 14:26:34.427 +08:00 [DBG] Error Url: /home/error
2020-01-13 14:26:34.427 +08:00 [DBG] Error Id Parameter: errorId
2020-01-13 14:26:43.960 +08:00 [DBG] AuthenticationScheme: IdentityServerAccessToken was not authenticated.
2020-01-13 14:26:44.097 +08:00 [ERR] An unhandled exception has occurred while executing the request
System.TypeLoadException: Could not load type 'Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory' from assembly 'Microsoft.AspNetCore.Mvc.Core, Version=2.2.5.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'.
   at System.Signature.GetSignature(Void* pCorSig, Int32 cCorSig, RuntimeFieldHandleInternal fieldHandle, IRuntimeMethodInfo methodHandle, RuntimeType declaringType)
   at System.Reflection.RuntimeConstructorInfo.get_Signature()
   at System.Reflection.RuntimeConstructorInfo.GetParametersNoCopy()
   at System.Reflection.RuntimeConstructorInfo.GetParameters()
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.AspNetCore.Mvc.JsonResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\MtlsTokenEndpointMiddleware.cs:line 60
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-01-13 14:30:18.431 +08:00 [INF] Starting IdentityServer4 version 2.5.4.0
2020-01-13 14:30:18.470 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-13 14:30:18.487 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-01-13 14:30:18.489 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-01-13 14:30:18.490 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-01-13 14:30:18.491 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-01-13 14:30:18.491 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-01-13 14:30:18.492 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-01-13 14:30:19.929 +08:00 [DBG] Login Url: /Account/Login
2020-01-13 14:30:19.932 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-01-13 14:30:19.937 +08:00 [DBG] Logout Url: /Account/Logout
2020-01-13 14:30:19.938 +08:00 [DBG] ConsentUrl Url: /consent
2020-01-13 14:30:19.940 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2020-01-13 14:30:19.942 +08:00 [DBG] Error Url: /home/error
2020-01-13 14:30:19.943 +08:00 [DBG] Error Id Parameter: errorId
2020-01-13 14:30:25.557 +08:00 [DBG] AuthenticationScheme: IdentityServerAccessToken was not authenticated.
2020-01-13 14:30:25.685 +08:00 [ERR] An unhandled exception has occurred while executing the request
System.TypeLoadException: Could not load type 'Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory' from assembly 'Microsoft.AspNetCore.Mvc.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'.
   at System.Signature.GetSignature(Void* pCorSig, Int32 cCorSig, RuntimeFieldHandleInternal fieldHandle, IRuntimeMethodInfo methodHandle, RuntimeType declaringType)
   at System.Reflection.RuntimeConstructorInfo.get_Signature()
   at System.Reflection.RuntimeConstructorInfo.GetParametersNoCopy()
   at System.Reflection.RuntimeConstructorInfo.GetParameters()
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.AspNetCore.Mvc.JsonResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\MtlsTokenEndpointMiddleware.cs:line 60
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-01-13 14:33:44.698 +08:00 [INF] Starting IdentityServer4 version 2.5.4.0
2020-01-13 14:33:44.736 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-13 14:33:44.746 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-01-13 14:33:44.746 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-01-13 14:33:44.747 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-01-13 14:33:44.747 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-01-13 14:33:44.747 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-01-13 14:33:44.748 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-01-13 14:33:46.030 +08:00 [DBG] Login Url: /Account/Login
2020-01-13 14:33:46.033 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-01-13 14:33:46.037 +08:00 [DBG] Logout Url: /Account/Logout
2020-01-13 14:33:46.037 +08:00 [DBG] ConsentUrl Url: /consent
2020-01-13 14:33:46.037 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2020-01-13 14:33:46.038 +08:00 [DBG] Error Url: /home/error
2020-01-13 14:33:46.038 +08:00 [DBG] Error Id Parameter: errorId
2020-01-13 14:33:49.759 +08:00 [DBG] AuthenticationScheme: IdentityServerAccessToken was not authenticated.
2020-01-13 14:33:49.889 +08:00 [ERR] An unhandled exception has occurred while executing the request
System.TypeLoadException: Could not load type 'Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory' from assembly 'Microsoft.AspNetCore.Mvc.Core, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'.
   at System.Signature.GetSignature(Void* pCorSig, Int32 cCorSig, RuntimeFieldHandleInternal fieldHandle, IRuntimeMethodInfo methodHandle, RuntimeType declaringType)
   at System.Reflection.RuntimeConstructorInfo.get_Signature()
   at System.Reflection.RuntimeConstructorInfo.GetParametersNoCopy()
   at System.Reflection.RuntimeConstructorInfo.GetParameters()
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.AspNetCore.Mvc.JsonResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 72
   at IdentityServer4.Hosting.MutualTlsTokenEndpointMiddleware.Invoke(HttpContext context, IAuthenticationSchemeProvider schemes) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\MtlsTokenEndpointMiddleware.cs:line 60
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-01-13 14:45:07.200 +08:00 [INF] Starting IdentityServer4 version 2.5.4.0
2020-01-13 14:45:07.242 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-13 14:45:07.252 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-01-13 14:45:07.253 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-01-13 14:45:07.253 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-01-13 14:45:07.253 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-01-13 14:45:07.253 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-01-13 14:45:07.254 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-01-13 14:45:08.377 +08:00 [DBG] Login Url: /Account/Login
2020-01-13 14:45:08.379 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-01-13 14:45:08.382 +08:00 [DBG] Logout Url: /Account/Logout
2020-01-13 14:45:08.383 +08:00 [DBG] ConsentUrl Url: /consent
2020-01-13 14:45:08.385 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2020-01-13 14:45:08.385 +08:00 [DBG] Error Url: /home/error
2020-01-13 14:45:08.388 +08:00 [DBG] Error Id Parameter: errorId
2020-01-13 14:45:11.731 +08:00 [DBG] AuthenticationScheme: IdentityServerAccessToken was not authenticated.
2020-01-13 14:45:18.622 +08:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-13 14:45:18.645 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-13 14:45:18.646 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-13 14:45:18.650 +08:00 [DBG] Start authorize request
2020-01-13 14:45:18.658 +08:00 [DBG] No user present in authorize request
2020-01-13 14:45:18.662 +08:00 [DBG] Start authorize request protocol validation
2020-01-13 14:45:18.677 +08:00 [DBG] client configuration validation for client swaggerClient succeeded.
2020-01-13 14:45:18.732 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-13 14:45:18.753 +08:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"swaggerClient","ClientName":"Swagger UI for demo_api","RedirectUri":"http://localhost:5002/swagger/oauth2-redirect.html","AllowedRedirectUris":["http://localhost:5002/swagger/oauth2-redirect.html"],"SubjectId":"anonymous","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"IdentityServerApi","State":"TW9uIEphbiAxMyAyMDIwIDE0OjQ1OjE4IEdNVCswODAwICjkuK3lm73moIflh4bml7bpl7Qp","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":null,"Raw":{"response_type":"token","client_id":"swaggerClient","redirect_uri":"http://localhost:5002/swagger/oauth2-redirect.html","scope":"IdentityServerApi","state":"TW9uIEphbiAxMyAyMDIwIDE0OjQ1OjE4IEdNVCswODAwICjkuK3lm73moIflh4bml7bpl7Qp"},"$type":"AuthorizeRequestValidationLog"}
2020-01-13 14:45:18.783 +08:00 [INF] Showing login: User is not authenticated
2020-01-13 14:45:18.882 +08:00 [DBG] Start authorize request protocol validation
2020-01-13 14:45:18.882 +08:00 [DBG] client configuration validation for client swaggerClient succeeded.
2020-01-13 14:45:18.888 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-13 14:45:18.893 +08:00 [DBG] client configuration validation for client swaggerClient succeeded.
2020-01-13 14:45:25.825 +08:00 [DBG] CORS request made for path: /Account/Login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-13 14:45:25.912 +08:00 [DBG] Start authorize request protocol validation
2020-01-13 14:45:25.912 +08:00 [DBG] client configuration validation for client swaggerClient succeeded.
2020-01-13 14:45:25.917 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-13 14:45:26.547 +08:00 [DBG] Augmenting SignInContext
2020-01-13 14:45:26.550 +08:00 [DBG] Adding idp claim with value: local
2020-01-13 14:45:26.551 +08:00 [DBG] Adding amr claim with value: pwd
2020-01-13 14:45:26.552 +08:00 [DBG] Adding auth_time claim with value: 1578897926
2020-01-13 14:45:26.561 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-01-13 14:45:26.583 +08:00 [INF] {"Username":"alice","Provider":null,"ProviderUserId":null,"SubjectId":"c56f7383-4b7f-4d76-ad22-d1977ef6506c","DisplayName":"alice","Endpoint":"UI","ClientId":"swaggerClient","Category":"Authentication","Name":"User Login Success","EventType":"Success","Id":1000,"Message":null,"ActivityId":"0HLSNUGGFRUHF:00000006","TimeStamp":"2020-01-13T06:45:26.0000000Z","ProcessId":30268,"LocalIpAddress":"::1:5002","RemoteIpAddress":"::1","$type":"UserLoginSuccessEvent"}
2020-01-13 14:45:26.594 +08:00 [DBG] client configuration validation for client swaggerClient succeeded.
2020-01-13 14:45:26.605 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-13 14:45:26.607 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-13 14:45:26.607 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-13 14:45:26.613 +08:00 [DBG] Start authorize callback request
2020-01-13 14:45:26.616 +08:00 [DBG] User in authorize request: c56f7383-4b7f-4d76-ad22-d1977ef6506c
2020-01-13 14:45:26.617 +08:00 [DBG] Start authorize request protocol validation
2020-01-13 14:45:26.619 +08:00 [DBG] client configuration validation for client swaggerClient succeeded.
2020-01-13 14:45:26.619 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-13 14:45:26.620 +08:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"swaggerClient","ClientName":"Swagger UI for demo_api","RedirectUri":"http://localhost:5002/swagger/oauth2-redirect.html","AllowedRedirectUris":["http://localhost:5002/swagger/oauth2-redirect.html"],"SubjectId":"c56f7383-4b7f-4d76-ad22-d1977ef6506c","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"IdentityServerApi","State":"TW9uIEphbiAxMyAyMDIwIDE0OjQ1OjE4IEdNVCswODAwICjkuK3lm73moIflh4bml7bpl7Qp","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d05592cf176a0455602a0c0ce883cabc","Raw":{"response_type":"token","client_id":"swaggerClient","redirect_uri":"http://localhost:5002/swagger/oauth2-redirect.html","scope":"IdentityServerApi","state":"TW9uIEphbiAxMyAyMDIwIDE0OjQ1OjE4IEdNVCswODAwICjkuK3lm73moIflh4bml7bpl7Qp"},"$type":"AuthorizeRequestValidationLog"}
2020-01-13 14:45:26.658 +08:00 [DBG] user_consent grant with value: swaggerClient|c56f7383-4b7f-4d76-ad22-d1977ef6506c not found in store.
2020-01-13 14:45:26.660 +08:00 [DBG] Found no prior consent from consent store, consent is required
2020-01-13 14:45:26.660 +08:00 [INF] Showing consent: User has not yet consented
2020-01-13 14:45:26.707 +08:00 [DBG] Start authorize request protocol validation
2020-01-13 14:45:26.707 +08:00 [DBG] client configuration validation for client swaggerClient succeeded.
2020-01-13 14:45:26.711 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-13 14:45:26.712 +08:00 [DBG] client configuration validation for client swaggerClient succeeded.
2020-01-13 14:45:27.962 +08:00 [DBG] CORS request made for path: /Consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-13 14:45:28.009 +08:00 [DBG] Start authorize request protocol validation
2020-01-13 14:45:28.010 +08:00 [DBG] client configuration validation for client swaggerClient succeeded.
2020-01-13 14:45:28.012 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-13 14:45:28.014 +08:00 [INF] {"SubjectId":"c56f7383-4b7f-4d76-ad22-d1977ef6506c","ClientId":"swaggerClient","RequestedScopes":["IdentityServerApi"],"GrantedScopes":["IdentityServerApi"],"ConsentRemembered":true,"Category":"Grants","Name":"Consent granted","EventType":"Information","Id":4000,"Message":null,"ActivityId":"0HLSNUGGFRUHF:00000009","TimeStamp":"2020-01-13T06:45:28.0000000Z","ProcessId":30268,"LocalIpAddress":"::1:5002","RemoteIpAddress":"::1","$type":"ConsentGrantedEvent"}
2020-01-13 14:45:28.031 +08:00 [DBG] client configuration validation for client swaggerClient succeeded.
2020-01-13 14:45:28.037 +08:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-13 14:45:28.039 +08:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-13 14:45:28.040 +08:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-13 14:45:28.041 +08:00 [DBG] Start authorize callback request
2020-01-13 14:45:28.048 +08:00 [DBG] User in authorize request: c56f7383-4b7f-4d76-ad22-d1977ef6506c
2020-01-13 14:45:28.048 +08:00 [DBG] Start authorize request protocol validation
2020-01-13 14:45:28.049 +08:00 [DBG] client configuration validation for client swaggerClient succeeded.
2020-01-13 14:45:28.049 +08:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-13 14:45:28.051 +08:00 [DBG] ValidatedAuthorizeRequest
{"ClientId":"swaggerClient","ClientName":"Swagger UI for demo_api","RedirectUri":"http://localhost:5002/swagger/oauth2-redirect.html","AllowedRedirectUris":["http://localhost:5002/swagger/oauth2-redirect.html"],"SubjectId":"c56f7383-4b7f-4d76-ad22-d1977ef6506c","ResponseType":"token","ResponseMode":"fragment","GrantType":"implicit","RequestedScopes":"IdentityServerApi","State":"TW9uIEphbiAxMyAyMDIwIDE0OjQ1OjE4IEdNVCswODAwICjkuK3lm73moIflh4bml7bpl7Qp","UiLocales":null,"Nonce":null,"AuthenticationContextReferenceClasses":null,"DisplayMode":null,"PromptMode":null,"MaxAge":null,"LoginHint":null,"SessionId":"d05592cf176a0455602a0c0ce883cabc","Raw":{"response_type":"token","client_id":"swaggerClient","redirect_uri":"http://localhost:5002/swagger/oauth2-redirect.html","scope":"IdentityServerApi","state":"TW9uIEphbiAxMyAyMDIwIDE0OjQ1OjE4IEdNVCswODAwICjkuK3lm73moIflh4bml7bpl7Qp"},"$type":"AuthorizeRequestValidationLog"}
2020-01-13 14:45:28.066 +08:00 [DBG] user_consent grant with value: swaggerClient|c56f7383-4b7f-4d76-ad22-d1977ef6506c not found in store.
2020-01-13 14:45:28.069 +08:00 [DBG] Found no prior consent from consent store, consent is required
2020-01-13 14:45:28.076 +08:00 [INF] User consented to scopes: ["IdentityServerApi"]
2020-01-13 14:45:28.079 +08:00 [DBG] User indicated to remember consent for scopes: ["IdentityServerApi"]
2020-01-13 14:45:28.088 +08:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: c56f7383-4b7f-4d76-ad22-d1977ef6506c
2020-01-13 14:45:28.105 +08:00 [DBG] Creating Implicit Flow response.
2020-01-13 14:45:28.116 +08:00 [DBG] Getting claims for access token for client: swaggerClient
2020-01-13 14:45:28.116 +08:00 [DBG] Getting claims for access token for subject: c56f7383-4b7f-4d76-ad22-d1977ef6506c
2020-01-13 14:45:28.228 +08:00 [INF] {"ClientId":"swaggerClient","ClientName":"Swagger UI for demo_api","RedirectUri":"http://localhost:5002/swagger/oauth2-redirect.html","Endpoint":"Authorize","SubjectId":"c56f7383-4b7f-4d76-ad22-d1977ef6506c","Scopes":"IdentityServerApi","GrantType":"implicit","Tokens":[{"TokenType":"access_token","TokenValue":"****1pVQ","$type":"Token"}],"Category":"Token","Name":"Token Issued Success","EventType":"Success","Id":2000,"Message":null,"ActivityId":"0HLSNUGGFRUHF:0000000A","TimeStamp":"2020-01-13T06:45:28.0000000Z","ProcessId":30268,"LocalIpAddress":"::1:5002","RemoteIpAddress":"::1","$type":"TokenIssuedSuccessEvent"}
2020-01-13 14:45:28.240 +08:00 [DBG] Authorize endpoint response
{"SubjectId":"c56f7383-4b7f-4d76-ad22-d1977ef6506c","ClientId":"swaggerClient","RedirectUri":"http://localhost:5002/swagger/oauth2-redirect.html","State":"TW9uIEphbiAxMyAyMDIwIDE0OjQ1OjE4IEdNVCswODAwICjkuK3lm73moIflh4bml7bpl7Qp","Scope":"IdentityServerApi","Error":null,"ErrorDescription":null,"$type":"AuthorizeResponseLog"}
2020-01-13 14:45:28.262 +08:00 [DBG] Augmenting SignInContext
2020-01-13 14:45:28.263 +08:00 [INF] AuthenticationScheme: Identity.Application signed in.
2020-01-13 14:45:30.342 +08:00 [DBG] client configuration validation for client swaggerClient succeeded.
2020-01-13 14:45:30.350 +08:00 [DBG] client configuration validation for client swaggerClient succeeded.
2020-01-13 14:45:30.359 +08:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-13 14:45:30.361 +08:00 [DBG] Token validation success
{"ClientId":null,"ClientName":null,"ValidateLifetime":true,"AccessTokenType":"Jwt","ExpectedScope":"IdentityServerApi","TokenHandle":null,"JwtId":null,"Claims":{"nbf":1578897928,"exp":1578901528,"iss":"http://localhost:5002","aud":["http://localhost:5002/resources","IdentityServerApi"],"client_id":"swaggerClient","sub":"c56f7383-4b7f-4d76-ad22-d1977ef6506c","auth_time":1578897926,"idp":"local","name":"Alice Smith","email":"AliceSmith@email.com","email_verified":"true","scope":"IdentityServerApi","amr":"pwd"},"$type":"TokenValidationLog"}
2020-01-13 14:45:30.364 +08:00 [DBG] AuthenticationScheme: IdentityServerAccessToken was successfully authenticated.
2020-01-13 14:46:26.203 +08:00 [INF] Starting IdentityServer4 version 2.5.4.0
2020-01-13 14:46:26.241 +08:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-13 14:46:26.249 +08:00 [INF] Using the default authentication scheme Identity.Application for IdentityServer
2020-01-13 14:46:26.249 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for authentication
2020-01-13 14:46:26.250 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-in
2020-01-13 14:46:26.250 +08:00 [DBG] Using Identity.External as default ASP.NET Core scheme for sign-out
2020-01-13 14:46:26.250 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for challenge
2020-01-13 14:46:26.251 +08:00 [DBG] Using Identity.Application as default ASP.NET Core scheme for forbid
2020-01-13 14:46:27.204 +08:00 [DBG] Login Url: /Account/Login
2020-01-13 14:46:27.207 +08:00 [DBG] Login Return Url Parameter: ReturnUrl
2020-01-13 14:46:27.214 +08:00 [DBG] Logout Url: /Account/Logout
2020-01-13 14:46:27.220 +08:00 [DBG] ConsentUrl Url: /consent
2020-01-13 14:46:27.220 +08:00 [DBG] Consent Return Url Parameter: returnUrl
2020-01-13 14:46:27.220 +08:00 [DBG] Error Url: /home/error
2020-01-13 14:46:27.221 +08:00 [DBG] Error Id Parameter: errorId
