### YamlMime:ManagedReference
items:
- uid: Hybrid.Localization.CultureInfoHelper
  commentId: T:Hybrid.Localization.CultureInfoHelper
  id: CultureInfoHelper
  parent: Hybrid.Localization
  children:
  - Hybrid.Localization.CultureInfoHelper.Get(System.String)
  - Hybrid.Localization.CultureInfoHelper.Use(System.Globalization.CultureInfo,System.Globalization.CultureInfo)
  - Hybrid.Localization.CultureInfoHelper.Use(System.String,System.String)
  langs:
  - csharp
  - vb
  name: CultureInfoHelper
  nameWithType: CultureInfoHelper
  fullName: Hybrid.Localization.CultureInfoHelper
  type: Class
  source:
    remote:
      path: src/Hybrid/Localization/CultureInfoHelper.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: CultureInfoHelper
    path: ../src/Hybrid/Localization/CultureInfoHelper.cs
    startLine: 11
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization
  syntax:
    content: public static class CultureInfoHelper
    content.vb: Public Module CultureInfoHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Localization.CultureInfoHelper.Use(System.String,System.String)
  commentId: M:Hybrid.Localization.CultureInfoHelper.Use(System.String,System.String)
  id: Use(System.String,System.String)
  parent: Hybrid.Localization.CultureInfoHelper
  langs:
  - csharp
  - vb
  name: Use(String, String)
  nameWithType: CultureInfoHelper.Use(String, String)
  fullName: Hybrid.Localization.CultureInfoHelper.Use(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/CultureInfoHelper.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Use
    path: ../src/Hybrid/Localization/CultureInfoHelper.cs
    startLine: 15
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization
  syntax:
    content: public static IDisposable Use([NotNull] string culture, string uiCulture = null)
    parameters:
    - id: culture
      type: System.String
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: uiCulture
      type: System.String
    return:
      type: System.IDisposable
    content.vb: Public Shared Function Use(culture As String, uiCulture As String = Nothing) As IDisposable
  overload: Hybrid.Localization.CultureInfoHelper.Use*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Localization.CultureInfoHelper.Use(System.Globalization.CultureInfo,System.Globalization.CultureInfo)
  commentId: M:Hybrid.Localization.CultureInfoHelper.Use(System.Globalization.CultureInfo,System.Globalization.CultureInfo)
  id: Use(System.Globalization.CultureInfo,System.Globalization.CultureInfo)
  parent: Hybrid.Localization.CultureInfoHelper
  langs:
  - csharp
  - vb
  name: Use(CultureInfo, CultureInfo)
  nameWithType: CultureInfoHelper.Use(CultureInfo, CultureInfo)
  fullName: Hybrid.Localization.CultureInfoHelper.Use(System.Globalization.CultureInfo, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/CultureInfoHelper.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Use
    path: ../src/Hybrid/Localization/CultureInfoHelper.cs
    startLine: 22
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization
  syntax:
    content: public static IDisposable Use([NotNull] CultureInfo culture, CultureInfo uiCulture = null)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: uiCulture
      type: System.Globalization.CultureInfo
    return:
      type: System.IDisposable
    content.vb: Public Shared Function Use(culture As CultureInfo, uiCulture As CultureInfo = Nothing) As IDisposable
  overload: Hybrid.Localization.CultureInfoHelper.Use*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Localization.CultureInfoHelper.Get(System.String)
  commentId: M:Hybrid.Localization.CultureInfoHelper.Get(System.String)
  id: Get(System.String)
  parent: Hybrid.Localization.CultureInfoHelper
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: CultureInfoHelper.Get(String)
  fullName: Hybrid.Localization.CultureInfoHelper.Get(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/CultureInfoHelper.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Get
    path: ../src/Hybrid/Localization/CultureInfoHelper.cs
    startLine: 42
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization
  summary: "\nThis method is a temporary solution since CultureInfo.GetCultureInfo() does not exists in netstandard yet.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use CultureInfo.GetCultureInfo instead!")]

      public static CultureInfo Get(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Globalization.CultureInfo
    content.vb: >-
      <Obsolete("Use CultureInfo.GetCultureInfo instead!")>

      Public Shared Function Get(name As String) As CultureInfo
  overload: Hybrid.Localization.CultureInfoHelper.Get*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use CultureInfo.GetCultureInfo instead!
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Hybrid.Localization
  commentId: N:Hybrid.Localization
  name: Hybrid.Localization
  nameWithType: Hybrid.Localization
  fullName: Hybrid.Localization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Localization.CultureInfoHelper.Use*
  commentId: Overload:Hybrid.Localization.CultureInfoHelper.Use
  name: Use
  nameWithType: CultureInfoHelper.Use
  fullName: Hybrid.Localization.CultureInfoHelper.Use
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Hybrid.Localization.CultureInfoHelper.Get*
  commentId: Overload:Hybrid.Localization.CultureInfoHelper.Get
  name: Get
  nameWithType: CultureInfoHelper.Get
  fullName: Hybrid.Localization.CultureInfoHelper.Get
