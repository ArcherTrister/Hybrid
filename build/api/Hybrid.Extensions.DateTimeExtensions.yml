### YamlMime:ManagedReference
items:
- uid: Hybrid.Extensions.DateTimeExtensions
  commentId: T:Hybrid.Extensions.DateTimeExtensions
  id: DateTimeExtensions
  parent: Hybrid.Extensions
  children:
  - Hybrid.Extensions.DateTimeExtensions.FromJsGetTime(System.Int64)
  - Hybrid.Extensions.DateTimeExtensions.FromUtcTime(System.DateTime)
  - Hybrid.Extensions.DateTimeExtensions.ToDefaultFormat(System.DateTime)
  - Hybrid.Extensions.DateTimeExtensions.ToNiceFormat(System.Nullable{System.TimeSpan})
  - Hybrid.Extensions.DateTimeExtensions.ToUtcTime(System.DateTime)
  langs:
  - csharp
  - vb
  name: DateTimeExtensions
  nameWithType: DateTimeExtensions
  fullName: Hybrid.Extensions.DateTimeExtensions
  type: Class
  source:
    remote:
      path: src/Hybrid/Extensions/DateTimeExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: DateTimeExtensions
    path: ../src/Hybrid/Extensions/DateTimeExtensions.cs
    startLine: 16
  assemblies:
  - Hybrid
  namespace: Hybrid.Extensions
  syntax:
    content: public static class DateTimeExtensions
    content.vb: Public Module DateTimeExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Extensions.DateTimeExtensions.ToDefaultFormat(System.DateTime)
  commentId: M:Hybrid.Extensions.DateTimeExtensions.ToDefaultFormat(System.DateTime)
  id: ToDefaultFormat(System.DateTime)
  isExtensionMethod: true
  parent: Hybrid.Extensions.DateTimeExtensions
  langs:
  - csharp
  - vb
  name: ToDefaultFormat(DateTime)
  nameWithType: DateTimeExtensions.ToDefaultFormat(DateTime)
  fullName: Hybrid.Extensions.DateTimeExtensions.ToDefaultFormat(System.DateTime)
  type: Method
  source:
    remote:
      path: src/Hybrid/Extensions/DateTimeExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToDefaultFormat
    path: ../src/Hybrid/Extensions/DateTimeExtensions.cs
    startLine: 23
  assemblies:
  - Hybrid
  namespace: Hybrid.Extensions
  summary: "\n時間默認格式化\n"
  example: []
  syntax:
    content: public static string ToDefaultFormat(this DateTime date)
    parameters:
    - id: date
      type: System.DateTime
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToDefaultFormat(date As Date) As String
  overload: Hybrid.Extensions.DateTimeExtensions.ToDefaultFormat*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Extensions.DateTimeExtensions.FromJsGetTime(System.Int64)
  commentId: M:Hybrid.Extensions.DateTimeExtensions.FromJsGetTime(System.Int64)
  id: FromJsGetTime(System.Int64)
  isExtensionMethod: true
  parent: Hybrid.Extensions.DateTimeExtensions
  langs:
  - csharp
  - vb
  name: FromJsGetTime(Int64)
  nameWithType: DateTimeExtensions.FromJsGetTime(Int64)
  fullName: Hybrid.Extensions.DateTimeExtensions.FromJsGetTime(System.Int64)
  type: Method
  source:
    remote:
      path: src/Hybrid/Extensions/DateTimeExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: FromJsGetTime
    path: ../src/Hybrid/Extensions/DateTimeExtensions.cs
    startLine: 31
  assemblies:
  - Hybrid
  namespace: Hybrid.Extensions
  summary: "\n将JS时间格式的数值转换为时间\n"
  example: []
  syntax:
    content: public static DateTime FromJsGetTime(this long jsTime)
    parameters:
    - id: jsTime
      type: System.Int64
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FromJsGetTime(jsTime As Long) As Date
  overload: Hybrid.Extensions.DateTimeExtensions.FromJsGetTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Extensions.DateTimeExtensions.ToUtcTime(System.DateTime)
  commentId: M:Hybrid.Extensions.DateTimeExtensions.ToUtcTime(System.DateTime)
  id: ToUtcTime(System.DateTime)
  isExtensionMethod: true
  parent: Hybrid.Extensions.DateTimeExtensions
  langs:
  - csharp
  - vb
  name: ToUtcTime(DateTime)
  nameWithType: DateTimeExtensions.ToUtcTime(DateTime)
  fullName: Hybrid.Extensions.DateTimeExtensions.ToUtcTime(System.DateTime)
  type: Method
  source:
    remote:
      path: src/Hybrid/Extensions/DateTimeExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToUtcTime
    path: ../src/Hybrid/Extensions/DateTimeExtensions.cs
    startLine: 43
  assemblies:
  - Hybrid
  namespace: Hybrid.Extensions
  summary: "\n将当前时区时间转换为UTC时间\n"
  example: []
  syntax:
    content: public static DateTime ToUtcTime(this DateTime dateTime)
    parameters:
    - id: dateTime
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToUtcTime(dateTime As Date) As Date
  overload: Hybrid.Extensions.DateTimeExtensions.ToUtcTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Extensions.DateTimeExtensions.FromUtcTime(System.DateTime)
  commentId: M:Hybrid.Extensions.DateTimeExtensions.FromUtcTime(System.DateTime)
  id: FromUtcTime(System.DateTime)
  isExtensionMethod: true
  parent: Hybrid.Extensions.DateTimeExtensions
  langs:
  - csharp
  - vb
  name: FromUtcTime(DateTime)
  nameWithType: DateTimeExtensions.FromUtcTime(DateTime)
  fullName: Hybrid.Extensions.DateTimeExtensions.FromUtcTime(System.DateTime)
  type: Method
  source:
    remote:
      path: src/Hybrid/Extensions/DateTimeExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: FromUtcTime
    path: ../src/Hybrid/Extensions/DateTimeExtensions.cs
    startLine: 51
  assemblies:
  - Hybrid
  namespace: Hybrid.Extensions
  summary: "\n将指定UTC时间转换为当前时区的时间\n"
  example: []
  syntax:
    content: public static DateTime FromUtcTime(this DateTime dateTime)
    parameters:
    - id: dateTime
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FromUtcTime(dateTime As Date) As Date
  overload: Hybrid.Extensions.DateTimeExtensions.FromUtcTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Extensions.DateTimeExtensions.ToNiceFormat(System.Nullable{System.TimeSpan})
  commentId: M:Hybrid.Extensions.DateTimeExtensions.ToNiceFormat(System.Nullable{System.TimeSpan})
  id: ToNiceFormat(System.Nullable{System.TimeSpan})
  isExtensionMethod: true
  parent: Hybrid.Extensions.DateTimeExtensions
  langs:
  - csharp
  - vb
  name: ToNiceFormat(Nullable<TimeSpan>)
  nameWithType: DateTimeExtensions.ToNiceFormat(Nullable<TimeSpan>)
  fullName: Hybrid.Extensions.DateTimeExtensions.ToNiceFormat(System.Nullable<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: src/Hybrid/Extensions/DateTimeExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToNiceFormat
    path: ../src/Hybrid/Extensions/DateTimeExtensions.cs
    startLine: 56
  assemblies:
  - Hybrid
  namespace: Hybrid.Extensions
  syntax:
    content: public static string ToNiceFormat(this TimeSpan? timeSpan)
    parameters:
    - id: timeSpan
      type: System.Nullable{System.TimeSpan}
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToNiceFormat(timeSpan As TimeSpan?) As String
  overload: Hybrid.Extensions.DateTimeExtensions.ToNiceFormat*
  nameWithType.vb: DateTimeExtensions.ToNiceFormat(Nullable(Of TimeSpan))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Hybrid.Extensions.DateTimeExtensions.ToNiceFormat(System.Nullable(Of System.TimeSpan))
  name.vb: ToNiceFormat(Nullable(Of TimeSpan))
references:
- uid: Hybrid.Extensions
  commentId: N:Hybrid.Extensions
  name: Hybrid.Extensions
  nameWithType: Hybrid.Extensions
  fullName: Hybrid.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Extensions.DateTimeExtensions.ToDefaultFormat*
  commentId: Overload:Hybrid.Extensions.DateTimeExtensions.ToDefaultFormat
  name: ToDefaultFormat
  nameWithType: DateTimeExtensions.ToDefaultFormat
  fullName: Hybrid.Extensions.DateTimeExtensions.ToDefaultFormat
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hybrid.Extensions.DateTimeExtensions.FromJsGetTime*
  commentId: Overload:Hybrid.Extensions.DateTimeExtensions.FromJsGetTime
  name: FromJsGetTime
  nameWithType: DateTimeExtensions.FromJsGetTime
  fullName: Hybrid.Extensions.DateTimeExtensions.FromJsGetTime
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Hybrid.Extensions.DateTimeExtensions.ToUtcTime*
  commentId: Overload:Hybrid.Extensions.DateTimeExtensions.ToUtcTime
  name: ToUtcTime
  nameWithType: DateTimeExtensions.ToUtcTime
  fullName: Hybrid.Extensions.DateTimeExtensions.ToUtcTime
- uid: Hybrid.Extensions.DateTimeExtensions.FromUtcTime*
  commentId: Overload:Hybrid.Extensions.DateTimeExtensions.FromUtcTime
  name: FromUtcTime
  nameWithType: DateTimeExtensions.FromUtcTime
  fullName: Hybrid.Extensions.DateTimeExtensions.FromUtcTime
- uid: Hybrid.Extensions.DateTimeExtensions.ToNiceFormat*
  commentId: Overload:Hybrid.Extensions.DateTimeExtensions.ToNiceFormat
  name: ToNiceFormat
  nameWithType: DateTimeExtensions.ToNiceFormat
  fullName: Hybrid.Extensions.DateTimeExtensions.ToNiceFormat
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
