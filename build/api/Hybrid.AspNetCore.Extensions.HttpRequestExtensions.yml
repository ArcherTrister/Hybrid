### YamlMime:ManagedReference
items:
- uid: Hybrid.AspNetCore.Extensions.HttpRequestExtensions
  commentId: T:Hybrid.AspNetCore.Extensions.HttpRequestExtensions
  id: HttpRequestExtensions
  parent: Hybrid.AspNetCore.Extensions
  children:
  - Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsAjaxRequest(Microsoft.AspNetCore.Http.HttpRequest)
  - Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsJsonContextType(Microsoft.AspNetCore.Http.HttpRequest)
  - Hybrid.AspNetCore.Extensions.HttpRequestExtensions.Params(Microsoft.AspNetCore.Http.HttpRequest,System.String)
  langs:
  - csharp
  - vb
  name: HttpRequestExtensions
  nameWithType: HttpRequestExtensions
  fullName: Hybrid.AspNetCore.Extensions.HttpRequestExtensions
  type: Class
  source:
    remote:
      path: src/Hybrid.AspNetCore/Extensions/HttpRequestExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: HttpRequestExtensions
    path: ../src/Hybrid.AspNetCore/Extensions/HttpRequestExtensions.cs
    startLine: 20
  assemblies:
  - Hybrid.AspNetCore
  namespace: Hybrid.AspNetCore.Extensions
  summary: "\nHttpContext扩展方法\n"
  example: []
  syntax:
    content: public static class HttpRequestExtensions
    content.vb: Public Module HttpRequestExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsAjaxRequest(Microsoft.AspNetCore.Http.HttpRequest)
  commentId: M:Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsAjaxRequest(Microsoft.AspNetCore.Http.HttpRequest)
  id: IsAjaxRequest(Microsoft.AspNetCore.Http.HttpRequest)
  isExtensionMethod: true
  parent: Hybrid.AspNetCore.Extensions.HttpRequestExtensions
  langs:
  - csharp
  - vb
  name: IsAjaxRequest(HttpRequest)
  nameWithType: HttpRequestExtensions.IsAjaxRequest(HttpRequest)
  fullName: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsAjaxRequest(Microsoft.AspNetCore.Http.HttpRequest)
  type: Method
  source:
    remote:
      path: src/Hybrid.AspNetCore/Extensions/HttpRequestExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: IsAjaxRequest
    path: ../src/Hybrid.AspNetCore/Extensions/HttpRequestExtensions.cs
    startLine: 31
  assemblies:
  - Hybrid.AspNetCore
  namespace: Hybrid.AspNetCore.Extensions
  summary: "\n确定指定的 HTTP 请求是否为 AJAX 请求。\n"
  example: []
  syntax:
    content: public static bool IsAjaxRequest(this HttpRequest request)
    parameters:
    - id: request
      type: Microsoft.AspNetCore.Http.HttpRequest
      description: HTTP 请求。
    return:
      type: System.Boolean
      description: "\n如果指定的 HTTP 请求是 AJAX 请求，则为 true；否则为 false。\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsAjaxRequest(request As HttpRequest) As Boolean
  overload: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsAjaxRequest*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code data-dev-comment-type="paramref" class="paramref">request</code> 参数为 null（在 Visual Basic 中为 Nothing）。
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsJsonContextType(Microsoft.AspNetCore.Http.HttpRequest)
  commentId: M:Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsJsonContextType(Microsoft.AspNetCore.Http.HttpRequest)
  id: IsJsonContextType(Microsoft.AspNetCore.Http.HttpRequest)
  isExtensionMethod: true
  parent: Hybrid.AspNetCore.Extensions.HttpRequestExtensions
  langs:
  - csharp
  - vb
  name: IsJsonContextType(HttpRequest)
  nameWithType: HttpRequestExtensions.IsJsonContextType(HttpRequest)
  fullName: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsJsonContextType(Microsoft.AspNetCore.Http.HttpRequest)
  type: Method
  source:
    remote:
      path: src/Hybrid.AspNetCore/Extensions/HttpRequestExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: IsJsonContextType
    path: ../src/Hybrid.AspNetCore/Extensions/HttpRequestExtensions.cs
    startLine: 42
  assemblies:
  - Hybrid.AspNetCore
  namespace: Hybrid.AspNetCore.Extensions
  summary: "\n确定指定的 HTTP 请求的 ContextType 是否为 Json 方式\n"
  example: []
  syntax:
    content: public static bool IsJsonContextType(this HttpRequest request)
    parameters:
    - id: request
      type: Microsoft.AspNetCore.Http.HttpRequest
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsJsonContextType(request As HttpRequest) As Boolean
  overload: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsJsonContextType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.Params(Microsoft.AspNetCore.Http.HttpRequest,System.String)
  commentId: M:Hybrid.AspNetCore.Extensions.HttpRequestExtensions.Params(Microsoft.AspNetCore.Http.HttpRequest,System.String)
  id: Params(Microsoft.AspNetCore.Http.HttpRequest,System.String)
  isExtensionMethod: true
  parent: Hybrid.AspNetCore.Extensions.HttpRequestExtensions
  langs:
  - csharp
  - vb
  name: Params(HttpRequest, String)
  nameWithType: HttpRequestExtensions.Params(HttpRequest, String)
  fullName: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.Params(Microsoft.AspNetCore.Http.HttpRequest, System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid.AspNetCore/Extensions/HttpRequestExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Params
    path: ../src/Hybrid.AspNetCore/Extensions/HttpRequestExtensions.cs
    startLine: 62
  assemblies:
  - Hybrid.AspNetCore
  namespace: Hybrid.AspNetCore.Extensions
  summary: "\n获取<xref href=\"Microsoft.AspNetCore.Http.HttpRequest\" data-throw-if-not-resolved=\"false\"></xref>的请求数据\n"
  example: []
  syntax:
    content: public static string Params(this HttpRequest request, string key)
    parameters:
    - id: request
      type: Microsoft.AspNetCore.Http.HttpRequest
      description: 请求信息
    - id: key
      type: System.String
      description: 要获取数据的键名
    return:
      type: System.String
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Params(request As HttpRequest, key As String) As String
  overload: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.Params*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Hybrid.AspNetCore.Extensions
  commentId: N:Hybrid.AspNetCore.Extensions
  name: Hybrid.AspNetCore.Extensions
  nameWithType: Hybrid.AspNetCore.Extensions
  fullName: Hybrid.AspNetCore.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsAjaxRequest*
  commentId: Overload:Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsAjaxRequest
  name: IsAjaxRequest
  nameWithType: HttpRequestExtensions.IsAjaxRequest
  fullName: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsAjaxRequest
- uid: Microsoft.AspNetCore.Http.HttpRequest
  commentId: T:Microsoft.AspNetCore.Http.HttpRequest
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Microsoft.AspNetCore.Http.HttpRequest
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsJsonContextType*
  commentId: Overload:Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsJsonContextType
  name: IsJsonContextType
  nameWithType: HttpRequestExtensions.IsJsonContextType
  fullName: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.IsJsonContextType
- uid: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.Params*
  commentId: Overload:Hybrid.AspNetCore.Extensions.HttpRequestExtensions.Params
  name: Params
  nameWithType: HttpRequestExtensions.Params
  fullName: Hybrid.AspNetCore.Extensions.HttpRequestExtensions.Params
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
