### YamlMime:ManagedReference
items:
- uid: Hybrid.Core.Options.AppSettingsReader
  commentId: T:Hybrid.Core.Options.AppSettingsReader
  id: AppSettingsReader
  parent: Hybrid.Core.Options
  children:
  - Hybrid.Core.Options.AppSettingsReader.GetInstance``1(System.String,``0)
  - Hybrid.Core.Options.AppSettingsReader.GetString(System.String)
  - Hybrid.Core.Options.AppSettingsReader.GetValue``1(System.String,``0)
  langs:
  - csharp
  - vb
  name: AppSettingsReader
  nameWithType: AppSettingsReader
  fullName: Hybrid.Core.Options.AppSettingsReader
  type: Class
  source:
    remote:
      path: src/Hybrid/Core/Options/AppSettingsManager.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: AppSettingsReader
    path: ../src/Hybrid/Core/Options/AppSettingsManager.cs
    startLine: 20
  assemblies:
  - Hybrid
  namespace: Hybrid.Core.Options
  summary: "\nappsettings配置文件读取器\n"
  example: []
  syntax:
    content: public static class AppSettingsReader
    content.vb: Public Module AppSettingsReader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Core.Options.AppSettingsReader.GetString(System.String)
  commentId: M:Hybrid.Core.Options.AppSettingsReader.GetString(System.String)
  id: GetString(System.String)
  parent: Hybrid.Core.Options.AppSettingsReader
  langs:
  - csharp
  - vb
  name: GetString(String)
  nameWithType: AppSettingsReader.GetString(String)
  fullName: Hybrid.Core.Options.AppSettingsReader.GetString(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Core/Options/AppSettingsManager.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetString
    path: ../src/Hybrid/Core/Options/AppSettingsManager.cs
    startLine: 41
  assemblies:
  - Hybrid
  namespace: Hybrid.Core.Options
  summary: "\n读取指定节点信息\n"
  example: []
  syntax:
    content: public static string GetString(string key)
    parameters:
    - id: key
      type: System.String
      description: 节点名称，多节点以:分隔
    return:
      type: System.String
    content.vb: Public Shared Function GetString(key As String) As String
  overload: Hybrid.Core.Options.AppSettingsReader.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Core.Options.AppSettingsReader.GetValue``1(System.String,``0)
  commentId: M:Hybrid.Core.Options.AppSettingsReader.GetValue``1(System.String,``0)
  id: GetValue``1(System.String,``0)
  parent: Hybrid.Core.Options.AppSettingsReader
  langs:
  - csharp
  - vb
  name: GetValue<T>(String, T)
  nameWithType: AppSettingsReader.GetValue<T>(String, T)
  fullName: Hybrid.Core.Options.AppSettingsReader.GetValue<T>(System.String, T)
  type: Method
  source:
    remote:
      path: src/Hybrid/Core/Options/AppSettingsManager.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetValue
    path: ../src/Hybrid/Core/Options/AppSettingsManager.cs
    startLine: 51
  assemblies:
  - Hybrid
  namespace: Hybrid.Core.Options
  summary: "\n读取指定节点的简单数据类型的值\n"
  example: []
  syntax:
    content: public static T GetValue<T>(string key, T defaultValue = null)
    parameters:
    - id: key
      type: System.String
      description: 节点名称，多节点以:分隔
    - id: defaultValue
      type: '{T}'
      description: 默认值，读取失败时使用
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetValue(Of T)(key As String, defaultValue As T = Nothing) As T
  overload: Hybrid.Core.Options.AppSettingsReader.GetValue*
  nameWithType.vb: AppSettingsReader.GetValue(Of T)(String, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Hybrid.Core.Options.AppSettingsReader.GetValue(Of T)(System.String, T)
  name.vb: GetValue(Of T)(String, T)
- uid: Hybrid.Core.Options.AppSettingsReader.GetInstance``1(System.String,``0)
  commentId: M:Hybrid.Core.Options.AppSettingsReader.GetInstance``1(System.String,``0)
  id: GetInstance``1(System.String,``0)
  parent: Hybrid.Core.Options.AppSettingsReader
  langs:
  - csharp
  - vb
  name: GetInstance<T>(String, T)
  nameWithType: AppSettingsReader.GetInstance<T>(String, T)
  fullName: Hybrid.Core.Options.AppSettingsReader.GetInstance<T>(System.String, T)
  type: Method
  source:
    remote:
      path: src/Hybrid/Core/Options/AppSettingsManager.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetInstance
    path: ../src/Hybrid/Core/Options/AppSettingsManager.cs
    startLine: 64
  assemblies:
  - Hybrid
  namespace: Hybrid.Core.Options
  summary: "\n读取指定节点的复杂类型的值，并绑定到指定的空实例上\n"
  example: []
  syntax:
    content: public static T GetInstance<T>(string key, T instance)
    parameters:
    - id: key
      type: System.String
      description: 节点名称，多节点以:分隔
    - id: instance
      type: '{T}'
      description: 要绑定的空实例
    typeParameters:
    - id: T
      description: 复杂类型
    return:
      type: '{T}'
      description: ''
    content.vb: Public Shared Function GetInstance(Of T)(key As String, instance As T) As T
  overload: Hybrid.Core.Options.AppSettingsReader.GetInstance*
  nameWithType.vb: AppSettingsReader.GetInstance(Of T)(String, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Hybrid.Core.Options.AppSettingsReader.GetInstance(Of T)(System.String, T)
  name.vb: GetInstance(Of T)(String, T)
references:
- uid: Hybrid.Core.Options
  commentId: N:Hybrid.Core.Options
  name: Hybrid.Core.Options
  nameWithType: Hybrid.Core.Options
  fullName: Hybrid.Core.Options
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Core.Options.AppSettingsReader.GetString*
  commentId: Overload:Hybrid.Core.Options.AppSettingsReader.GetString
  name: GetString
  nameWithType: AppSettingsReader.GetString
  fullName: Hybrid.Core.Options.AppSettingsReader.GetString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hybrid.Core.Options.AppSettingsReader.GetValue*
  commentId: Overload:Hybrid.Core.Options.AppSettingsReader.GetValue
  name: GetValue
  nameWithType: AppSettingsReader.GetValue
  fullName: Hybrid.Core.Options.AppSettingsReader.GetValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Hybrid.Core.Options.AppSettingsReader.GetInstance*
  commentId: Overload:Hybrid.Core.Options.AppSettingsReader.GetInstance
  name: GetInstance
  nameWithType: AppSettingsReader.GetInstance
  fullName: Hybrid.Core.Options.AppSettingsReader.GetInstance
