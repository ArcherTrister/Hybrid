### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions
  commentId: T:Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions
  id: FileLoggerFactoryExtensions
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile(Microsoft.Extensions.Logging.ILoggingBuilder)
  - Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Hybrid.Logging.RollingFile.FileLoggerOptions})
  - Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile(Microsoft.Extensions.Logging.ILoggingBuilder,System.String)
  langs:
  - csharp
  - vb
  name: FileLoggerFactoryExtensions
  nameWithType: FileLoggerFactoryExtensions
  fullName: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions
  type: Class
  source:
    remote:
      path: src/Hybrid/Logging/RollingFile/FileLoggerFactoryExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: FileLoggerFactoryExtensions
    path: ../src/Hybrid/Logging/RollingFile/FileLoggerFactoryExtensions.cs
    startLine: 21
  assemblies:
  - Hybrid
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nExtensions for adding the <xref href=\"Hybrid.Logging.RollingFile.FileLoggerProvider\" data-throw-if-not-resolved=\"false\"></xref> to the <xref href=\"Microsoft.Extensions.Logging.ILoggingBuilder\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static class FileLoggerFactoryExtensions
    content.vb: Public Module FileLoggerFactoryExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile(Microsoft.Extensions.Logging.ILoggingBuilder)
  commentId: M:Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile(Microsoft.Extensions.Logging.ILoggingBuilder)
  id: AddFile(Microsoft.Extensions.Logging.ILoggingBuilder)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions
  langs:
  - csharp
  - vb
  name: AddFile(ILoggingBuilder)
  nameWithType: FileLoggerFactoryExtensions.AddFile(ILoggingBuilder)
  fullName: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile(Microsoft.Extensions.Logging.ILoggingBuilder)
  type: Method
  source:
    remote:
      path: src/Hybrid/Logging/RollingFile/FileLoggerFactoryExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: AddFile
    path: ../src/Hybrid/Logging/RollingFile/FileLoggerFactoryExtensions.cs
    startLine: 27
  assemblies:
  - Hybrid
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nAdds a file logger named &apos;File&apos; to the factory.\n"
  example: []
  syntax:
    content: public static ILoggingBuilder AddFile(this ILoggingBuilder builder)
    parameters:
    - id: builder
      type: Microsoft.Extensions.Logging.ILoggingBuilder
      description: The <xref href="Microsoft.Extensions.Logging.ILoggingBuilder" data-throw-if-not-resolved="false"></xref> to use.
    return:
      type: Microsoft.Extensions.Logging.ILoggingBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddFile(builder As ILoggingBuilder) As ILoggingBuilder
  overload: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile(Microsoft.Extensions.Logging.ILoggingBuilder,System.String)
  commentId: M:Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile(Microsoft.Extensions.Logging.ILoggingBuilder,System.String)
  id: AddFile(Microsoft.Extensions.Logging.ILoggingBuilder,System.String)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions
  langs:
  - csharp
  - vb
  name: AddFile(ILoggingBuilder, String)
  nameWithType: FileLoggerFactoryExtensions.AddFile(ILoggingBuilder, String)
  fullName: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile(Microsoft.Extensions.Logging.ILoggingBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Logging/RollingFile/FileLoggerFactoryExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: AddFile
    path: ../src/Hybrid/Logging/RollingFile/FileLoggerFactoryExtensions.cs
    startLine: 38
  assemblies:
  - Hybrid
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nAdds a file logger named &apos;File&apos; to the factory.\n"
  example: []
  syntax:
    content: public static ILoggingBuilder AddFile(this ILoggingBuilder builder, string filename)
    parameters:
    - id: builder
      type: Microsoft.Extensions.Logging.ILoggingBuilder
      description: The <xref href="Microsoft.Extensions.Logging.ILoggingBuilder" data-throw-if-not-resolved="false"></xref> to use.
    - id: filename
      type: System.String
      description: Sets the filename prefix to use for log files
    return:
      type: Microsoft.Extensions.Logging.ILoggingBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddFile(builder As ILoggingBuilder, filename As String) As ILoggingBuilder
  overload: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Hybrid.Logging.RollingFile.FileLoggerOptions})
  commentId: M:Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Hybrid.Logging.RollingFile.FileLoggerOptions})
  id: AddFile(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Hybrid.Logging.RollingFile.FileLoggerOptions})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions
  langs:
  - csharp
  - vb
  name: AddFile(ILoggingBuilder, Action<FileLoggerOptions>)
  nameWithType: FileLoggerFactoryExtensions.AddFile(ILoggingBuilder, Action<FileLoggerOptions>)
  fullName: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile(Microsoft.Extensions.Logging.ILoggingBuilder, System.Action<Hybrid.Logging.RollingFile.FileLoggerOptions>)
  type: Method
  source:
    remote:
      path: src/Hybrid/Logging/RollingFile/FileLoggerFactoryExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: AddFile
    path: ../src/Hybrid/Logging/RollingFile/FileLoggerFactoryExtensions.cs
    startLine: 52
  assemblies:
  - Hybrid
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nAdds a file logger named &apos;File&apos; to the factory.\n"
  example: []
  syntax:
    content: public static ILoggingBuilder AddFile(this ILoggingBuilder builder, Action<FileLoggerOptions> configure)
    parameters:
    - id: builder
      type: Microsoft.Extensions.Logging.ILoggingBuilder
      description: The <xref href="Microsoft.Extensions.Logging.ILoggingBuilder" data-throw-if-not-resolved="false"></xref> to use.
    - id: configure
      type: System.Action{Hybrid.Logging.RollingFile.FileLoggerOptions}
      description: Configure an instance of the <xref href="Hybrid.Logging.RollingFile.FileLoggerOptions" data-throw-if-not-resolved="false"></xref> to set logging options
    return:
      type: Microsoft.Extensions.Logging.ILoggingBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddFile(builder As ILoggingBuilder, configure As Action(Of FileLoggerOptions)) As ILoggingBuilder
  overload: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile*
  nameWithType.vb: FileLoggerFactoryExtensions.AddFile(ILoggingBuilder, Action(Of FileLoggerOptions))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile(Microsoft.Extensions.Logging.ILoggingBuilder, System.Action(Of Hybrid.Logging.RollingFile.FileLoggerOptions))
  name.vb: AddFile(ILoggingBuilder, Action(Of FileLoggerOptions))
references:
- uid: Hybrid.Logging.RollingFile.FileLoggerProvider
  commentId: T:Hybrid.Logging.RollingFile.FileLoggerProvider
  name: FileLoggerProvider
  nameWithType: FileLoggerProvider
  fullName: Hybrid.Logging.RollingFile.FileLoggerProvider
- uid: Microsoft.Extensions.Logging.ILoggingBuilder
  commentId: T:Microsoft.Extensions.Logging.ILoggingBuilder
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggingBuilder
  nameWithType: ILoggingBuilder
  fullName: Microsoft.Extensions.Logging.ILoggingBuilder
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile
  name: AddFile
  nameWithType: FileLoggerFactoryExtensions.AddFile
  fullName: Microsoft.Extensions.DependencyInjection.FileLoggerFactoryExtensions.AddFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hybrid.Logging.RollingFile.FileLoggerOptions
  commentId: T:Hybrid.Logging.RollingFile.FileLoggerOptions
  name: FileLoggerOptions
  nameWithType: FileLoggerOptions
  fullName: Hybrid.Logging.RollingFile.FileLoggerOptions
- uid: System.Action{Hybrid.Logging.RollingFile.FileLoggerOptions}
  commentId: T:System.Action{Hybrid.Logging.RollingFile.FileLoggerOptions}
  parent: System
  definition: System.Action`1
  name: Action<FileLoggerOptions>
  nameWithType: Action<FileLoggerOptions>
  fullName: System.Action<Hybrid.Logging.RollingFile.FileLoggerOptions>
  nameWithType.vb: Action(Of FileLoggerOptions)
  fullName.vb: System.Action(Of Hybrid.Logging.RollingFile.FileLoggerOptions)
  name.vb: Action(Of FileLoggerOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Logging.RollingFile.FileLoggerOptions
    name: FileLoggerOptions
    nameWithType: FileLoggerOptions
    fullName: Hybrid.Logging.RollingFile.FileLoggerOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Logging.RollingFile.FileLoggerOptions
    name: FileLoggerOptions
    nameWithType: FileLoggerOptions
    fullName: Hybrid.Logging.RollingFile.FileLoggerOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
