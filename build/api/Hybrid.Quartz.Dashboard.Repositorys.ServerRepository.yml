### YamlMime:ManagedReference
items:
- uid: Hybrid.Quartz.Dashboard.Repositorys.ServerRepository
  commentId: T:Hybrid.Quartz.Dashboard.Repositorys.ServerRepository
  id: ServerRepository
  parent: Hybrid.Quartz.Dashboard.Repositorys
  children:
  - Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.Lookup(System.String)
  - Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.LookupAll
  langs:
  - csharp
  - vb
  name: ServerRepository
  nameWithType: ServerRepository
  fullName: Hybrid.Quartz.Dashboard.Repositorys.ServerRepository
  type: Class
  source:
    remote:
      path: src/Hybrid.Quartz/Dashboard/Repositorys/ServerRepository.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ServerRepository
    path: ../src/Hybrid.Quartz/Dashboard/Repositorys/ServerRepository.cs
    startLine: 8
  assemblies:
  - Hybrid.Quartz
  namespace: Hybrid.Quartz.Dashboard.Repositorys
  syntax:
    content: public static class ServerRepository
    content.vb: Public Module ServerRepository
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.Lookup(System.String)
  commentId: M:Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.Lookup(System.String)
  id: Lookup(System.String)
  parent: Hybrid.Quartz.Dashboard.Repositorys.ServerRepository
  langs:
  - csharp
  - vb
  name: Lookup(String)
  nameWithType: ServerRepository.Lookup(String)
  fullName: Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.Lookup(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid.Quartz/Dashboard/Repositorys/ServerRepository.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Lookup
    path: ../src/Hybrid.Quartz/Dashboard/Repositorys/ServerRepository.cs
    startLine: 22
  assemblies:
  - Hybrid.Quartz
  namespace: Hybrid.Quartz.Dashboard.Repositorys
  syntax:
    content: public static Server Lookup(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Hybrid.Quartz.Dashboard.Models.Server
    content.vb: Public Shared Function Lookup(name As String) As Server
  overload: Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.Lookup*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.LookupAll
  commentId: M:Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.LookupAll
  id: LookupAll
  parent: Hybrid.Quartz.Dashboard.Repositorys.ServerRepository
  langs:
  - csharp
  - vb
  name: LookupAll()
  nameWithType: ServerRepository.LookupAll()
  fullName: Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.LookupAll()
  type: Method
  source:
    remote:
      path: src/Hybrid.Quartz/Dashboard/Repositorys/ServerRepository.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: LookupAll
    path: ../src/Hybrid.Quartz/Dashboard/Repositorys/ServerRepository.cs
    startLine: 27
  assemblies:
  - Hybrid.Quartz
  namespace: Hybrid.Quartz.Dashboard.Repositorys
  syntax:
    content: public static IReadOnlyList<Server> LookupAll()
    return:
      type: System.Collections.Generic.IReadOnlyList{Hybrid.Quartz.Dashboard.Models.Server}
    content.vb: Public Shared Function LookupAll As IReadOnlyList(Of Server)
  overload: Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.LookupAll*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Hybrid.Quartz.Dashboard.Repositorys
  commentId: N:Hybrid.Quartz.Dashboard.Repositorys
  name: Hybrid.Quartz.Dashboard.Repositorys
  nameWithType: Hybrid.Quartz.Dashboard.Repositorys
  fullName: Hybrid.Quartz.Dashboard.Repositorys
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.Lookup*
  commentId: Overload:Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.Lookup
  name: Lookup
  nameWithType: ServerRepository.Lookup
  fullName: Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.Lookup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hybrid.Quartz.Dashboard.Models.Server
  commentId: T:Hybrid.Quartz.Dashboard.Models.Server
  parent: Hybrid.Quartz.Dashboard.Models
  name: Server
  nameWithType: Server
  fullName: Hybrid.Quartz.Dashboard.Models.Server
- uid: Hybrid.Quartz.Dashboard.Models
  commentId: N:Hybrid.Quartz.Dashboard.Models
  name: Hybrid.Quartz.Dashboard.Models
  nameWithType: Hybrid.Quartz.Dashboard.Models
  fullName: Hybrid.Quartz.Dashboard.Models
- uid: Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.LookupAll*
  commentId: Overload:Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.LookupAll
  name: LookupAll
  nameWithType: ServerRepository.LookupAll
  fullName: Hybrid.Quartz.Dashboard.Repositorys.ServerRepository.LookupAll
- uid: System.Collections.Generic.IReadOnlyList{Hybrid.Quartz.Dashboard.Models.Server}
  commentId: T:System.Collections.Generic.IReadOnlyList{Hybrid.Quartz.Dashboard.Models.Server}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Server>
  nameWithType: IReadOnlyList<Server>
  fullName: System.Collections.Generic.IReadOnlyList<Hybrid.Quartz.Dashboard.Models.Server>
  nameWithType.vb: IReadOnlyList(Of Server)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Hybrid.Quartz.Dashboard.Models.Server)
  name.vb: IReadOnlyList(Of Server)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Quartz.Dashboard.Models.Server
    name: Server
    nameWithType: Server
    fullName: Hybrid.Quartz.Dashboard.Models.Server
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Quartz.Dashboard.Models.Server
    name: Server
    nameWithType: Server
    fullName: Hybrid.Quartz.Dashboard.Models.Server
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
