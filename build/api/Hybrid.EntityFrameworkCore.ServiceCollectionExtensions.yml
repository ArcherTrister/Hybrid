### YamlMime:ManagedReference
items:
- uid: Hybrid.EntityFrameworkCore.ServiceCollectionExtensions
  commentId: T:Hybrid.EntityFrameworkCore.ServiceCollectionExtensions
  id: ServiceCollectionExtensions
  parent: Hybrid.EntityFrameworkCore
  children:
  - Hybrid.EntityFrameworkCore.ServiceCollectionExtensions.AddHybridDbContext``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder})
  langs:
  - csharp
  - vb
  name: ServiceCollectionExtensions
  nameWithType: ServiceCollectionExtensions
  fullName: Hybrid.EntityFrameworkCore.ServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: src/Hybrid.EntityFrameworkCore/ServiceCollectionExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ServiceCollectionExtensions
    path: ../src/Hybrid.EntityFrameworkCore/ServiceCollectionExtensions.cs
    startLine: 28
  assemblies:
  - Hybrid.EntityFrameworkCore
  namespace: Hybrid.EntityFrameworkCore
  summary: "\n依赖注入服务集合扩展\n"
  example: []
  syntax:
    content: public static class ServiceCollectionExtensions
    content.vb: Public Module ServiceCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.EntityFrameworkCore.ServiceCollectionExtensions.AddHybridDbContext``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder})
  commentId: M:Hybrid.EntityFrameworkCore.ServiceCollectionExtensions.AddHybridDbContext``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder})
  id: AddHybridDbContext``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder})
  isExtensionMethod: true
  parent: Hybrid.EntityFrameworkCore.ServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddHybridDbContext<TDbContext>(IServiceCollection, Action<IServiceProvider, DbContextOptionsBuilder>)
  nameWithType: ServiceCollectionExtensions.AddHybridDbContext<TDbContext>(IServiceCollection, Action<IServiceProvider, DbContextOptionsBuilder>)
  fullName: Hybrid.EntityFrameworkCore.ServiceCollectionExtensions.AddHybridDbContext<TDbContext>(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action<System.IServiceProvider, Microsoft.EntityFrameworkCore.DbContextOptionsBuilder>)
  type: Method
  source:
    remote:
      path: src/Hybrid.EntityFrameworkCore/ServiceCollectionExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: AddHybridDbContext
    path: ../src/Hybrid.EntityFrameworkCore/ServiceCollectionExtensions.cs
    startLine: 37
  assemblies:
  - Hybrid.EntityFrameworkCore
  namespace: Hybrid.EntityFrameworkCore
  summary: "\n将基于Hybrid数据上下文基类<xref href=\"Hybrid.EntityFrameworkCore.DbContextBase\" data-throw-if-not-resolved=\"false\"></xref>上下文类型添加到服务集合中\n"
  example: []
  syntax:
    content: >-
      public static IServiceCollection AddHybridDbContext<TDbContext>(this IServiceCollection services, Action<IServiceProvider, DbContextOptionsBuilder> optionsAction = null)

          where TDbContext : DbContextBase
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: 依赖注入服务集合
    - id: optionsAction
      type: System.Action{System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder}
      description: 数据库选项创建配置，将在内置配置后运行
    typeParameters:
    - id: TDbContext
      description: 基于Hybrid数据上下文基类<xref href="Hybrid.EntityFrameworkCore.DbContextBase" data-throw-if-not-resolved="false"></xref>上下文类型
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: 依赖注入服务集合
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddHybridDbContext(Of TDbContext As DbContextBase)(services As IServiceCollection, optionsAction As Action(Of IServiceProvider, DbContextOptionsBuilder) = Nothing) As IServiceCollection
  overload: Hybrid.EntityFrameworkCore.ServiceCollectionExtensions.AddHybridDbContext*
  nameWithType.vb: ServiceCollectionExtensions.AddHybridDbContext(Of TDbContext)(IServiceCollection, Action(Of IServiceProvider, DbContextOptionsBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Hybrid.EntityFrameworkCore.ServiceCollectionExtensions.AddHybridDbContext(Of TDbContext)(Microsoft.Extensions.DependencyInjection.IServiceCollection, System.Action(Of System.IServiceProvider, Microsoft.EntityFrameworkCore.DbContextOptionsBuilder))
  name.vb: AddHybridDbContext(Of TDbContext)(IServiceCollection, Action(Of IServiceProvider, DbContextOptionsBuilder))
references:
- uid: Hybrid.EntityFrameworkCore
  commentId: N:Hybrid.EntityFrameworkCore
  name: Hybrid.EntityFrameworkCore
  nameWithType: Hybrid.EntityFrameworkCore
  fullName: Hybrid.EntityFrameworkCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.EntityFrameworkCore.DbContextBase
  commentId: T:Hybrid.EntityFrameworkCore.DbContextBase
  parent: Hybrid.EntityFrameworkCore
  name: DbContextBase
  nameWithType: DbContextBase
  fullName: Hybrid.EntityFrameworkCore.DbContextBase
- uid: Hybrid.EntityFrameworkCore.ServiceCollectionExtensions.AddHybridDbContext*
  commentId: Overload:Hybrid.EntityFrameworkCore.ServiceCollectionExtensions.AddHybridDbContext
  name: AddHybridDbContext
  nameWithType: ServiceCollectionExtensions.AddHybridDbContext
  fullName: Hybrid.EntityFrameworkCore.ServiceCollectionExtensions.AddHybridDbContext
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: System.Action{System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder}
  commentId: T:System.Action{System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder}
  parent: System
  definition: System.Action`2
  name: Action<IServiceProvider, DbContextOptionsBuilder>
  nameWithType: Action<IServiceProvider, DbContextOptionsBuilder>
  fullName: System.Action<System.IServiceProvider, Microsoft.EntityFrameworkCore.DbContextOptionsBuilder>
  nameWithType.vb: Action(Of IServiceProvider, DbContextOptionsBuilder)
  fullName.vb: System.Action(Of System.IServiceProvider, Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)
  name.vb: Action(Of IServiceProvider, DbContextOptionsBuilder)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: Microsoft.EntityFrameworkCore.DbContextOptionsBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
