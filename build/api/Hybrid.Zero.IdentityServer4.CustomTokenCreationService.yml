### YamlMime:ManagedReference
items:
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  commentId: T:Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  id: CustomTokenCreationService
  parent: Hybrid.Zero.IdentityServer4
  children:
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.#ctor(IdentityServer4.Stores.IPersistedGrantStore,IdentityServer4.Stores.Serialization.IPersistentGrantSerializer,Microsoft.AspNetCore.Authentication.ISystemClock,IdentityServer4.Services.IKeyMaterialService,IdentityServer4.Configuration.IdentityServerOptions,Microsoft.Extensions.Logging.ILogger{IdentityServer4.Services.DefaultTokenCreationService})
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Clock
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateHeaderAsync(IdentityServer4.Models.Token)
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateJwtAsync(System.IdentityModel.Tokens.Jwt.JwtSecurityToken,IdentityServer4.Models.Token)
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreatePayloadAsync(IdentityServer4.Models.Token)
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateTokenAsync(IdentityServer4.Models.Token)
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.GetHashedKey(System.String)
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Keys
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Logger
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Options
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Serializer
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Store
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.StoreItemAsync(System.String,IdentityServer4.Models.Token,System.String,System.String,System.DateTime,System.Int32)
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.StoreItemAsync(System.String,IdentityServer4.Models.Token,System.String,System.String,System.DateTime,System.Nullable{System.DateTime})
  langs:
  - csharp
  - vb
  name: CustomTokenCreationService
  nameWithType: CustomTokenCreationService
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  type: Class
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: CustomTokenCreationService
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 31
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nCustom token creation service\n"
  example: []
  syntax:
    content: 'public class CustomTokenCreationService : ITokenCreationService'
    content.vb: >-
      Public Class CustomTokenCreationService
          Implements ITokenCreationService
  inheritance:
  - System.Object
  implements:
  - IdentityServer4.Services.ITokenCreationService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Zero.IdentityServer4.CustomTokenCreationService[])
  - System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Zero.IdentityServer4.CustomTokenCreationService,System.Boolean},System.String)
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Zero.IdentityServer4.CustomTokenCreationService,System.Boolean},System.String)
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.IdentityServer4.CustomTokenCreationService},System.Action{System.Exception},System.Action{Hybrid.Zero.IdentityServer4.CustomTokenCreationService})
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.IdentityServer4.CustomTokenCreationService},System.Action{System.Exception})
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.IdentityServer4.CustomTokenCreationService,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Zero.IdentityServer4.CustomTokenCreationService})
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.IdentityServer4.CustomTokenCreationService,{TResult}},System.Action{System.Exception})
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Zero.IdentityServer4.CustomTokenCreationService},System.Action{Hybrid.Zero.IdentityServer4.CustomTokenCreationService})
  - System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  - System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Zero.IdentityServer4.CustomTokenCreationService})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Zero.IdentityServer4.CustomTokenCreationService,{TResult}})
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Store
  commentId: F:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Store
  id: Store
  parent: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  langs:
  - csharp
  - vb
  name: Store
  nameWithType: CustomTokenCreationService.Store
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Store
  type: Field
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Store
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 36
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nThe PersistedGrantStore.\n"
  example: []
  syntax:
    content: protected readonly IPersistedGrantStore Store
    return:
      type: IdentityServer4.Stores.IPersistedGrantStore
    content.vb: Protected ReadOnly Store As IPersistedGrantStore
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Serializer
  commentId: F:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Serializer
  id: Serializer
  parent: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  langs:
  - csharp
  - vb
  name: Serializer
  nameWithType: CustomTokenCreationService.Serializer
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Serializer
  type: Field
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Serializer
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 41
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nThe PersistentGrantSerializer;\n"
  example: []
  syntax:
    content: protected readonly IPersistentGrantSerializer Serializer
    return:
      type: IdentityServer4.Stores.Serialization.IPersistentGrantSerializer
    content.vb: Protected ReadOnly Serializer As IPersistentGrantSerializer
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Keys
  commentId: F:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Keys
  id: Keys
  parent: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: CustomTokenCreationService.Keys
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Keys
  type: Field
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Keys
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 46
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nThe key service\n"
  example: []
  syntax:
    content: protected readonly IKeyMaterialService Keys
    return:
      type: IdentityServer4.Services.IKeyMaterialService
    content.vb: Protected ReadOnly Keys As IKeyMaterialService
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Logger
  commentId: F:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Logger
  id: Logger
  parent: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: CustomTokenCreationService.Logger
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Logger
  type: Field
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Logger
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 51
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nThe logger\n"
  example: []
  syntax:
    content: protected readonly ILogger Logger
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Protected ReadOnly Logger As ILogger
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Clock
  commentId: F:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Clock
  id: Clock
  parent: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  langs:
  - csharp
  - vb
  name: Clock
  nameWithType: CustomTokenCreationService.Clock
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Clock
  type: Field
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Clock
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 56
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nThe clock\n"
  example: []
  syntax:
    content: protected readonly ISystemClock Clock
    return:
      type: Microsoft.AspNetCore.Authentication.ISystemClock
    content.vb: Protected ReadOnly Clock As ISystemClock
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Options
  commentId: F:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Options
  id: Options
  parent: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: CustomTokenCreationService.Options
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Options
  type: Field
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Options
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 61
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nThe options\n"
  example: []
  syntax:
    content: protected readonly IdentityServerOptions Options
    return:
      type: IdentityServer4.Configuration.IdentityServerOptions
    content.vb: Protected ReadOnly Options As IdentityServerOptions
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.#ctor(IdentityServer4.Stores.IPersistedGrantStore,IdentityServer4.Stores.Serialization.IPersistentGrantSerializer,Microsoft.AspNetCore.Authentication.ISystemClock,IdentityServer4.Services.IKeyMaterialService,IdentityServer4.Configuration.IdentityServerOptions,Microsoft.Extensions.Logging.ILogger{IdentityServer4.Services.DefaultTokenCreationService})
  commentId: M:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.#ctor(IdentityServer4.Stores.IPersistedGrantStore,IdentityServer4.Stores.Serialization.IPersistentGrantSerializer,Microsoft.AspNetCore.Authentication.ISystemClock,IdentityServer4.Services.IKeyMaterialService,IdentityServer4.Configuration.IdentityServerOptions,Microsoft.Extensions.Logging.ILogger{IdentityServer4.Services.DefaultTokenCreationService})
  id: '#ctor(IdentityServer4.Stores.IPersistedGrantStore,IdentityServer4.Stores.Serialization.IPersistentGrantSerializer,Microsoft.AspNetCore.Authentication.ISystemClock,IdentityServer4.Services.IKeyMaterialService,IdentityServer4.Configuration.IdentityServerOptions,Microsoft.Extensions.Logging.ILogger{IdentityServer4.Services.DefaultTokenCreationService})'
  parent: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  langs:
  - csharp
  - vb
  name: CustomTokenCreationService(IPersistedGrantStore, IPersistentGrantSerializer, ISystemClock, IKeyMaterialService, IdentityServerOptions, ILogger<DefaultTokenCreationService>)
  nameWithType: CustomTokenCreationService.CustomTokenCreationService(IPersistedGrantStore, IPersistentGrantSerializer, ISystemClock, IKeyMaterialService, IdentityServerOptions, ILogger<DefaultTokenCreationService>)
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CustomTokenCreationService(IdentityServer4.Stores.IPersistedGrantStore, IdentityServer4.Stores.Serialization.IPersistentGrantSerializer, Microsoft.AspNetCore.Authentication.ISystemClock, IdentityServer4.Services.IKeyMaterialService, IdentityServer4.Configuration.IdentityServerOptions, Microsoft.Extensions.Logging.ILogger<IdentityServer4.Services.DefaultTokenCreationService>)
  type: Constructor
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: .ctor
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 72
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nInitializes a new instance of the <xref href=\"IdentityServer4.Services.DefaultTokenCreationService\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CustomTokenCreationService(IPersistedGrantStore store, IPersistentGrantSerializer serializer, ISystemClock clock, IKeyMaterialService keys, IdentityServerOptions options, ILogger<DefaultTokenCreationService> logger)
    parameters:
    - id: store
      type: IdentityServer4.Stores.IPersistedGrantStore
      description: The store.
    - id: serializer
      type: IdentityServer4.Stores.Serialization.IPersistentGrantSerializer
      description: The serializer.
    - id: clock
      type: Microsoft.AspNetCore.Authentication.ISystemClock
      description: The options.
    - id: keys
      type: IdentityServer4.Services.IKeyMaterialService
      description: The keys.
    - id: options
      type: IdentityServer4.Configuration.IdentityServerOptions
      description: The options.
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{IdentityServer4.Services.DefaultTokenCreationService}
      description: The logger.
    content.vb: Public Sub New(store As IPersistedGrantStore, serializer As IPersistentGrantSerializer, clock As ISystemClock, keys As IKeyMaterialService, options As IdentityServerOptions, logger As ILogger(Of DefaultTokenCreationService))
  overload: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.#ctor*
  nameWithType.vb: CustomTokenCreationService.CustomTokenCreationService(IPersistedGrantStore, IPersistentGrantSerializer, ISystemClock, IKeyMaterialService, IdentityServerOptions, ILogger(Of DefaultTokenCreationService))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CustomTokenCreationService(IdentityServer4.Stores.IPersistedGrantStore, IdentityServer4.Stores.Serialization.IPersistentGrantSerializer, Microsoft.AspNetCore.Authentication.ISystemClock, IdentityServer4.Services.IKeyMaterialService, IdentityServer4.Configuration.IdentityServerOptions, Microsoft.Extensions.Logging.ILogger(Of IdentityServer4.Services.DefaultTokenCreationService))
  name.vb: CustomTokenCreationService(IPersistedGrantStore, IPersistentGrantSerializer, ISystemClock, IKeyMaterialService, IdentityServerOptions, ILogger(Of DefaultTokenCreationService))
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateTokenAsync(IdentityServer4.Models.Token)
  commentId: M:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateTokenAsync(IdentityServer4.Models.Token)
  id: CreateTokenAsync(IdentityServer4.Models.Token)
  parent: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  langs:
  - csharp
  - vb
  name: CreateTokenAsync(Token)
  nameWithType: CustomTokenCreationService.CreateTokenAsync(Token)
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateTokenAsync(IdentityServer4.Models.Token)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: CreateTokenAsync
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 95
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nCreates the token.\n"
  example: []
  syntax:
    content: public virtual Task<string> CreateTokenAsync(Token token)
    parameters:
    - id: token
      type: IdentityServer4.Models.Token
      description: The token.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: "\nA protected and serialized security token\n"
    content.vb: Public Overridable Function CreateTokenAsync(token As Token) As Task(Of String)
  overload: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateTokenAsync*
  implements:
  - IdentityServer4.Services.ITokenCreationService.CreateTokenAsync(IdentityServer4.Models.Token)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateHeaderAsync(IdentityServer4.Models.Token)
  commentId: M:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateHeaderAsync(IdentityServer4.Models.Token)
  id: CreateHeaderAsync(IdentityServer4.Models.Token)
  parent: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  langs:
  - csharp
  - vb
  name: CreateHeaderAsync(Token)
  nameWithType: CustomTokenCreationService.CreateHeaderAsync(Token)
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateHeaderAsync(IdentityServer4.Models.Token)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: CreateHeaderAsync
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 107
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nCreates the JWT header\n"
  example: []
  syntax:
    content: protected virtual Task<JwtHeader> CreateHeaderAsync(Token token)
    parameters:
    - id: token
      type: IdentityServer4.Models.Token
      description: The token.
    return:
      type: System.Threading.Tasks.Task{System.IdentityModel.Tokens.Jwt.JwtHeader}
      description: The JWT header
    content.vb: Protected Overridable Function CreateHeaderAsync(token As Token) As Task(Of JwtHeader)
  overload: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateHeaderAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreatePayloadAsync(IdentityServer4.Models.Token)
  commentId: M:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreatePayloadAsync(IdentityServer4.Models.Token)
  id: CreatePayloadAsync(IdentityServer4.Models.Token)
  parent: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  langs:
  - csharp
  - vb
  name: CreatePayloadAsync(Token)
  nameWithType: CustomTokenCreationService.CreatePayloadAsync(Token)
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreatePayloadAsync(IdentityServer4.Models.Token)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: CreatePayloadAsync
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 146
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nCreates the JWT payload\n"
  example: []
  syntax:
    content: protected virtual Task<JwtPayload> CreatePayloadAsync(Token token)
    parameters:
    - id: token
      type: IdentityServer4.Models.Token
      description: The token.
    return:
      type: System.Threading.Tasks.Task{System.IdentityModel.Tokens.Jwt.JwtPayload}
      description: The JWT payload
    content.vb: Protected Overridable Function CreatePayloadAsync(token As Token) As Task(Of JwtPayload)
  overload: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreatePayloadAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateJwtAsync(System.IdentityModel.Tokens.Jwt.JwtSecurityToken,IdentityServer4.Models.Token)
  commentId: M:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateJwtAsync(System.IdentityModel.Tokens.Jwt.JwtSecurityToken,IdentityServer4.Models.Token)
  id: CreateJwtAsync(System.IdentityModel.Tokens.Jwt.JwtSecurityToken,IdentityServer4.Models.Token)
  parent: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  langs:
  - csharp
  - vb
  name: CreateJwtAsync(JwtSecurityToken, Token)
  nameWithType: CustomTokenCreationService.CreateJwtAsync(JwtSecurityToken, Token)
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateJwtAsync(System.IdentityModel.Tokens.Jwt.JwtSecurityToken, IdentityServer4.Models.Token)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: CreateJwtAsync
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 158
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nApplies the signature to the JWT\n"
  example: []
  syntax:
    content: protected virtual Task<string> CreateJwtAsync(JwtSecurityToken jwt, Token token)
    parameters:
    - id: jwt
      type: System.IdentityModel.Tokens.Jwt.JwtSecurityToken
      description: The JWT object.
    - id: token
      type: IdentityServer4.Models.Token
      description: The token.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The signed JWT
    content.vb: Protected Overridable Function CreateJwtAsync(jwt As JwtSecurityToken, token As Token) As Task(Of String)
  overload: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateJwtAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.GetHashedKey(System.String)
  commentId: M:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.GetHashedKey(System.String)
  id: GetHashedKey(System.String)
  parent: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  langs:
  - csharp
  - vb
  name: GetHashedKey(String)
  nameWithType: CustomTokenCreationService.GetHashedKey(String)
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.GetHashedKey(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetHashedKey
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 176
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nGets the hashed key.\n"
  example: []
  syntax:
    content: protected virtual string GetHashedKey(string value)
    parameters:
    - id: value
      type: System.String
      description: The value.
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function GetHashedKey(value As String) As String
  overload: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.GetHashedKey*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.StoreItemAsync(System.String,IdentityServer4.Models.Token,System.String,System.String,System.DateTime,System.Int32)
  commentId: M:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.StoreItemAsync(System.String,IdentityServer4.Models.Token,System.String,System.String,System.DateTime,System.Int32)
  id: StoreItemAsync(System.String,IdentityServer4.Models.Token,System.String,System.String,System.DateTime,System.Int32)
  parent: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  langs:
  - csharp
  - vb
  name: StoreItemAsync(String, Token, String, String, DateTime, Int32)
  nameWithType: CustomTokenCreationService.StoreItemAsync(String, Token, String, String, DateTime, Int32)
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.StoreItemAsync(System.String, IdentityServer4.Models.Token, System.String, System.String, System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: StoreItemAsync
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 191
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nStores the item.\n"
  example: []
  syntax:
    content: protected virtual Task StoreItemAsync(string key, Token item, string clientId, string subjectId, DateTime created, int lifetime)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: item
      type: IdentityServer4.Models.Token
      description: The item.
    - id: clientId
      type: System.String
      description: The client identifier.
    - id: subjectId
      type: System.String
      description: The subject identifier.
    - id: created
      type: System.DateTime
      description: The created.
    - id: lifetime
      type: System.Int32
      description: The lifetime.
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Protected Overridable Function StoreItemAsync(key As String, item As Token, clientId As String, subjectId As String, created As Date, lifetime As Integer) As Task
  overload: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.StoreItemAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.StoreItemAsync(System.String,IdentityServer4.Models.Token,System.String,System.String,System.DateTime,System.Nullable{System.DateTime})
  commentId: M:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.StoreItemAsync(System.String,IdentityServer4.Models.Token,System.String,System.String,System.DateTime,System.Nullable{System.DateTime})
  id: StoreItemAsync(System.String,IdentityServer4.Models.Token,System.String,System.String,System.DateTime,System.Nullable{System.DateTime})
  parent: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  langs:
  - csharp
  - vb
  name: StoreItemAsync(String, Token, String, String, DateTime, Nullable<DateTime>)
  nameWithType: CustomTokenCreationService.StoreItemAsync(String, Token, String, String, DateTime, Nullable<DateTime>)
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.StoreItemAsync(System.String, IdentityServer4.Models.Token, System.String, System.String, System.DateTime, System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: StoreItemAsync
    path: ../src/Hybrid.Zero.IdentityServer4/CustomTokenCreationService.cs
    startLine: 206
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\nStores the item.\n"
  example: []
  syntax:
    content: protected virtual Task StoreItemAsync(string key, Token item, string clientId, string subjectId, DateTime created, DateTime? expiration)
    parameters:
    - id: key
      type: System.String
      description: The key.
    - id: item
      type: IdentityServer4.Models.Token
      description: The item.
    - id: clientId
      type: System.String
      description: The client identifier.
    - id: subjectId
      type: System.String
      description: The subject identifier.
    - id: created
      type: System.DateTime
      description: The created.
    - id: expiration
      type: System.Nullable{System.DateTime}
      description: The expiration.
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Protected Overridable Function StoreItemAsync(key As String, item As Token, clientId As String, subjectId As String, created As Date, expiration As Date?) As Task
  overload: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.StoreItemAsync*
  nameWithType.vb: CustomTokenCreationService.StoreItemAsync(String, Token, String, String, DateTime, Nullable(Of DateTime))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.StoreItemAsync(System.String, IdentityServer4.Models.Token, System.String, System.String, System.DateTime, System.Nullable(Of System.DateTime))
  name.vb: StoreItemAsync(String, Token, String, String, DateTime, Nullable(Of DateTime))
references:
- uid: Hybrid.Zero.IdentityServer4
  commentId: N:Hybrid.Zero.IdentityServer4
  name: Hybrid.Zero.IdentityServer4
  nameWithType: Hybrid.Zero.IdentityServer4
  fullName: Hybrid.Zero.IdentityServer4
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: IdentityServer4.Services.ITokenCreationService
  commentId: T:IdentityServer4.Services.ITokenCreationService
  parent: IdentityServer4.Services
  isExternal: true
  name: ITokenCreationService
  nameWithType: ITokenCreationService
  fullName: IdentityServer4.Services.ITokenCreationService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  name: CastTo(Type)
  nameWithType: ObjectExtensions.CastTo(Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  name: CastTo<T>(T)
  nameWithType: ObjectExtensions.CastTo<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(T)
  name.vb: CastTo(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Zero.IdentityServer4.CustomTokenCreationService[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<CustomTokenCreationService>(CustomTokenCreationService[])
  nameWithType: ObjectExtensions.IsIn<CustomTokenCreationService>(CustomTokenCreationService[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>(Hybrid.Zero.IdentityServer4.CustomTokenCreationService[])
  nameWithType.vb: ObjectExtensions.IsIn(Of CustomTokenCreationService)(CustomTokenCreationService())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)(Hybrid.Zero.IdentityServer4.CustomTokenCreationService())
  name.vb: IsIn(Of CustomTokenCreationService)(CustomTokenCreationService())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn<CustomTokenCreationService>
    nameWithType: ObjectExtensions.IsIn<CustomTokenCreationService>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn(Of CustomTokenCreationService)
    nameWithType: ObjectExtensions.IsIn(Of CustomTokenCreationService)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: ObjectExtensions.ToDynamic()
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<CustomTokenCreationService>()
  nameWithType: ObjectExtensions.DeepClone<CustomTokenCreationService>()
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of CustomTokenCreationService)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)()
  name.vb: DeepClone(Of CustomTokenCreationService)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone<CustomTokenCreationService>
    nameWithType: ObjectExtensions.DeepClone<CustomTokenCreationService>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone(Of CustomTokenCreationService)
    nameWithType: ObjectExtensions.DeepClone(Of CustomTokenCreationService)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Zero.IdentityServer4.CustomTokenCreationService,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<CustomTokenCreationService>(Func<CustomTokenCreationService, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<CustomTokenCreationService>(Func<CustomTokenCreationService, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>(System.Func<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of CustomTokenCreationService)(Func(Of CustomTokenCreationService, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)(System.Func(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, System.Boolean), System.String)
  name.vb: Required(Of CustomTokenCreationService)(Func(Of CustomTokenCreationService, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required<CustomTokenCreationService>
    nameWithType: ParameterCheckExtensions.Required<CustomTokenCreationService>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required(Of CustomTokenCreationService)
    nameWithType: ParameterCheckExtensions.Required(Of CustomTokenCreationService)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Zero.IdentityServer4.CustomTokenCreationService,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<CustomTokenCreationService, TException>(Func<CustomTokenCreationService, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<CustomTokenCreationService, TException>(Func<CustomTokenCreationService, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TException>(System.Func<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of CustomTokenCreationService, TException)(Func(Of CustomTokenCreationService, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TException)(System.Func(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, System.Boolean), System.String)
  name.vb: Required(Of CustomTokenCreationService, TException)(Func(Of CustomTokenCreationService, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required<CustomTokenCreationService, TException>
    nameWithType: ParameterCheckExtensions.Required<CustomTokenCreationService, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required(Of CustomTokenCreationService, TException)
    nameWithType: ParameterCheckExtensions.Required(Of CustomTokenCreationService, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  name: CheckNotNull<CustomTokenCreationService>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<CustomTokenCreationService>(String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of CustomTokenCreationService)(String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)(System.String)
  name.vb: CheckNotNull(Of CustomTokenCreationService)(String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull<CustomTokenCreationService>
    nameWithType: ParameterCheckExtensions.CheckNotNull<CustomTokenCreationService>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull(Of CustomTokenCreationService)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of CustomTokenCreationService)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.IdentityServer4.CustomTokenCreationService},System.Action{System.Exception},System.Action{Hybrid.Zero.IdentityServer4.CustomTokenCreationService})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<CustomTokenCreationService>(Action<CustomTokenCreationService>, Action<Exception>, Action<CustomTokenCreationService>)
  nameWithType: TryCatchExtensions.TryCatch<CustomTokenCreationService>(Action<CustomTokenCreationService>, Action<Exception>, Action<CustomTokenCreationService>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>(System.Action<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>, System.Action<System.Exception>, System.Action<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CustomTokenCreationService)(Action(Of CustomTokenCreationService), Action(Of Exception), Action(Of CustomTokenCreationService))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)(System.Action(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService), System.Action(Of System.Exception), System.Action(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService))
  name.vb: TryCatch(Of CustomTokenCreationService)(Action(Of CustomTokenCreationService), Action(Of Exception), Action(Of CustomTokenCreationService))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<CustomTokenCreationService>
    nameWithType: TryCatchExtensions.TryCatch<CustomTokenCreationService>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of CustomTokenCreationService)
    nameWithType: TryCatchExtensions.TryCatch(Of CustomTokenCreationService)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.IdentityServer4.CustomTokenCreationService},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  name: TryCatch<CustomTokenCreationService>(Action<CustomTokenCreationService>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<CustomTokenCreationService>(Action<CustomTokenCreationService>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>(System.Action<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CustomTokenCreationService)(Action(Of CustomTokenCreationService), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)(System.Action(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService), System.Action(Of System.Exception))
  name.vb: TryCatch(Of CustomTokenCreationService)(Action(Of CustomTokenCreationService), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch<CustomTokenCreationService>
    nameWithType: TryCatchExtensions.TryCatch<CustomTokenCreationService>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of CustomTokenCreationService)
    nameWithType: TryCatchExtensions.TryCatch(Of CustomTokenCreationService)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.IdentityServer4.CustomTokenCreationService,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Zero.IdentityServer4.CustomTokenCreationService})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<CustomTokenCreationService, TResult>(Func<CustomTokenCreationService, TResult>, Action<Exception>, Action<CustomTokenCreationService>)
  nameWithType: TryCatchExtensions.TryCatch<CustomTokenCreationService, TResult>(Func<CustomTokenCreationService, TResult>, Action<Exception>, Action<CustomTokenCreationService>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult>(System.Func<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult>, System.Action<System.Exception>, System.Action<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CustomTokenCreationService, TResult)(Func(Of CustomTokenCreationService, TResult), Action(Of Exception), Action(Of CustomTokenCreationService))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult)(System.Func(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult), System.Action(Of System.Exception), System.Action(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService))
  name.vb: TryCatch(Of CustomTokenCreationService, TResult)(Func(Of CustomTokenCreationService, TResult), Action(Of Exception), Action(Of CustomTokenCreationService))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<CustomTokenCreationService, TResult>
    nameWithType: TryCatchExtensions.TryCatch<CustomTokenCreationService, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of CustomTokenCreationService, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of CustomTokenCreationService, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.IdentityServer4.CustomTokenCreationService,{TResult}},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  name: TryCatch<CustomTokenCreationService, TResult>(Func<CustomTokenCreationService, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<CustomTokenCreationService, TResult>(Func<CustomTokenCreationService, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult>(System.Func<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CustomTokenCreationService, TResult)(Func(Of CustomTokenCreationService, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult)(System.Func(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of CustomTokenCreationService, TResult)(Func(Of CustomTokenCreationService, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<CustomTokenCreationService, TResult>
    nameWithType: TryCatchExtensions.TryCatch<CustomTokenCreationService, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of CustomTokenCreationService, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of CustomTokenCreationService, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Zero.IdentityServer4.CustomTokenCreationService},System.Action{Hybrid.Zero.IdentityServer4.CustomTokenCreationService})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  name: TryFinally<CustomTokenCreationService>(Action<CustomTokenCreationService>, Action<CustomTokenCreationService>)
  nameWithType: TryCatchExtensions.TryFinally<CustomTokenCreationService>(Action<CustomTokenCreationService>, Action<CustomTokenCreationService>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>(System.Action<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>, System.Action<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of CustomTokenCreationService)(Action(Of CustomTokenCreationService), Action(Of CustomTokenCreationService))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)(System.Action(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService), System.Action(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService))
  name.vb: TryFinally(Of CustomTokenCreationService)(Action(Of CustomTokenCreationService), Action(Of CustomTokenCreationService))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally<CustomTokenCreationService>
    nameWithType: TryCatchExtensions.TryFinally<CustomTokenCreationService>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally(Of CustomTokenCreationService)
    nameWithType: TryCatchExtensions.TryFinally(Of CustomTokenCreationService)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  parent: Hybrid.Json.JsonExtensions
  definition: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  name: ToJsonString(Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  name: MapTo<TTarget>()
  nameWithType: MapperExtensions.MapTo<TTarget>()
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>()
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)()
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)()
  name.vb: MapTo(Of TTarget)()
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<CustomTokenCreationService, TTarget>(TTarget)
  nameWithType: MapperExtensions.MapTo<CustomTokenCreationService, TTarget>(TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TTarget>(TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of CustomTokenCreationService, TTarget)(TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TTarget)(TTarget)
  name.vb: MapTo(Of CustomTokenCreationService, TTarget)(TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo<CustomTokenCreationService, TTarget>
    nameWithType: MapperExtensions.MapTo<CustomTokenCreationService, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo(Of CustomTokenCreationService, TTarget)
    nameWithType: MapperExtensions.MapTo(Of CustomTokenCreationService, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  name: Locking(Action)
  nameWithType: LockExtensions.Locking(Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Zero.IdentityServer4.CustomTokenCreationService})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  name: Locking<CustomTokenCreationService>(Action<CustomTokenCreationService>)
  nameWithType: LockExtensions.Locking<CustomTokenCreationService>(Action<CustomTokenCreationService>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>(System.Action<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>)
  nameWithType.vb: LockExtensions.Locking(Of CustomTokenCreationService)(Action(Of CustomTokenCreationService))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)(System.Action(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService))
  name.vb: Locking(Of CustomTokenCreationService)(Action(Of CustomTokenCreationService))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking<CustomTokenCreationService>
    nameWithType: LockExtensions.Locking<CustomTokenCreationService>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.IdentityServer4.CustomTokenCreationService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking(Of CustomTokenCreationService)
    nameWithType: LockExtensions.Locking(Of CustomTokenCreationService)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  name: Locking<TResult>(Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Zero.IdentityServer4.CustomTokenCreationService,{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  name: Locking<CustomTokenCreationService, TResult>(Func<CustomTokenCreationService, TResult>)
  nameWithType: LockExtensions.Locking<CustomTokenCreationService, TResult>(Func<CustomTokenCreationService, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult>(System.Func<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of CustomTokenCreationService, TResult)(Func(Of CustomTokenCreationService, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult)(System.Func(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult))
  name.vb: Locking(Of CustomTokenCreationService, TResult)(Func(Of CustomTokenCreationService, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking<CustomTokenCreationService, TResult>
    nameWithType: LockExtensions.Locking<CustomTokenCreationService, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking(Of CustomTokenCreationService, TResult)
    nameWithType: LockExtensions.Locking(Of CustomTokenCreationService, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
    name: CustomTokenCreationService
    nameWithType: CustomTokenCreationService
    fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<CustomTokenCreationService, TKey>()
  nameWithType: EntityExtensions.CheckICreatedTime<CustomTokenCreationService, TKey>()
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TKey>()
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of CustomTokenCreationService, TKey)()
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TKey)()
  name.vb: CheckICreatedTime(Of CustomTokenCreationService, TKey)()
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime<CustomTokenCreationService, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<CustomTokenCreationService, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime(Of CustomTokenCreationService, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of CustomTokenCreationService, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckICreationAudited<CustomTokenCreationService, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<CustomTokenCreationService, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of CustomTokenCreationService, TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of CustomTokenCreationService, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<CustomTokenCreationService, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<CustomTokenCreationService, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of CustomTokenCreationService, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of CustomTokenCreationService, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckIUpdateAudited<CustomTokenCreationService, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<CustomTokenCreationService, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of CustomTokenCreationService, TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of CustomTokenCreationService, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<CustomTokenCreationService, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<CustomTokenCreationService, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of CustomTokenCreationService, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of CustomTokenCreationService, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Zero.IdentityServer4.CustomTokenCreationService, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: IdentityServer4.Services
  commentId: N:IdentityServer4.Services
  isExternal: true
  name: IdentityServer4.Services
  nameWithType: IdentityServer4.Services
  fullName: IdentityServer4.Services
- uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  isExternal: true
  name: CastTo(Object, Type)
  nameWithType: ObjectExtensions.CastTo(Object, Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object, System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions
  commentId: T:Hybrid.Extensions.ObjectExtensions
  parent: Hybrid.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Hybrid.Extensions.ObjectExtensions
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  isExternal: true
  name: CastTo<T>(Object, T)
  nameWithType: ObjectExtensions.CastTo<T>(Object, T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object, T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object, T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object, T)
  name.vb: CastTo(Of T)(Object, T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<T>(T, T[])
  nameWithType: ObjectExtensions.IsIn<T>(T, T[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>(T, T[])
  nameWithType.vb: ObjectExtensions.IsIn(Of T)(T, T())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)(T, T())
  name.vb: IsIn(Of T)(T, T())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn<T>
    nameWithType: ObjectExtensions.IsIn<T>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn(Of T)
    nameWithType: ObjectExtensions.IsIn(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: ObjectExtensions.ToDynamic(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T>
    nameWithType: ParameterCheckExtensions.Required<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T)
    nameWithType: ParameterCheckExtensions.Required(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions
  commentId: T:Hybrid.Extensions.ParameterCheckExtensions
  parent: Hybrid.Extensions
  name: ParameterCheckExtensions
  nameWithType: ParameterCheckExtensions
  fullName: Hybrid.Extensions.ParameterCheckExtensions
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T, TException>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T, TException>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T, TException)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T, TException)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T, TException>
    nameWithType: ParameterCheckExtensions.Required<T, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T, TException)
    nameWithType: ParameterCheckExtensions.Required(Of T, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  isExternal: true
  name: CheckNotNull<T>(T, String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<T>(T, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>(T, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of T)(T, String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull<T>
    nameWithType: ParameterCheckExtensions.CheckNotNull<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions
  commentId: T:Hybrid.Extensions.TryCatchExtensions
  parent: Hybrid.Extensions
  name: TryCatchExtensions
  nameWithType: TryCatchExtensions
  fullName: Hybrid.Extensions.TryCatchExtensions
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  isExternal: true
  name: TryFinally<T>(T, Action<T>, Action<T>)
  nameWithType: TryCatchExtensions.TryFinally<T>(T, Action<T>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>(T, System.Action<T>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of T)(T, Action(Of T), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)(T, System.Action(Of T), System.Action(Of T))
  name.vb: TryFinally(Of T)(T, Action(Of T), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally<T>
    nameWithType: TryCatchExtensions.TryFinally<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally(Of T)
    nameWithType: TryCatchExtensions.TryFinally(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  isExternal: true
  name: ToJsonString(Object, Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Object, Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Object, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions
  commentId: T:Hybrid.Json.JsonExtensions
  parent: Hybrid.Json
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: Hybrid.Json.JsonExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  isExternal: true
  name: MapTo<TTarget>(Object)
  nameWithType: MapperExtensions.MapTo<TTarget>(Object)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>(System.Object)
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)(Object)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)(System.Object)
  name.vb: MapTo(Of TTarget)(Object)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Mapping.MapperExtensions
  commentId: T:Hybrid.Mapping.MapperExtensions
  parent: Hybrid.Mapping
  name: MapperExtensions
  nameWithType: MapperExtensions
  fullName: Hybrid.Mapping.MapperExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType: MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  name.vb: MapTo(Of TSource, TTarget)(TSource, TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo<TSource, TTarget>
    nameWithType: MapperExtensions.MapTo<TSource, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo(Of TSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TSource, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  isExternal: true
  name: Locking(Object, Action)
  nameWithType: LockExtensions.Locking(Object, Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Object, System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions
  commentId: T:Hybrid.Reflection.LockExtensions
  parent: Hybrid.Reflection
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: Hybrid.Reflection.LockExtensions
- uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  isExternal: true
  name: Locking<T>(T, Action<T>)
  nameWithType: LockExtensions.Locking<T>(T, Action<T>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<T>(T, System.Action<T>)
  nameWithType.vb: LockExtensions.Locking(Of T)(T, Action(Of T))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of T)(T, System.Action(Of T))
  name.vb: Locking(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking<T>
    nameWithType: LockExtensions.Locking<T>
    fullName: Hybrid.Reflection.LockExtensions.Locking<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking(Of T)
    nameWithType: LockExtensions.Locking(Of T)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  isExternal: true
  name: Locking<TResult>(Object, Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Object, Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Object, System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Object, Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Object, System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Object, Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  isExternal: true
  name: Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  nameWithType: LockExtensions.Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>(TSource, System.Func<TSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)(TSource, System.Func(Of TSource, TResult))
  name.vb: Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking<TSource, TResult>
    nameWithType: LockExtensions.Locking<TSource, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking(Of TSource, TResult)
    nameWithType: LockExtensions.Locking(Of TSource, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  name.vb: CheckICreatedTime(Of TEntity, TKey)(TEntity)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime<TEntity, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime(Of TEntity, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions
  commentId: T:Hybrid.Domain.Entities.EntityExtensions
  parent: Hybrid.Domain.Entities
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: Hybrid.Domain.Entities.EntityExtensions
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions
  commentId: N:Hybrid.Extensions
  name: Hybrid.Extensions
  nameWithType: Hybrid.Extensions
  fullName: Hybrid.Extensions
- uid: Hybrid.Json
  commentId: N:Hybrid.Json
  name: Hybrid.Json
  nameWithType: Hybrid.Json
  fullName: Hybrid.Json
- uid: Hybrid.Mapping
  commentId: N:Hybrid.Mapping
  name: Hybrid.Mapping
  nameWithType: Hybrid.Mapping
  fullName: Hybrid.Mapping
- uid: Hybrid.Reflection
  commentId: N:Hybrid.Reflection
  name: Hybrid.Reflection
  nameWithType: Hybrid.Reflection
  fullName: Hybrid.Reflection
- uid: Hybrid.Domain.Entities
  commentId: N:Hybrid.Domain.Entities
  name: Hybrid.Domain.Entities
  nameWithType: Hybrid.Domain.Entities
  fullName: Hybrid.Domain.Entities
- uid: IdentityServer4.Stores.IPersistedGrantStore
  commentId: T:IdentityServer4.Stores.IPersistedGrantStore
  parent: IdentityServer4.Stores
  isExternal: true
  name: IPersistedGrantStore
  nameWithType: IPersistedGrantStore
  fullName: IdentityServer4.Stores.IPersistedGrantStore
- uid: IdentityServer4.Stores
  commentId: N:IdentityServer4.Stores
  isExternal: true
  name: IdentityServer4.Stores
  nameWithType: IdentityServer4.Stores
  fullName: IdentityServer4.Stores
- uid: IdentityServer4.Stores.Serialization.IPersistentGrantSerializer
  commentId: T:IdentityServer4.Stores.Serialization.IPersistentGrantSerializer
  parent: IdentityServer4.Stores.Serialization
  isExternal: true
  name: IPersistentGrantSerializer
  nameWithType: IPersistentGrantSerializer
  fullName: IdentityServer4.Stores.Serialization.IPersistentGrantSerializer
- uid: IdentityServer4.Stores.Serialization
  commentId: N:IdentityServer4.Stores.Serialization
  isExternal: true
  name: IdentityServer4.Stores.Serialization
  nameWithType: IdentityServer4.Stores.Serialization
  fullName: IdentityServer4.Stores.Serialization
- uid: IdentityServer4.Services.IKeyMaterialService
  commentId: T:IdentityServer4.Services.IKeyMaterialService
  parent: IdentityServer4.Services
  isExternal: true
  name: IKeyMaterialService
  nameWithType: IKeyMaterialService
  fullName: IdentityServer4.Services.IKeyMaterialService
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.AspNetCore.Authentication.ISystemClock
  commentId: T:Microsoft.AspNetCore.Authentication.ISystemClock
  parent: Microsoft.AspNetCore.Authentication
  isExternal: true
  name: ISystemClock
  nameWithType: ISystemClock
  fullName: Microsoft.AspNetCore.Authentication.ISystemClock
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: true
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: IdentityServer4.Configuration.IdentityServerOptions
  commentId: T:IdentityServer4.Configuration.IdentityServerOptions
  parent: IdentityServer4.Configuration
  isExternal: true
  name: IdentityServerOptions
  nameWithType: IdentityServerOptions
  fullName: IdentityServer4.Configuration.IdentityServerOptions
- uid: IdentityServer4.Configuration
  commentId: N:IdentityServer4.Configuration
  isExternal: true
  name: IdentityServer4.Configuration
  nameWithType: IdentityServer4.Configuration
  fullName: IdentityServer4.Configuration
- uid: IdentityServer4.Services.DefaultTokenCreationService
  commentId: T:IdentityServer4.Services.DefaultTokenCreationService
  isExternal: true
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.#ctor*
  commentId: Overload:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.#ctor
  name: CustomTokenCreationService
  nameWithType: CustomTokenCreationService.CustomTokenCreationService
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CustomTokenCreationService
- uid: Microsoft.Extensions.Logging.ILogger{IdentityServer4.Services.DefaultTokenCreationService}
  commentId: T:Microsoft.Extensions.Logging.ILogger{IdentityServer4.Services.DefaultTokenCreationService}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<DefaultTokenCreationService>
  nameWithType: ILogger<DefaultTokenCreationService>
  fullName: Microsoft.Extensions.Logging.ILogger<IdentityServer4.Services.DefaultTokenCreationService>
  nameWithType.vb: ILogger(Of DefaultTokenCreationService)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of IdentityServer4.Services.DefaultTokenCreationService)
  name.vb: ILogger(Of DefaultTokenCreationService)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IdentityServer4.Services.DefaultTokenCreationService
    name: DefaultTokenCreationService
    nameWithType: DefaultTokenCreationService
    fullName: IdentityServer4.Services.DefaultTokenCreationService
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IdentityServer4.Services.DefaultTokenCreationService
    name: DefaultTokenCreationService
    nameWithType: DefaultTokenCreationService
    fullName: IdentityServer4.Services.DefaultTokenCreationService
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateTokenAsync*
  commentId: Overload:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateTokenAsync
  name: CreateTokenAsync
  nameWithType: CustomTokenCreationService.CreateTokenAsync
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateTokenAsync
- uid: IdentityServer4.Services.ITokenCreationService.CreateTokenAsync(IdentityServer4.Models.Token)
  commentId: M:IdentityServer4.Services.ITokenCreationService.CreateTokenAsync(IdentityServer4.Models.Token)
  parent: IdentityServer4.Services.ITokenCreationService
  isExternal: true
  name: CreateTokenAsync(Token)
  nameWithType: ITokenCreationService.CreateTokenAsync(Token)
  fullName: IdentityServer4.Services.ITokenCreationService.CreateTokenAsync(IdentityServer4.Models.Token)
  spec.csharp:
  - uid: IdentityServer4.Services.ITokenCreationService.CreateTokenAsync(IdentityServer4.Models.Token)
    name: CreateTokenAsync
    nameWithType: ITokenCreationService.CreateTokenAsync
    fullName: IdentityServer4.Services.ITokenCreationService.CreateTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: IdentityServer4.Models.Token
    name: Token
    nameWithType: Token
    fullName: IdentityServer4.Models.Token
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IdentityServer4.Services.ITokenCreationService.CreateTokenAsync(IdentityServer4.Models.Token)
    name: CreateTokenAsync
    nameWithType: ITokenCreationService.CreateTokenAsync
    fullName: IdentityServer4.Services.ITokenCreationService.CreateTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: IdentityServer4.Models.Token
    name: Token
    nameWithType: Token
    fullName: IdentityServer4.Models.Token
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IdentityServer4.Models.Token
  commentId: T:IdentityServer4.Models.Token
  parent: IdentityServer4.Models
  isExternal: true
  name: Token
  nameWithType: Token
  fullName: IdentityServer4.Models.Token
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IdentityServer4.Models
  commentId: N:IdentityServer4.Models
  isExternal: true
  name: IdentityServer4.Models
  nameWithType: IdentityServer4.Models
  fullName: IdentityServer4.Models
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateHeaderAsync*
  commentId: Overload:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateHeaderAsync
  name: CreateHeaderAsync
  nameWithType: CustomTokenCreationService.CreateHeaderAsync
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateHeaderAsync
- uid: System.Threading.Tasks.Task{System.IdentityModel.Tokens.Jwt.JwtHeader}
  commentId: T:System.Threading.Tasks.Task{System.IdentityModel.Tokens.Jwt.JwtHeader}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<JwtHeader>
  nameWithType: Task<JwtHeader>
  fullName: System.Threading.Tasks.Task<System.IdentityModel.Tokens.Jwt.JwtHeader>
  nameWithType.vb: Task(Of JwtHeader)
  fullName.vb: System.Threading.Tasks.Task(Of System.IdentityModel.Tokens.Jwt.JwtHeader)
  name.vb: Task(Of JwtHeader)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.Jwt.JwtHeader
    name: JwtHeader
    nameWithType: JwtHeader
    fullName: System.IdentityModel.Tokens.Jwt.JwtHeader
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IdentityModel.Tokens.Jwt.JwtHeader
    name: JwtHeader
    nameWithType: JwtHeader
    fullName: System.IdentityModel.Tokens.Jwt.JwtHeader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreatePayloadAsync*
  commentId: Overload:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreatePayloadAsync
  name: CreatePayloadAsync
  nameWithType: CustomTokenCreationService.CreatePayloadAsync
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreatePayloadAsync
- uid: System.Threading.Tasks.Task{System.IdentityModel.Tokens.Jwt.JwtPayload}
  commentId: T:System.Threading.Tasks.Task{System.IdentityModel.Tokens.Jwt.JwtPayload}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<JwtPayload>
  nameWithType: Task<JwtPayload>
  fullName: System.Threading.Tasks.Task<System.IdentityModel.Tokens.Jwt.JwtPayload>
  nameWithType.vb: Task(Of JwtPayload)
  fullName.vb: System.Threading.Tasks.Task(Of System.IdentityModel.Tokens.Jwt.JwtPayload)
  name.vb: Task(Of JwtPayload)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.Jwt.JwtPayload
    name: JwtPayload
    nameWithType: JwtPayload
    fullName: System.IdentityModel.Tokens.Jwt.JwtPayload
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IdentityModel.Tokens.Jwt.JwtPayload
    name: JwtPayload
    nameWithType: JwtPayload
    fullName: System.IdentityModel.Tokens.Jwt.JwtPayload
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateJwtAsync*
  commentId: Overload:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateJwtAsync
  name: CreateJwtAsync
  nameWithType: CustomTokenCreationService.CreateJwtAsync
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.CreateJwtAsync
- uid: System.IdentityModel.Tokens.Jwt.JwtSecurityToken
  commentId: T:System.IdentityModel.Tokens.Jwt.JwtSecurityToken
  parent: System.IdentityModel.Tokens.Jwt
  isExternal: true
  name: JwtSecurityToken
  nameWithType: JwtSecurityToken
  fullName: System.IdentityModel.Tokens.Jwt.JwtSecurityToken
- uid: System.IdentityModel.Tokens.Jwt
  commentId: N:System.IdentityModel.Tokens.Jwt
  isExternal: true
  name: System.IdentityModel.Tokens.Jwt
  nameWithType: System.IdentityModel.Tokens.Jwt
  fullName: System.IdentityModel.Tokens.Jwt
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.GetHashedKey*
  commentId: Overload:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.GetHashedKey
  name: GetHashedKey
  nameWithType: CustomTokenCreationService.GetHashedKey
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.GetHashedKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.StoreItemAsync*
  commentId: Overload:Hybrid.Zero.IdentityServer4.CustomTokenCreationService.StoreItemAsync
  name: StoreItemAsync
  nameWithType: CustomTokenCreationService.StoreItemAsync
  fullName: Hybrid.Zero.IdentityServer4.CustomTokenCreationService.StoreItemAsync
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
