### YamlMime:ManagedReference
items:
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  commentId: T:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  id: IdentityErrorDescriberZhHans
  parent: Hybrid.Zero.Identity
  children:
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.ConcurrencyFailure
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DefaultError
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DescriptionDict
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateEmail(System.String)
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateRoleName(System.String)
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateUserName(System.String)
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidEmail(System.String)
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidRoleName(System.String)
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidToken
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidUserName(System.String)
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.LoginAlreadyAssociated
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordMismatch
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresDigit
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresLower
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresNonAlphanumeric
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUniqueChars(System.Int32)
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUpper
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordTooShort(System.Int32)
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.RecoveryCodeRedemptionFailed
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyHasPassword
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyInRole(System.String)
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserLockoutNotEnabled
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserNotInRole(System.String)
  langs:
  - csharp
  - vb
  name: IdentityErrorDescriberZhHans
  nameWithType: IdentityErrorDescriberZhHans
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  type: Class
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: IdentityErrorDescriberZhHans
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 20
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nIdentity错误信息描述的zh-Hans本地化\n"
  example: []
  syntax:
    content: 'public class IdentityErrorDescriberZhHans : IdentityErrorDescriber'
    content.vb: >-
      Public Class IdentityErrorDescriberZhHans
          Inherits IdentityErrorDescriber
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Zero.Identity.IdentityErrorDescriberZhHans[])
  - System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans,System.Boolean},System.String)
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans,System.Boolean},System.String)
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans},System.Action{System.Exception},System.Action{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans})
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans},System.Action{System.Exception})
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans})
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans,{TResult}},System.Action{System.Exception})
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans},System.Action{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans})
  - System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  - System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans,{TResult}})
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DefaultError
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DefaultError
  id: DefaultError
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: DefaultError()
  nameWithType: IdentityErrorDescriberZhHans.DefaultError()
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DefaultError()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: DefaultError
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 26
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns the default <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override IdentityError DefaultError()
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: The default <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function DefaultError As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DefaultError
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DefaultError*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.ConcurrencyFailure
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.ConcurrencyFailure
  id: ConcurrencyFailure
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: ConcurrencyFailure()
  nameWithType: IdentityErrorDescriberZhHans.ConcurrencyFailure()
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.ConcurrencyFailure()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ConcurrencyFailure
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 37
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating a concurrency failure.\n"
  example: []
  syntax:
    content: public override IdentityError ConcurrencyFailure()
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating a concurrency failure.
    content.vb: Public Overrides Function ConcurrencyFailure As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.ConcurrencyFailure
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.ConcurrencyFailure*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordMismatch
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordMismatch
  id: PasswordMismatch
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: PasswordMismatch()
  nameWithType: IdentityErrorDescriberZhHans.PasswordMismatch()
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordMismatch()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: PasswordMismatch
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 48
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating a password mismatch.\n"
  example: []
  syntax:
    content: public override IdentityError PasswordMismatch()
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating a password mismatch.
    content.vb: Public Overrides Function PasswordMismatch As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordMismatch
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordMismatch*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidToken
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidToken
  id: InvalidToken
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: InvalidToken()
  nameWithType: IdentityErrorDescriberZhHans.InvalidToken()
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidToken()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: InvalidToken
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 59
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating an invalid token.\n"
  example: []
  syntax:
    content: public override IdentityError InvalidToken()
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating an invalid token.
    content.vb: Public Overrides Function InvalidToken As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidToken
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidToken*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.RecoveryCodeRedemptionFailed
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.RecoveryCodeRedemptionFailed
  id: RecoveryCodeRedemptionFailed
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: RecoveryCodeRedemptionFailed()
  nameWithType: IdentityErrorDescriberZhHans.RecoveryCodeRedemptionFailed()
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.RecoveryCodeRedemptionFailed()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: RecoveryCodeRedemptionFailed
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 70
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating a recovery code was not redeemed.\n"
  example: []
  syntax:
    content: public override IdentityError RecoveryCodeRedemptionFailed()
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating a recovery code was not redeemed.
    content.vb: Public Overrides Function RecoveryCodeRedemptionFailed As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.RecoveryCodeRedemptionFailed
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.RecoveryCodeRedemptionFailed*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.LoginAlreadyAssociated
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.LoginAlreadyAssociated
  id: LoginAlreadyAssociated
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: LoginAlreadyAssociated()
  nameWithType: IdentityErrorDescriberZhHans.LoginAlreadyAssociated()
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.LoginAlreadyAssociated()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: LoginAlreadyAssociated
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 81
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating an external login is already associated with an account.\n"
  example: []
  syntax:
    content: public override IdentityError LoginAlreadyAssociated()
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating an external login is already associated with an account.
    content.vb: Public Overrides Function LoginAlreadyAssociated As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.LoginAlreadyAssociated
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.LoginAlreadyAssociated*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidUserName(System.String)
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidUserName(System.String)
  id: InvalidUserName(System.String)
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: InvalidUserName(String)
  nameWithType: IdentityErrorDescriberZhHans.InvalidUserName(String)
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidUserName(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: InvalidUserName
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 93
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating the specified user <code data-dev-comment-type=\"paramref\" class=\"paramref\">userName</code> is invalid.\n"
  example: []
  syntax:
    content: public override IdentityError InvalidUserName(string userName)
    parameters:
    - id: userName
      type: System.String
      description: The user name that is invalid.
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating the specified user <code data-dev-comment-type="paramref" class="paramref">userName</code> is invalid.
    content.vb: Public Overrides Function InvalidUserName(userName As String) As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidUserName(System.String)
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidUserName*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidEmail(System.String)
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidEmail(System.String)
  id: InvalidEmail(System.String)
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: InvalidEmail(String)
  nameWithType: IdentityErrorDescriberZhHans.InvalidEmail(String)
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidEmail(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: InvalidEmail
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 105
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">email</code> is invalid.\n"
  example: []
  syntax:
    content: public override IdentityError InvalidEmail(string email)
    parameters:
    - id: email
      type: System.String
      description: The email that is invalid.
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating the specified <code data-dev-comment-type="paramref" class="paramref">email</code> is invalid.
    content.vb: Public Overrides Function InvalidEmail(email As String) As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidEmail(System.String)
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidEmail*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateUserName(System.String)
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateUserName(System.String)
  id: DuplicateUserName(System.String)
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: DuplicateUserName(String)
  nameWithType: IdentityErrorDescriberZhHans.DuplicateUserName(String)
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateUserName(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: DuplicateUserName
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 117
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">userName</code> already exists.\n"
  example: []
  syntax:
    content: public override IdentityError DuplicateUserName(string userName)
    parameters:
    - id: userName
      type: System.String
      description: The user name that already exists.
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating the specified <code data-dev-comment-type="paramref" class="paramref">userName</code> already exists.
    content.vb: Public Overrides Function DuplicateUserName(userName As String) As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateUserName(System.String)
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateUserName*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateEmail(System.String)
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateEmail(System.String)
  id: DuplicateEmail(System.String)
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: DuplicateEmail(String)
  nameWithType: IdentityErrorDescriberZhHans.DuplicateEmail(String)
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateEmail(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: DuplicateEmail
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 129
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">email</code> is already associated with an account.\n"
  example: []
  syntax:
    content: public override IdentityError DuplicateEmail(string email)
    parameters:
    - id: email
      type: System.String
      description: The email that is already associated with an account.
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating the specified <code data-dev-comment-type="paramref" class="paramref">email</code> is already associated with an account.
    content.vb: Public Overrides Function DuplicateEmail(email As String) As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateEmail(System.String)
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateEmail*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidRoleName(System.String)
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidRoleName(System.String)
  id: InvalidRoleName(System.String)
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: InvalidRoleName(String)
  nameWithType: IdentityErrorDescriberZhHans.InvalidRoleName(String)
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidRoleName(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: InvalidRoleName
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 141
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">role</code> name is invalid.\n"
  example: []
  syntax:
    content: public override IdentityError InvalidRoleName(string role)
    parameters:
    - id: role
      type: System.String
      description: The invalid role.
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating the specific role <code data-dev-comment-type="paramref" class="paramref">role</code> name is invalid.
    content.vb: Public Overrides Function InvalidRoleName(role As String) As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidRoleName(System.String)
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidRoleName*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateRoleName(System.String)
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateRoleName(System.String)
  id: DuplicateRoleName(System.String)
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: DuplicateRoleName(String)
  nameWithType: IdentityErrorDescriberZhHans.DuplicateRoleName(String)
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateRoleName(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: DuplicateRoleName
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 153
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">role</code> name already exists.\n"
  example: []
  syntax:
    content: public override IdentityError DuplicateRoleName(string role)
    parameters:
    - id: role
      type: System.String
      description: The duplicate role.
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating the specific role <code data-dev-comment-type="paramref" class="paramref">role</code> name already exists.
    content.vb: Public Overrides Function DuplicateRoleName(role As String) As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateRoleName(System.String)
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateRoleName*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyHasPassword
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyHasPassword
  id: UserAlreadyHasPassword
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: UserAlreadyHasPassword()
  nameWithType: IdentityErrorDescriberZhHans.UserAlreadyHasPassword()
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyHasPassword()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: UserAlreadyHasPassword
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 164
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating a user already has a password.\n"
  example: []
  syntax:
    content: public override IdentityError UserAlreadyHasPassword()
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating a user already has a password.
    content.vb: Public Overrides Function UserAlreadyHasPassword As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyHasPassword
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyHasPassword*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserLockoutNotEnabled
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserLockoutNotEnabled
  id: UserLockoutNotEnabled
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: UserLockoutNotEnabled()
  nameWithType: IdentityErrorDescriberZhHans.UserLockoutNotEnabled()
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserLockoutNotEnabled()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: UserLockoutNotEnabled
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 175
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating user lockout is not enabled.\n"
  example: []
  syntax:
    content: public override IdentityError UserLockoutNotEnabled()
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating user lockout is not enabled.
    content.vb: Public Overrides Function UserLockoutNotEnabled As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserLockoutNotEnabled
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserLockoutNotEnabled*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyInRole(System.String)
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyInRole(System.String)
  id: UserAlreadyInRole(System.String)
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: UserAlreadyInRole(String)
  nameWithType: IdentityErrorDescriberZhHans.UserAlreadyInRole(String)
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyInRole(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: UserAlreadyInRole
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 187
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating a user is already in the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">role</code>.\n"
  example: []
  syntax:
    content: public override IdentityError UserAlreadyInRole(string role)
    parameters:
    - id: role
      type: System.String
      description: The duplicate role.
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating a user is already in the specified <code data-dev-comment-type="paramref" class="paramref">role</code>.
    content.vb: Public Overrides Function UserAlreadyInRole(role As String) As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyInRole(System.String)
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyInRole*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserNotInRole(System.String)
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserNotInRole(System.String)
  id: UserNotInRole(System.String)
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: UserNotInRole(String)
  nameWithType: IdentityErrorDescriberZhHans.UserNotInRole(String)
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserNotInRole(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: UserNotInRole
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 199
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating a user is not in the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">role</code>.\n"
  example: []
  syntax:
    content: public override IdentityError UserNotInRole(string role)
    parameters:
    - id: role
      type: System.String
      description: The duplicate role.
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating a user is not in the specified <code data-dev-comment-type="paramref" class="paramref">role</code>.
    content.vb: Public Overrides Function UserNotInRole(role As String) As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserNotInRole(System.String)
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserNotInRole*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordTooShort(System.Int32)
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordTooShort(System.Int32)
  id: PasswordTooShort(System.Int32)
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: PasswordTooShort(Int32)
  nameWithType: IdentityErrorDescriberZhHans.PasswordTooShort(Int32)
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordTooShort(System.Int32)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: PasswordTooShort
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 211
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating a password of the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">length</code> does not meet the minimum length requirements.\n"
  example: []
  syntax:
    content: public override IdentityError PasswordTooShort(int length)
    parameters:
    - id: length
      type: System.Int32
      description: The length that is not long enough.
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating a password of the specified <code data-dev-comment-type="paramref" class="paramref">length</code> does not meet the minimum length requirements.
    content.vb: Public Overrides Function PasswordTooShort(length As Integer) As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordTooShort(System.Int32)
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordTooShort*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUniqueChars(System.Int32)
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUniqueChars(System.Int32)
  id: PasswordRequiresUniqueChars(System.Int32)
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: PasswordRequiresUniqueChars(Int32)
  nameWithType: IdentityErrorDescriberZhHans.PasswordRequiresUniqueChars(Int32)
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUniqueChars(System.Int32)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: PasswordRequiresUniqueChars
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 223
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating a password does not meet the minimum number <code data-dev-comment-type=\"paramref\" class=\"paramref\">uniqueChars</code> of unique chars.\n"
  example: []
  syntax:
    content: public override IdentityError PasswordRequiresUniqueChars(int uniqueChars)
    parameters:
    - id: uniqueChars
      type: System.Int32
      description: The number of different chars that must be used.
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating a password does not meet the minimum number <code data-dev-comment-type="paramref" class="paramref">uniqueChars</code> of unique chars.
    content.vb: Public Overrides Function PasswordRequiresUniqueChars(uniqueChars As Integer) As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUniqueChars(System.Int32)
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUniqueChars*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresNonAlphanumeric
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresNonAlphanumeric
  id: PasswordRequiresNonAlphanumeric
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: PasswordRequiresNonAlphanumeric()
  nameWithType: IdentityErrorDescriberZhHans.PasswordRequiresNonAlphanumeric()
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresNonAlphanumeric()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: PasswordRequiresNonAlphanumeric
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 234
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating a password entered does not contain a non-alphanumeric character, which is required by the password policy.\n"
  example: []
  syntax:
    content: public override IdentityError PasswordRequiresNonAlphanumeric()
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating a password entered does not contain a non-alphanumeric character.
    content.vb: Public Overrides Function PasswordRequiresNonAlphanumeric As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresNonAlphanumeric
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresNonAlphanumeric*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresDigit
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresDigit
  id: PasswordRequiresDigit
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: PasswordRequiresDigit()
  nameWithType: IdentityErrorDescriberZhHans.PasswordRequiresDigit()
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresDigit()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: PasswordRequiresDigit
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 245
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating a password entered does not contain a numeric character, which is required by the password policy.\n"
  example: []
  syntax:
    content: public override IdentityError PasswordRequiresDigit()
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating a password entered does not contain a numeric character.
    content.vb: Public Overrides Function PasswordRequiresDigit As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresDigit
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresDigit*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresLower
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresLower
  id: PasswordRequiresLower
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: PasswordRequiresLower()
  nameWithType: IdentityErrorDescriberZhHans.PasswordRequiresLower()
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresLower()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: PasswordRequiresLower
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 256
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating a password entered does not contain a lower case letter, which is required by the password policy.\n"
  example: []
  syntax:
    content: public override IdentityError PasswordRequiresLower()
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating a password entered does not contain a lower case letter.
    content.vb: Public Overrides Function PasswordRequiresLower As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresLower
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresLower*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUpper
  commentId: M:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUpper
  id: PasswordRequiresUpper
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: PasswordRequiresUpper()
  nameWithType: IdentityErrorDescriberZhHans.PasswordRequiresUpper()
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUpper()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: PasswordRequiresUpper
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 267
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nReturns an <xref href=\"Microsoft.AspNetCore.Identity.IdentityError\" data-throw-if-not-resolved=\"false\"></xref> indicating a password entered does not contain an upper case letter, which is required by the password policy.\n"
  example: []
  syntax:
    content: public override IdentityError PasswordRequiresUpper()
    return:
      type: Microsoft.AspNetCore.Identity.IdentityError
      description: An <xref href="Microsoft.AspNetCore.Identity.IdentityError" data-throw-if-not-resolved="false"></xref> indicating a password entered does not contain an upper case letter.
    content.vb: Public Overrides Function PasswordRequiresUpper As IdentityError
  overridden: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUpper
  overload: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUpper*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DescriptionDict
  commentId: F:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DescriptionDict
  id: DescriptionDict
  parent: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  langs:
  - csharp
  - vb
  name: DescriptionDict
  nameWithType: IdentityErrorDescriberZhHans.DescriptionDict
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DescriptionDict
  type: Field
  source:
    remote:
      path: src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: DescriptionDict
    path: ../src/Hybrid.Zero/Identity/IdentityErrorDescriberZhHans.cs
    startLine: 277
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Identity
  summary: "\nIdentity错误信息字典\n"
  example: []
  syntax:
    content: public static readonly IDictionary<string, string> DescriptionDict
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Shared ReadOnly DescriptionDict As IDictionary(Of String, String)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Hybrid.Zero.Identity
  commentId: N:Hybrid.Zero.Identity
  name: Hybrid.Zero.Identity
  nameWithType: Hybrid.Zero.Identity
  fullName: Hybrid.Zero.Identity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  commentId: T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  parent: Microsoft.AspNetCore.Identity
  isExternal: true
  name: IdentityErrorDescriber
  nameWithType: IdentityErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  name: CastTo(Type)
  nameWithType: ObjectExtensions.CastTo(Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  name: CastTo<T>(T)
  nameWithType: ObjectExtensions.CastTo<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(T)
  name.vb: CastTo(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Zero.Identity.IdentityErrorDescriberZhHans[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<IdentityErrorDescriberZhHans>(IdentityErrorDescriberZhHans[])
  nameWithType: ObjectExtensions.IsIn<IdentityErrorDescriberZhHans>(IdentityErrorDescriberZhHans[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>(Hybrid.Zero.Identity.IdentityErrorDescriberZhHans[])
  nameWithType.vb: ObjectExtensions.IsIn(Of IdentityErrorDescriberZhHans)(IdentityErrorDescriberZhHans())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)(Hybrid.Zero.Identity.IdentityErrorDescriberZhHans())
  name.vb: IsIn(Of IdentityErrorDescriberZhHans)(IdentityErrorDescriberZhHans())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn<IdentityErrorDescriberZhHans>
    nameWithType: ObjectExtensions.IsIn<IdentityErrorDescriberZhHans>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn(Of IdentityErrorDescriberZhHans)
    nameWithType: ObjectExtensions.IsIn(Of IdentityErrorDescriberZhHans)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: ObjectExtensions.ToDynamic()
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<IdentityErrorDescriberZhHans>()
  nameWithType: ObjectExtensions.DeepClone<IdentityErrorDescriberZhHans>()
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of IdentityErrorDescriberZhHans)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)()
  name.vb: DeepClone(Of IdentityErrorDescriberZhHans)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone<IdentityErrorDescriberZhHans>
    nameWithType: ObjectExtensions.DeepClone<IdentityErrorDescriberZhHans>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone(Of IdentityErrorDescriberZhHans)
    nameWithType: ObjectExtensions.DeepClone(Of IdentityErrorDescriberZhHans)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<IdentityErrorDescriberZhHans>(Func<IdentityErrorDescriberZhHans, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<IdentityErrorDescriberZhHans>(Func<IdentityErrorDescriberZhHans, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>(System.Func<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of IdentityErrorDescriberZhHans)(Func(Of IdentityErrorDescriberZhHans, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)(System.Func(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, System.Boolean), System.String)
  name.vb: Required(Of IdentityErrorDescriberZhHans)(Func(Of IdentityErrorDescriberZhHans, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required<IdentityErrorDescriberZhHans>
    nameWithType: ParameterCheckExtensions.Required<IdentityErrorDescriberZhHans>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required(Of IdentityErrorDescriberZhHans)
    nameWithType: ParameterCheckExtensions.Required(Of IdentityErrorDescriberZhHans)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<IdentityErrorDescriberZhHans, TException>(Func<IdentityErrorDescriberZhHans, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<IdentityErrorDescriberZhHans, TException>(Func<IdentityErrorDescriberZhHans, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TException>(System.Func<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of IdentityErrorDescriberZhHans, TException)(Func(Of IdentityErrorDescriberZhHans, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TException)(System.Func(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, System.Boolean), System.String)
  name.vb: Required(Of IdentityErrorDescriberZhHans, TException)(Func(Of IdentityErrorDescriberZhHans, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required<IdentityErrorDescriberZhHans, TException>
    nameWithType: ParameterCheckExtensions.Required<IdentityErrorDescriberZhHans, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required(Of IdentityErrorDescriberZhHans, TException)
    nameWithType: ParameterCheckExtensions.Required(Of IdentityErrorDescriberZhHans, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  name: CheckNotNull<IdentityErrorDescriberZhHans>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<IdentityErrorDescriberZhHans>(String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of IdentityErrorDescriberZhHans)(String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)(System.String)
  name.vb: CheckNotNull(Of IdentityErrorDescriberZhHans)(String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull<IdentityErrorDescriberZhHans>
    nameWithType: ParameterCheckExtensions.CheckNotNull<IdentityErrorDescriberZhHans>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull(Of IdentityErrorDescriberZhHans)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of IdentityErrorDescriberZhHans)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans},System.Action{System.Exception},System.Action{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<IdentityErrorDescriberZhHans>(Action<IdentityErrorDescriberZhHans>, Action<Exception>, Action<IdentityErrorDescriberZhHans>)
  nameWithType: TryCatchExtensions.TryCatch<IdentityErrorDescriberZhHans>(Action<IdentityErrorDescriberZhHans>, Action<Exception>, Action<IdentityErrorDescriberZhHans>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>(System.Action<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>, System.Action<System.Exception>, System.Action<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of IdentityErrorDescriberZhHans)(Action(Of IdentityErrorDescriberZhHans), Action(Of Exception), Action(Of IdentityErrorDescriberZhHans))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)(System.Action(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans), System.Action(Of System.Exception), System.Action(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans))
  name.vb: TryCatch(Of IdentityErrorDescriberZhHans)(Action(Of IdentityErrorDescriberZhHans), Action(Of Exception), Action(Of IdentityErrorDescriberZhHans))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<IdentityErrorDescriberZhHans>
    nameWithType: TryCatchExtensions.TryCatch<IdentityErrorDescriberZhHans>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of IdentityErrorDescriberZhHans)
    nameWithType: TryCatchExtensions.TryCatch(Of IdentityErrorDescriberZhHans)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  name: TryCatch<IdentityErrorDescriberZhHans>(Action<IdentityErrorDescriberZhHans>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<IdentityErrorDescriberZhHans>(Action<IdentityErrorDescriberZhHans>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>(System.Action<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of IdentityErrorDescriberZhHans)(Action(Of IdentityErrorDescriberZhHans), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)(System.Action(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans), System.Action(Of System.Exception))
  name.vb: TryCatch(Of IdentityErrorDescriberZhHans)(Action(Of IdentityErrorDescriberZhHans), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch<IdentityErrorDescriberZhHans>
    nameWithType: TryCatchExtensions.TryCatch<IdentityErrorDescriberZhHans>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of IdentityErrorDescriberZhHans)
    nameWithType: TryCatchExtensions.TryCatch(Of IdentityErrorDescriberZhHans)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<IdentityErrorDescriberZhHans, TResult>(Func<IdentityErrorDescriberZhHans, TResult>, Action<Exception>, Action<IdentityErrorDescriberZhHans>)
  nameWithType: TryCatchExtensions.TryCatch<IdentityErrorDescriberZhHans, TResult>(Func<IdentityErrorDescriberZhHans, TResult>, Action<Exception>, Action<IdentityErrorDescriberZhHans>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult>(System.Func<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult>, System.Action<System.Exception>, System.Action<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of IdentityErrorDescriberZhHans, TResult)(Func(Of IdentityErrorDescriberZhHans, TResult), Action(Of Exception), Action(Of IdentityErrorDescriberZhHans))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult)(System.Func(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult), System.Action(Of System.Exception), System.Action(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans))
  name.vb: TryCatch(Of IdentityErrorDescriberZhHans, TResult)(Func(Of IdentityErrorDescriberZhHans, TResult), Action(Of Exception), Action(Of IdentityErrorDescriberZhHans))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<IdentityErrorDescriberZhHans, TResult>
    nameWithType: TryCatchExtensions.TryCatch<IdentityErrorDescriberZhHans, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of IdentityErrorDescriberZhHans, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of IdentityErrorDescriberZhHans, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans,{TResult}},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  name: TryCatch<IdentityErrorDescriberZhHans, TResult>(Func<IdentityErrorDescriberZhHans, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<IdentityErrorDescriberZhHans, TResult>(Func<IdentityErrorDescriberZhHans, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult>(System.Func<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of IdentityErrorDescriberZhHans, TResult)(Func(Of IdentityErrorDescriberZhHans, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult)(System.Func(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of IdentityErrorDescriberZhHans, TResult)(Func(Of IdentityErrorDescriberZhHans, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<IdentityErrorDescriberZhHans, TResult>
    nameWithType: TryCatchExtensions.TryCatch<IdentityErrorDescriberZhHans, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of IdentityErrorDescriberZhHans, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of IdentityErrorDescriberZhHans, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans},System.Action{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  name: TryFinally<IdentityErrorDescriberZhHans>(Action<IdentityErrorDescriberZhHans>, Action<IdentityErrorDescriberZhHans>)
  nameWithType: TryCatchExtensions.TryFinally<IdentityErrorDescriberZhHans>(Action<IdentityErrorDescriberZhHans>, Action<IdentityErrorDescriberZhHans>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>(System.Action<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>, System.Action<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of IdentityErrorDescriberZhHans)(Action(Of IdentityErrorDescriberZhHans), Action(Of IdentityErrorDescriberZhHans))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)(System.Action(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans), System.Action(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans))
  name.vb: TryFinally(Of IdentityErrorDescriberZhHans)(Action(Of IdentityErrorDescriberZhHans), Action(Of IdentityErrorDescriberZhHans))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally<IdentityErrorDescriberZhHans>
    nameWithType: TryCatchExtensions.TryFinally<IdentityErrorDescriberZhHans>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally(Of IdentityErrorDescriberZhHans)
    nameWithType: TryCatchExtensions.TryFinally(Of IdentityErrorDescriberZhHans)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  parent: Hybrid.Json.JsonExtensions
  definition: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  name: ToJsonString(Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  name: MapTo<TTarget>()
  nameWithType: MapperExtensions.MapTo<TTarget>()
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>()
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)()
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)()
  name.vb: MapTo(Of TTarget)()
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<IdentityErrorDescriberZhHans, TTarget>(TTarget)
  nameWithType: MapperExtensions.MapTo<IdentityErrorDescriberZhHans, TTarget>(TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TTarget>(TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of IdentityErrorDescriberZhHans, TTarget)(TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TTarget)(TTarget)
  name.vb: MapTo(Of IdentityErrorDescriberZhHans, TTarget)(TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo<IdentityErrorDescriberZhHans, TTarget>
    nameWithType: MapperExtensions.MapTo<IdentityErrorDescriberZhHans, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo(Of IdentityErrorDescriberZhHans, TTarget)
    nameWithType: MapperExtensions.MapTo(Of IdentityErrorDescriberZhHans, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  name: Locking(Action)
  nameWithType: LockExtensions.Locking(Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  name: Locking<IdentityErrorDescriberZhHans>(Action<IdentityErrorDescriberZhHans>)
  nameWithType: LockExtensions.Locking<IdentityErrorDescriberZhHans>(Action<IdentityErrorDescriberZhHans>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>(System.Action<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>)
  nameWithType.vb: LockExtensions.Locking(Of IdentityErrorDescriberZhHans)(Action(Of IdentityErrorDescriberZhHans))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)(System.Action(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans))
  name.vb: Locking(Of IdentityErrorDescriberZhHans)(Action(Of IdentityErrorDescriberZhHans))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking<IdentityErrorDescriberZhHans>
    nameWithType: LockExtensions.Locking<IdentityErrorDescriberZhHans>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking(Of IdentityErrorDescriberZhHans)
    nameWithType: LockExtensions.Locking(Of IdentityErrorDescriberZhHans)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  name: Locking<TResult>(Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Zero.Identity.IdentityErrorDescriberZhHans,{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  name: Locking<IdentityErrorDescriberZhHans, TResult>(Func<IdentityErrorDescriberZhHans, TResult>)
  nameWithType: LockExtensions.Locking<IdentityErrorDescriberZhHans, TResult>(Func<IdentityErrorDescriberZhHans, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult>(System.Func<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of IdentityErrorDescriberZhHans, TResult)(Func(Of IdentityErrorDescriberZhHans, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult)(System.Func(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult))
  name.vb: Locking(Of IdentityErrorDescriberZhHans, TResult)(Func(Of IdentityErrorDescriberZhHans, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking<IdentityErrorDescriberZhHans, TResult>
    nameWithType: LockExtensions.Locking<IdentityErrorDescriberZhHans, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking(Of IdentityErrorDescriberZhHans, TResult)
    nameWithType: LockExtensions.Locking(Of IdentityErrorDescriberZhHans, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
    name: IdentityErrorDescriberZhHans
    nameWithType: IdentityErrorDescriberZhHans
    fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<IdentityErrorDescriberZhHans, TKey>()
  nameWithType: EntityExtensions.CheckICreatedTime<IdentityErrorDescriberZhHans, TKey>()
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TKey>()
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of IdentityErrorDescriberZhHans, TKey)()
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TKey)()
  name.vb: CheckICreatedTime(Of IdentityErrorDescriberZhHans, TKey)()
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime<IdentityErrorDescriberZhHans, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<IdentityErrorDescriberZhHans, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime(Of IdentityErrorDescriberZhHans, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of IdentityErrorDescriberZhHans, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckICreationAudited<IdentityErrorDescriberZhHans, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<IdentityErrorDescriberZhHans, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of IdentityErrorDescriberZhHans, TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of IdentityErrorDescriberZhHans, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<IdentityErrorDescriberZhHans, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<IdentityErrorDescriberZhHans, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of IdentityErrorDescriberZhHans, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of IdentityErrorDescriberZhHans, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckIUpdateAudited<IdentityErrorDescriberZhHans, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<IdentityErrorDescriberZhHans, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of IdentityErrorDescriberZhHans, TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of IdentityErrorDescriberZhHans, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<IdentityErrorDescriberZhHans, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<IdentityErrorDescriberZhHans, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of IdentityErrorDescriberZhHans, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of IdentityErrorDescriberZhHans, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Zero.Identity.IdentityErrorDescriberZhHans, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: true
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  isExternal: true
  name: CastTo(Object, Type)
  nameWithType: ObjectExtensions.CastTo(Object, Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object, System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions
  commentId: T:Hybrid.Extensions.ObjectExtensions
  parent: Hybrid.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Hybrid.Extensions.ObjectExtensions
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  isExternal: true
  name: CastTo<T>(Object, T)
  nameWithType: ObjectExtensions.CastTo<T>(Object, T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object, T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object, T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object, T)
  name.vb: CastTo(Of T)(Object, T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<T>(T, T[])
  nameWithType: ObjectExtensions.IsIn<T>(T, T[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>(T, T[])
  nameWithType.vb: ObjectExtensions.IsIn(Of T)(T, T())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)(T, T())
  name.vb: IsIn(Of T)(T, T())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn<T>
    nameWithType: ObjectExtensions.IsIn<T>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn(Of T)
    nameWithType: ObjectExtensions.IsIn(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: ObjectExtensions.ToDynamic(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T>
    nameWithType: ParameterCheckExtensions.Required<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T)
    nameWithType: ParameterCheckExtensions.Required(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions
  commentId: T:Hybrid.Extensions.ParameterCheckExtensions
  parent: Hybrid.Extensions
  name: ParameterCheckExtensions
  nameWithType: ParameterCheckExtensions
  fullName: Hybrid.Extensions.ParameterCheckExtensions
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T, TException>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T, TException>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T, TException)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T, TException)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T, TException>
    nameWithType: ParameterCheckExtensions.Required<T, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T, TException)
    nameWithType: ParameterCheckExtensions.Required(Of T, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  isExternal: true
  name: CheckNotNull<T>(T, String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<T>(T, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>(T, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of T)(T, String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull<T>
    nameWithType: ParameterCheckExtensions.CheckNotNull<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions
  commentId: T:Hybrid.Extensions.TryCatchExtensions
  parent: Hybrid.Extensions
  name: TryCatchExtensions
  nameWithType: TryCatchExtensions
  fullName: Hybrid.Extensions.TryCatchExtensions
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  isExternal: true
  name: TryFinally<T>(T, Action<T>, Action<T>)
  nameWithType: TryCatchExtensions.TryFinally<T>(T, Action<T>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>(T, System.Action<T>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of T)(T, Action(Of T), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)(T, System.Action(Of T), System.Action(Of T))
  name.vb: TryFinally(Of T)(T, Action(Of T), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally<T>
    nameWithType: TryCatchExtensions.TryFinally<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally(Of T)
    nameWithType: TryCatchExtensions.TryFinally(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  isExternal: true
  name: ToJsonString(Object, Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Object, Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Object, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions
  commentId: T:Hybrid.Json.JsonExtensions
  parent: Hybrid.Json
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: Hybrid.Json.JsonExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  isExternal: true
  name: MapTo<TTarget>(Object)
  nameWithType: MapperExtensions.MapTo<TTarget>(Object)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>(System.Object)
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)(Object)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)(System.Object)
  name.vb: MapTo(Of TTarget)(Object)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Mapping.MapperExtensions
  commentId: T:Hybrid.Mapping.MapperExtensions
  parent: Hybrid.Mapping
  name: MapperExtensions
  nameWithType: MapperExtensions
  fullName: Hybrid.Mapping.MapperExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType: MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  name.vb: MapTo(Of TSource, TTarget)(TSource, TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo<TSource, TTarget>
    nameWithType: MapperExtensions.MapTo<TSource, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo(Of TSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TSource, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  isExternal: true
  name: Locking(Object, Action)
  nameWithType: LockExtensions.Locking(Object, Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Object, System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions
  commentId: T:Hybrid.Reflection.LockExtensions
  parent: Hybrid.Reflection
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: Hybrid.Reflection.LockExtensions
- uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  isExternal: true
  name: Locking<T>(T, Action<T>)
  nameWithType: LockExtensions.Locking<T>(T, Action<T>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<T>(T, System.Action<T>)
  nameWithType.vb: LockExtensions.Locking(Of T)(T, Action(Of T))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of T)(T, System.Action(Of T))
  name.vb: Locking(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking<T>
    nameWithType: LockExtensions.Locking<T>
    fullName: Hybrid.Reflection.LockExtensions.Locking<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking(Of T)
    nameWithType: LockExtensions.Locking(Of T)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  isExternal: true
  name: Locking<TResult>(Object, Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Object, Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Object, System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Object, Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Object, System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Object, Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  isExternal: true
  name: Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  nameWithType: LockExtensions.Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>(TSource, System.Func<TSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)(TSource, System.Func(Of TSource, TResult))
  name.vb: Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking<TSource, TResult>
    nameWithType: LockExtensions.Locking<TSource, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking(Of TSource, TResult)
    nameWithType: LockExtensions.Locking(Of TSource, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  name.vb: CheckICreatedTime(Of TEntity, TKey)(TEntity)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime<TEntity, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime(Of TEntity, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions
  commentId: T:Hybrid.Domain.Entities.EntityExtensions
  parent: Hybrid.Domain.Entities
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: Hybrid.Domain.Entities.EntityExtensions
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions
  commentId: N:Hybrid.Extensions
  name: Hybrid.Extensions
  nameWithType: Hybrid.Extensions
  fullName: Hybrid.Extensions
- uid: Hybrid.Json
  commentId: N:Hybrid.Json
  name: Hybrid.Json
  nameWithType: Hybrid.Json
  fullName: Hybrid.Json
- uid: Hybrid.Mapping
  commentId: N:Hybrid.Mapping
  name: Hybrid.Mapping
  nameWithType: Hybrid.Mapping
  fullName: Hybrid.Mapping
- uid: Hybrid.Reflection
  commentId: N:Hybrid.Reflection
  name: Hybrid.Reflection
  nameWithType: Hybrid.Reflection
  fullName: Hybrid.Reflection
- uid: Hybrid.Domain.Entities
  commentId: N:Hybrid.Domain.Entities
  name: Hybrid.Domain.Entities
  nameWithType: Hybrid.Domain.Entities
  fullName: Hybrid.Domain.Entities
- uid: Microsoft.AspNetCore.Identity.IdentityError
  commentId: T:Microsoft.AspNetCore.Identity.IdentityError
  parent: Microsoft.AspNetCore.Identity
  isExternal: true
  name: IdentityError
  nameWithType: IdentityError
  fullName: Microsoft.AspNetCore.Identity.IdentityError
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DefaultError
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DefaultError
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: DefaultError()
  nameWithType: IdentityErrorDescriber.DefaultError()
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DefaultError()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DefaultError
    name: DefaultError
    nameWithType: IdentityErrorDescriber.DefaultError
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DefaultError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DefaultError
    name: DefaultError
    nameWithType: IdentityErrorDescriber.DefaultError
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DefaultError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DefaultError*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DefaultError
  name: DefaultError
  nameWithType: IdentityErrorDescriberZhHans.DefaultError
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DefaultError
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.ConcurrencyFailure
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.ConcurrencyFailure
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: ConcurrencyFailure()
  nameWithType: IdentityErrorDescriber.ConcurrencyFailure()
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.ConcurrencyFailure()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.ConcurrencyFailure
    name: ConcurrencyFailure
    nameWithType: IdentityErrorDescriber.ConcurrencyFailure
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.ConcurrencyFailure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.ConcurrencyFailure
    name: ConcurrencyFailure
    nameWithType: IdentityErrorDescriber.ConcurrencyFailure
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.ConcurrencyFailure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.ConcurrencyFailure*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.ConcurrencyFailure
  name: ConcurrencyFailure
  nameWithType: IdentityErrorDescriberZhHans.ConcurrencyFailure
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.ConcurrencyFailure
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordMismatch
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordMismatch
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: PasswordMismatch()
  nameWithType: IdentityErrorDescriber.PasswordMismatch()
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordMismatch()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordMismatch
    name: PasswordMismatch
    nameWithType: IdentityErrorDescriber.PasswordMismatch
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordMismatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordMismatch
    name: PasswordMismatch
    nameWithType: IdentityErrorDescriber.PasswordMismatch
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordMismatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordMismatch*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordMismatch
  name: PasswordMismatch
  nameWithType: IdentityErrorDescriberZhHans.PasswordMismatch
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordMismatch
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidToken
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidToken
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: InvalidToken()
  nameWithType: IdentityErrorDescriber.InvalidToken()
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidToken()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidToken
    name: InvalidToken
    nameWithType: IdentityErrorDescriber.InvalidToken
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidToken
    name: InvalidToken
    nameWithType: IdentityErrorDescriber.InvalidToken
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidToken*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidToken
  name: InvalidToken
  nameWithType: IdentityErrorDescriberZhHans.InvalidToken
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidToken
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.RecoveryCodeRedemptionFailed
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.RecoveryCodeRedemptionFailed
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: RecoveryCodeRedemptionFailed()
  nameWithType: IdentityErrorDescriber.RecoveryCodeRedemptionFailed()
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.RecoveryCodeRedemptionFailed()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.RecoveryCodeRedemptionFailed
    name: RecoveryCodeRedemptionFailed
    nameWithType: IdentityErrorDescriber.RecoveryCodeRedemptionFailed
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.RecoveryCodeRedemptionFailed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.RecoveryCodeRedemptionFailed
    name: RecoveryCodeRedemptionFailed
    nameWithType: IdentityErrorDescriber.RecoveryCodeRedemptionFailed
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.RecoveryCodeRedemptionFailed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.RecoveryCodeRedemptionFailed*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.RecoveryCodeRedemptionFailed
  name: RecoveryCodeRedemptionFailed
  nameWithType: IdentityErrorDescriberZhHans.RecoveryCodeRedemptionFailed
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.RecoveryCodeRedemptionFailed
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.LoginAlreadyAssociated
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.LoginAlreadyAssociated
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: LoginAlreadyAssociated()
  nameWithType: IdentityErrorDescriber.LoginAlreadyAssociated()
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.LoginAlreadyAssociated()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.LoginAlreadyAssociated
    name: LoginAlreadyAssociated
    nameWithType: IdentityErrorDescriber.LoginAlreadyAssociated
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.LoginAlreadyAssociated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.LoginAlreadyAssociated
    name: LoginAlreadyAssociated
    nameWithType: IdentityErrorDescriber.LoginAlreadyAssociated
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.LoginAlreadyAssociated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.LoginAlreadyAssociated*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.LoginAlreadyAssociated
  name: LoginAlreadyAssociated
  nameWithType: IdentityErrorDescriberZhHans.LoginAlreadyAssociated
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.LoginAlreadyAssociated
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidUserName(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidUserName(System.String)
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: InvalidUserName(String)
  nameWithType: IdentityErrorDescriber.InvalidUserName(String)
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidUserName(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidUserName(System.String)
    name: InvalidUserName
    nameWithType: IdentityErrorDescriber.InvalidUserName
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidUserName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidUserName(System.String)
    name: InvalidUserName
    nameWithType: IdentityErrorDescriber.InvalidUserName
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidUserName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidUserName*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidUserName
  name: InvalidUserName
  nameWithType: IdentityErrorDescriberZhHans.InvalidUserName
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidUserName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidEmail(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidEmail(System.String)
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: InvalidEmail(String)
  nameWithType: IdentityErrorDescriber.InvalidEmail(String)
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidEmail(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidEmail(System.String)
    name: InvalidEmail
    nameWithType: IdentityErrorDescriber.InvalidEmail
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidEmail
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidEmail(System.String)
    name: InvalidEmail
    nameWithType: IdentityErrorDescriber.InvalidEmail
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidEmail
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidEmail*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidEmail
  name: InvalidEmail
  nameWithType: IdentityErrorDescriberZhHans.InvalidEmail
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidEmail
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateUserName(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateUserName(System.String)
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: DuplicateUserName(String)
  nameWithType: IdentityErrorDescriber.DuplicateUserName(String)
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateUserName(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateUserName(System.String)
    name: DuplicateUserName
    nameWithType: IdentityErrorDescriber.DuplicateUserName
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateUserName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateUserName(System.String)
    name: DuplicateUserName
    nameWithType: IdentityErrorDescriber.DuplicateUserName
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateUserName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateUserName*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateUserName
  name: DuplicateUserName
  nameWithType: IdentityErrorDescriberZhHans.DuplicateUserName
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateUserName
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateEmail(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateEmail(System.String)
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: DuplicateEmail(String)
  nameWithType: IdentityErrorDescriber.DuplicateEmail(String)
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateEmail(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateEmail(System.String)
    name: DuplicateEmail
    nameWithType: IdentityErrorDescriber.DuplicateEmail
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateEmail
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateEmail(System.String)
    name: DuplicateEmail
    nameWithType: IdentityErrorDescriber.DuplicateEmail
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateEmail
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateEmail*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateEmail
  name: DuplicateEmail
  nameWithType: IdentityErrorDescriberZhHans.DuplicateEmail
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateEmail
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidRoleName(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidRoleName(System.String)
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: InvalidRoleName(String)
  nameWithType: IdentityErrorDescriber.InvalidRoleName(String)
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidRoleName(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidRoleName(System.String)
    name: InvalidRoleName
    nameWithType: IdentityErrorDescriber.InvalidRoleName
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidRoleName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidRoleName(System.String)
    name: InvalidRoleName
    nameWithType: IdentityErrorDescriber.InvalidRoleName
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.InvalidRoleName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidRoleName*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidRoleName
  name: InvalidRoleName
  nameWithType: IdentityErrorDescriberZhHans.InvalidRoleName
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.InvalidRoleName
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateRoleName(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateRoleName(System.String)
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: DuplicateRoleName(String)
  nameWithType: IdentityErrorDescriber.DuplicateRoleName(String)
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateRoleName(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateRoleName(System.String)
    name: DuplicateRoleName
    nameWithType: IdentityErrorDescriber.DuplicateRoleName
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateRoleName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateRoleName(System.String)
    name: DuplicateRoleName
    nameWithType: IdentityErrorDescriber.DuplicateRoleName
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.DuplicateRoleName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateRoleName*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateRoleName
  name: DuplicateRoleName
  nameWithType: IdentityErrorDescriberZhHans.DuplicateRoleName
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.DuplicateRoleName
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyHasPassword
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyHasPassword
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: UserAlreadyHasPassword()
  nameWithType: IdentityErrorDescriber.UserAlreadyHasPassword()
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyHasPassword()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyHasPassword
    name: UserAlreadyHasPassword
    nameWithType: IdentityErrorDescriber.UserAlreadyHasPassword
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyHasPassword
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyHasPassword
    name: UserAlreadyHasPassword
    nameWithType: IdentityErrorDescriber.UserAlreadyHasPassword
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyHasPassword
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyHasPassword*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyHasPassword
  name: UserAlreadyHasPassword
  nameWithType: IdentityErrorDescriberZhHans.UserAlreadyHasPassword
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyHasPassword
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserLockoutNotEnabled
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserLockoutNotEnabled
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: UserLockoutNotEnabled()
  nameWithType: IdentityErrorDescriber.UserLockoutNotEnabled()
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserLockoutNotEnabled()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserLockoutNotEnabled
    name: UserLockoutNotEnabled
    nameWithType: IdentityErrorDescriber.UserLockoutNotEnabled
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserLockoutNotEnabled
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserLockoutNotEnabled
    name: UserLockoutNotEnabled
    nameWithType: IdentityErrorDescriber.UserLockoutNotEnabled
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserLockoutNotEnabled
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserLockoutNotEnabled*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserLockoutNotEnabled
  name: UserLockoutNotEnabled
  nameWithType: IdentityErrorDescriberZhHans.UserLockoutNotEnabled
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserLockoutNotEnabled
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyInRole(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyInRole(System.String)
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: UserAlreadyInRole(String)
  nameWithType: IdentityErrorDescriber.UserAlreadyInRole(String)
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyInRole(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyInRole(System.String)
    name: UserAlreadyInRole
    nameWithType: IdentityErrorDescriber.UserAlreadyInRole
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyInRole
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyInRole(System.String)
    name: UserAlreadyInRole
    nameWithType: IdentityErrorDescriber.UserAlreadyInRole
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserAlreadyInRole
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyInRole*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyInRole
  name: UserAlreadyInRole
  nameWithType: IdentityErrorDescriberZhHans.UserAlreadyInRole
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserAlreadyInRole
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserNotInRole(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserNotInRole(System.String)
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: UserNotInRole(String)
  nameWithType: IdentityErrorDescriber.UserNotInRole(String)
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserNotInRole(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserNotInRole(System.String)
    name: UserNotInRole
    nameWithType: IdentityErrorDescriber.UserNotInRole
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserNotInRole
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserNotInRole(System.String)
    name: UserNotInRole
    nameWithType: IdentityErrorDescriber.UserNotInRole
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.UserNotInRole
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserNotInRole*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserNotInRole
  name: UserNotInRole
  nameWithType: IdentityErrorDescriberZhHans.UserNotInRole
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.UserNotInRole
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordTooShort(System.Int32)
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordTooShort(System.Int32)
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: PasswordTooShort(Int32)
  nameWithType: IdentityErrorDescriber.PasswordTooShort(Int32)
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordTooShort(System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordTooShort(System.Int32)
    name: PasswordTooShort
    nameWithType: IdentityErrorDescriber.PasswordTooShort
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordTooShort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordTooShort(System.Int32)
    name: PasswordTooShort
    nameWithType: IdentityErrorDescriber.PasswordTooShort
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordTooShort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordTooShort*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordTooShort
  name: PasswordTooShort
  nameWithType: IdentityErrorDescriberZhHans.PasswordTooShort
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordTooShort
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUniqueChars(System.Int32)
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUniqueChars(System.Int32)
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: PasswordRequiresUniqueChars(Int32)
  nameWithType: IdentityErrorDescriber.PasswordRequiresUniqueChars(Int32)
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUniqueChars(System.Int32)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUniqueChars(System.Int32)
    name: PasswordRequiresUniqueChars
    nameWithType: IdentityErrorDescriber.PasswordRequiresUniqueChars
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUniqueChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUniqueChars(System.Int32)
    name: PasswordRequiresUniqueChars
    nameWithType: IdentityErrorDescriber.PasswordRequiresUniqueChars
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUniqueChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUniqueChars*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUniqueChars
  name: PasswordRequiresUniqueChars
  nameWithType: IdentityErrorDescriberZhHans.PasswordRequiresUniqueChars
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUniqueChars
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresNonAlphanumeric
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresNonAlphanumeric
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: PasswordRequiresNonAlphanumeric()
  nameWithType: IdentityErrorDescriber.PasswordRequiresNonAlphanumeric()
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresNonAlphanumeric()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresNonAlphanumeric
    name: PasswordRequiresNonAlphanumeric
    nameWithType: IdentityErrorDescriber.PasswordRequiresNonAlphanumeric
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresNonAlphanumeric
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresNonAlphanumeric
    name: PasswordRequiresNonAlphanumeric
    nameWithType: IdentityErrorDescriber.PasswordRequiresNonAlphanumeric
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresNonAlphanumeric
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresNonAlphanumeric*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresNonAlphanumeric
  name: PasswordRequiresNonAlphanumeric
  nameWithType: IdentityErrorDescriberZhHans.PasswordRequiresNonAlphanumeric
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresNonAlphanumeric
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresDigit
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresDigit
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: PasswordRequiresDigit()
  nameWithType: IdentityErrorDescriber.PasswordRequiresDigit()
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresDigit()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresDigit
    name: PasswordRequiresDigit
    nameWithType: IdentityErrorDescriber.PasswordRequiresDigit
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresDigit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresDigit
    name: PasswordRequiresDigit
    nameWithType: IdentityErrorDescriber.PasswordRequiresDigit
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresDigit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresDigit*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresDigit
  name: PasswordRequiresDigit
  nameWithType: IdentityErrorDescriberZhHans.PasswordRequiresDigit
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresDigit
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresLower
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresLower
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: PasswordRequiresLower()
  nameWithType: IdentityErrorDescriber.PasswordRequiresLower()
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresLower()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresLower
    name: PasswordRequiresLower
    nameWithType: IdentityErrorDescriber.PasswordRequiresLower
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresLower
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresLower
    name: PasswordRequiresLower
    nameWithType: IdentityErrorDescriber.PasswordRequiresLower
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresLower
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresLower*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresLower
  name: PasswordRequiresLower
  nameWithType: IdentityErrorDescriberZhHans.PasswordRequiresLower
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresLower
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUpper
  commentId: M:Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUpper
  parent: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  isExternal: true
  name: PasswordRequiresUpper()
  nameWithType: IdentityErrorDescriber.PasswordRequiresUpper()
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUpper()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUpper
    name: PasswordRequiresUpper
    nameWithType: IdentityErrorDescriber.PasswordRequiresUpper
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUpper
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUpper
    name: PasswordRequiresUpper
    nameWithType: IdentityErrorDescriber.PasswordRequiresUpper
    fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber.PasswordRequiresUpper
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUpper*
  commentId: Overload:Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUpper
  name: PasswordRequiresUpper
  nameWithType: IdentityErrorDescriberZhHans.PasswordRequiresUpper
  fullName: Hybrid.Zero.Identity.IdentityErrorDescriberZhHans.PasswordRequiresUpper
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
