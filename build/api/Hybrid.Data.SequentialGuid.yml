### YamlMime:ManagedReference
items:
- uid: Hybrid.Data.SequentialGuid
  commentId: T:Hybrid.Data.SequentialGuid
  id: SequentialGuid
  parent: Hybrid.Data
  children:
  - Hybrid.Data.SequentialGuid.Create(Hybrid.Data.SequentialGuidType)
  - Hybrid.Data.SequentialGuid.Create(Hybrid.Domain.EntityFramework.DatabaseType)
  langs:
  - csharp
  - vb
  name: SequentialGuid
  nameWithType: SequentialGuid
  fullName: Hybrid.Data.SequentialGuid
  type: Class
  source:
    remote:
      path: src/Hybrid/Data/SequentialGuid.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: SequentialGuid
    path: ../src/Hybrid/Data/SequentialGuid.cs
    startLine: 10
  assemblies:
  - Hybrid
  namespace: Hybrid.Data
  summary: "\n有序GUID生成器\n源自：https://github.com/jhtodd/SequentialGuid/blob/master/SequentialGuid/Classes/SequentialGuid.cs\n"
  example: []
  syntax:
    content: public static class SequentialGuid
    content.vb: Public Module SequentialGuid
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Data.SequentialGuid.Create(Hybrid.Data.SequentialGuidType)
  commentId: M:Hybrid.Data.SequentialGuid.Create(Hybrid.Data.SequentialGuidType)
  id: Create(Hybrid.Data.SequentialGuidType)
  parent: Hybrid.Data.SequentialGuid
  langs:
  - csharp
  - vb
  name: Create(SequentialGuidType)
  nameWithType: SequentialGuid.Create(SequentialGuidType)
  fullName: Hybrid.Data.SequentialGuid.Create(Hybrid.Data.SequentialGuidType)
  type: Method
  source:
    remote:
      path: src/Hybrid/Data/SequentialGuid.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Create
    path: ../src/Hybrid/Data/SequentialGuid.cs
    startLine: 20
  assemblies:
  - Hybrid
  namespace: Hybrid.Data
  summary: "\n生成指定类型的GUID\n"
  example: []
  syntax:
    content: public static Guid Create(SequentialGuidType guidType)
    parameters:
    - id: guidType
      type: Hybrid.Data.SequentialGuidType
    return:
      type: System.Guid
    content.vb: Public Shared Function Create(guidType As SequentialGuidType) As Guid
  overload: Hybrid.Data.SequentialGuid.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Data.SequentialGuid.Create(Hybrid.Domain.EntityFramework.DatabaseType)
  commentId: M:Hybrid.Data.SequentialGuid.Create(Hybrid.Domain.EntityFramework.DatabaseType)
  id: Create(Hybrid.Domain.EntityFramework.DatabaseType)
  parent: Hybrid.Data.SequentialGuid
  langs:
  - csharp
  - vb
  name: Create(DatabaseType)
  nameWithType: SequentialGuid.Create(DatabaseType)
  fullName: Hybrid.Data.SequentialGuid.Create(Hybrid.Domain.EntityFramework.DatabaseType)
  type: Method
  source:
    remote:
      path: src/Hybrid/Data/SequentialGuid.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Create
    path: ../src/Hybrid/Data/SequentialGuid.cs
    startLine: 63
  assemblies:
  - Hybrid
  namespace: Hybrid.Data
  summary: "\n生成指定数据库类型的有序GUID\n"
  example: []
  syntax:
    content: public static Guid Create(DatabaseType databaseType)
    parameters:
    - id: databaseType
      type: Hybrid.Domain.EntityFramework.DatabaseType
    return:
      type: System.Guid
    content.vb: Public Shared Function Create(databaseType As DatabaseType) As Guid
  overload: Hybrid.Data.SequentialGuid.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Hybrid.Data
  commentId: N:Hybrid.Data
  name: Hybrid.Data
  nameWithType: Hybrid.Data
  fullName: Hybrid.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Data.SequentialGuid.Create*
  commentId: Overload:Hybrid.Data.SequentialGuid.Create
  name: Create
  nameWithType: SequentialGuid.Create
  fullName: Hybrid.Data.SequentialGuid.Create
- uid: Hybrid.Data.SequentialGuidType
  commentId: T:Hybrid.Data.SequentialGuidType
  parent: Hybrid.Data
  name: SequentialGuidType
  nameWithType: SequentialGuidType
  fullName: Hybrid.Data.SequentialGuidType
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Hybrid.Domain.EntityFramework.DatabaseType
  commentId: T:Hybrid.Domain.EntityFramework.DatabaseType
  parent: Hybrid.Domain.EntityFramework
  name: DatabaseType
  nameWithType: DatabaseType
  fullName: Hybrid.Domain.EntityFramework.DatabaseType
- uid: Hybrid.Domain.EntityFramework
  commentId: N:Hybrid.Domain.EntityFramework
  name: Hybrid.Domain.EntityFramework
  nameWithType: Hybrid.Domain.EntityFramework
  fullName: Hybrid.Domain.EntityFramework
