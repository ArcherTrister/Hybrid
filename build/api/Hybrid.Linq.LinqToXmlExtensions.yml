### YamlMime:ManagedReference
items:
- uid: Hybrid.Linq.LinqToXmlExtensions
  commentId: T:Hybrid.Linq.LinqToXmlExtensions
  id: LinqToXmlExtensions
  parent: Hybrid.Linq
  children:
  - Hybrid.Linq.LinqToXmlExtensions.ToXElement(System.Xml.XmlNode)
  - Hybrid.Linq.LinqToXmlExtensions.ToXmlNode(System.Xml.Linq.XElement)
  langs:
  - csharp
  - vb
  name: LinqToXmlExtensions
  nameWithType: LinqToXmlExtensions
  fullName: Hybrid.Linq.LinqToXmlExtensions
  type: Class
  source:
    remote:
      path: src/Hybrid/Linq/LinqToXmlExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: LinqToXmlExtensions
    path: ../src/Hybrid/Linq/LinqToXmlExtensions.cs
    startLine: 17
  assemblies:
  - Hybrid
  namespace: Hybrid.Linq
  summary: "\nXml 扩展操作类\n"
  example: []
  syntax:
    content: public static class LinqToXmlExtensions
    content.vb: Public Module LinqToXmlExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Linq.LinqToXmlExtensions.ToXElement(System.Xml.XmlNode)
  commentId: M:Hybrid.Linq.LinqToXmlExtensions.ToXElement(System.Xml.XmlNode)
  id: ToXElement(System.Xml.XmlNode)
  isExtensionMethod: true
  parent: Hybrid.Linq.LinqToXmlExtensions
  langs:
  - csharp
  - vb
  name: ToXElement(XmlNode)
  nameWithType: LinqToXmlExtensions.ToXElement(XmlNode)
  fullName: Hybrid.Linq.LinqToXmlExtensions.ToXElement(System.Xml.XmlNode)
  type: Method
  source:
    remote:
      path: src/Hybrid/Linq/LinqToXmlExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToXElement
    path: ../src/Hybrid/Linq/LinqToXmlExtensions.cs
    startLine: 23
  assemblies:
  - Hybrid
  namespace: Hybrid.Linq
  summary: "\n将XmlNode转换为XElement\n"
  example: []
  syntax:
    content: public static XElement ToXElement(this XmlNode node)
    parameters:
    - id: node
      type: System.Xml.XmlNode
    return:
      type: System.Xml.Linq.XElement
      description: 'XElment对象 '
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToXElement(node As XmlNode) As XElement
  overload: Hybrid.Linq.LinqToXmlExtensions.ToXElement*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Linq.LinqToXmlExtensions.ToXmlNode(System.Xml.Linq.XElement)
  commentId: M:Hybrid.Linq.LinqToXmlExtensions.ToXmlNode(System.Xml.Linq.XElement)
  id: ToXmlNode(System.Xml.Linq.XElement)
  isExtensionMethod: true
  parent: Hybrid.Linq.LinqToXmlExtensions
  langs:
  - csharp
  - vb
  name: ToXmlNode(XElement)
  nameWithType: LinqToXmlExtensions.ToXmlNode(XElement)
  fullName: Hybrid.Linq.LinqToXmlExtensions.ToXmlNode(System.Xml.Linq.XElement)
  type: Method
  source:
    remote:
      path: src/Hybrid/Linq/LinqToXmlExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToXmlNode
    path: ../src/Hybrid/Linq/LinqToXmlExtensions.cs
    startLine: 37
  assemblies:
  - Hybrid
  namespace: Hybrid.Linq
  summary: "\n将XElement转换为XmlNode\n"
  example: []
  syntax:
    content: public static XmlNode ToXmlNode(this XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    return:
      type: System.Xml.XmlNode
      description: '转换后的XmlNode '
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToXmlNode(element As XElement) As XmlNode
  overload: Hybrid.Linq.LinqToXmlExtensions.ToXmlNode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Hybrid.Linq
  commentId: N:Hybrid.Linq
  name: Hybrid.Linq
  nameWithType: Hybrid.Linq
  fullName: Hybrid.Linq
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Linq.LinqToXmlExtensions.ToXElement*
  commentId: Overload:Hybrid.Linq.LinqToXmlExtensions.ToXElement
  name: ToXElement
  nameWithType: LinqToXmlExtensions.ToXElement
  fullName: Hybrid.Linq.LinqToXmlExtensions.ToXElement
- uid: System.Xml.XmlNode
  commentId: T:System.Xml.XmlNode
  parent: System.Xml
  isExternal: true
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: true
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
- uid: Hybrid.Linq.LinqToXmlExtensions.ToXmlNode*
  commentId: Overload:Hybrid.Linq.LinqToXmlExtensions.ToXmlNode
  name: ToXmlNode
  nameWithType: LinqToXmlExtensions.ToXmlNode
  fullName: Hybrid.Linq.LinqToXmlExtensions.ToXmlNode
