### YamlMime:ManagedReference
items:
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
  commentId: T:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
  id: IdentityServer4ModuleBase`6
  parent: Hybrid.Zero.IdentityServer4
  children:
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,Hybrid.Core.Options.IdsOptions,Microsoft.Extensions.Configuration.IConfiguration)
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddIdentityServerBuild(Microsoft.Extensions.DependencyInjection.IIdentityServerBuilder,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.IdentityOptionsAction
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.IdentityServerOptionsAction
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Level
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.UseModule(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  langs:
  - csharp
  - vb
  name: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>
  type: Class
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: IdentityServer4ModuleBase
    path: ../src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
    startLine: 37
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\n身份论证模块基类\n"
  example: []
  syntax:
    content: >-
      [DependsOnModules(new Type[]{typeof(EventBusModule), typeof(AspNetCoreModule)})]

      public abstract class IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey> : AspHybridModule where TUserStore : class, IUserStore<TUser> where TRoleStore : class, IRoleStore<TRole> where TUser : UserBase<TUserKey> where TRole : RoleBase<TRoleKey> where TUserKey : IEquatable<TUserKey> where TRoleKey : IEquatable<TRoleKey>
    typeParameters:
    - id: TUserStore
    - id: TRoleStore
    - id: TUser
    - id: TRole
    - id: TUserKey
    - id: TRoleKey
    content.vb: >-
      <DependsOnModules(New Type() {GetType(EventBusModule), GetType(AspNetCoreModule)})>

      Public MustInherit Class IdentityServer4ModuleBase(Of TUserStore As {Class, IUserStore(Of TUser)}, TRoleStore As {Class, IRoleStore(Of TRole)}, TUser As UserBase(Of TUserKey), TRole As RoleBase(Of TRoleKey), TUserKey As IEquatable(Of TUserKey), TRoleKey As IEquatable(Of TRoleKey))
          Inherits AspHybridModule
  inheritance:
  - System.Object
  - Hybrid.Core.Modules.HybridModule
  - Hybrid.AspNetCore.AspHybridModule
  inheritedMembers:
  - Hybrid.Core.Modules.HybridModule.Order
  - Hybrid.Core.Modules.HybridModule.IsEnabled
  - Hybrid.Core.Modules.HybridModule.UseModule(System.IServiceProvider)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}[])
  - System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}},System.Boolean},System.String)
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}},System.Boolean},System.String)
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}},System.Action{System.Exception},System.Action{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}})
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}},System.Action{System.Exception})
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}},{TResult}},System.Action{System.Exception},System.Action{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}})
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}},{TResult}},System.Action{System.Exception})
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}},System.Action{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}})
  - System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  - System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}},{TResult}})
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)
  name.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Level
  commentId: P:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Level
  id: Level
  parent: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.Level
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.Level
  type: Property
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Level
    path: ../src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
    startLine: 49
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\n获取 模块级别\n"
  example: []
  syntax:
    content: public override ModuleLevel Level { get; }
    parameters: []
    return:
      type: Hybrid.Core.Modules.ModuleLevel
    content.vb: Public Overrides ReadOnly Property Level As ModuleLevel
  overridden: Hybrid.Core.Modules.HybridModule.Level
  overload: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Level*
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).Level
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).Level
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
  langs:
  - csharp
  - vb
  name: AddServices(IServiceCollection)
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.AddServices(IServiceCollection)
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: AddServices
    path: ../src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
    startLine: 56
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\n将模块服务添加到依赖注入服务容器中\n"
  example: []
  syntax:
    content: public override IServiceCollection AddServices(IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: 依赖注入服务容器
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: Public Overrides Function AddServices(services As IServiceCollection) As IServiceCollection
  overridden: Hybrid.Core.Modules.HybridModule.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  overload: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddServices*
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).AddServices(IServiceCollection)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.IdentityOptionsAction
  commentId: M:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.IdentityOptionsAction
  id: IdentityOptionsAction
  parent: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
  langs:
  - csharp
  - vb
  name: IdentityOptionsAction()
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.IdentityOptionsAction()
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.IdentityOptionsAction()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: IdentityOptionsAction
    path: ../src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
    startLine: 98
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\n重写以实现<xref href=\"Microsoft.AspNetCore.Identity.IdentityOptions\" data-throw-if-not-resolved=\"false\"></xref>的配置\n"
  example: []
  syntax:
    content: protected virtual Action<IdentityOptions> IdentityOptionsAction()
    return:
      type: System.Action{Microsoft.AspNetCore.Identity.IdentityOptions}
      description: ''
    content.vb: Protected Overridable Function IdentityOptionsAction As Action(Of IdentityOptions)
  overload: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.IdentityOptionsAction*
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).IdentityOptionsAction()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).IdentityOptionsAction()
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.IdentityServerOptionsAction
  commentId: M:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.IdentityServerOptionsAction
  id: IdentityServerOptionsAction
  parent: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
  langs:
  - csharp
  - vb
  name: IdentityServerOptionsAction()
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.IdentityServerOptionsAction()
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.IdentityServerOptionsAction()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: IdentityServerOptionsAction
    path: ../src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
    startLine: 127
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\n重写以实现<xref href=\"IdentityServer4.Configuration.IdentityServerOptions\" data-throw-if-not-resolved=\"false\"></xref>的配置\n"
  example:
  - "\nreturn options =>\n{\noptions.Events.RaiseErrorEvents = true;\noptions.Events.RaiseInformationEvents = true;\noptions.Events.RaiseFailureEvents = true;\noptions.Events.RaiseSuccessEvents = true;\n};\n"
  syntax:
    content: protected Action<IdentityServerOptions> IdentityServerOptionsAction()
    return:
      type: System.Action{IdentityServer4.Configuration.IdentityServerOptions}
      description: ''
    content.vb: Protected Function IdentityServerOptionsAction As Action(Of IdentityServerOptions)
  overload: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.IdentityServerOptionsAction*
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).IdentityServerOptionsAction()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).IdentityServerOptionsAction()
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,Hybrid.Core.Options.IdsOptions,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,Hybrid.Core.Options.IdsOptions,Microsoft.Extensions.Configuration.IConfiguration)
  id: AddAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,Hybrid.Core.Options.IdsOptions,Microsoft.Extensions.Configuration.IConfiguration)
  parent: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
  langs:
  - csharp
  - vb
  name: AddAuthentication(IServiceCollection, IdsOptions, IConfiguration)
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.AddAuthentication(IServiceCollection, IdsOptions, IConfiguration)
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.AddAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection, Hybrid.Core.Options.IdsOptions, Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: AddAuthentication
    path: ../src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
    startLine: 179
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\n添加Authentication服务\n"
  example: []
  syntax:
    content: protected virtual void AddAuthentication(IServiceCollection services, IdsOptions idsOptions, IConfiguration configuration)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: 服务集合
    - id: idsOptions
      type: Hybrid.Core.Options.IdsOptions
    - id: configuration
      type: Microsoft.Extensions.Configuration.IConfiguration
    content.vb: Protected Overridable Sub AddAuthentication(services As IServiceCollection, idsOptions As IdsOptions, configuration As IConfiguration)
  overload: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddAuthentication*
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).AddAuthentication(IServiceCollection, IdsOptions, IConfiguration)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).AddAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection, Hybrid.Core.Options.IdsOptions, Microsoft.Extensions.Configuration.IConfiguration)
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddIdentityServerBuild(Microsoft.Extensions.DependencyInjection.IIdentityServerBuilder,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddIdentityServerBuild(Microsoft.Extensions.DependencyInjection.IIdentityServerBuilder,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddIdentityServerBuild(Microsoft.Extensions.DependencyInjection.IIdentityServerBuilder,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
  langs:
  - csharp
  - vb
  name: AddIdentityServerBuild(IIdentityServerBuilder, IServiceCollection)
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.AddIdentityServerBuild(IIdentityServerBuilder, IServiceCollection)
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.AddIdentityServerBuild(Microsoft.Extensions.DependencyInjection.IIdentityServerBuilder, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: AddIdentityServerBuild
    path: ../src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
    startLine: 191
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\n重写以实现 AddIdentityServer 之后的构建逻辑\n"
  example:
  - "\n.AddInMemoryIdentityResources(Config.GetIdentityResources())\n.AddInMemoryApiResources(Config.GetApis())\n.AddInMemoryClients(Config.GetClients());\n"
  syntax:
    content: protected virtual IIdentityServerBuilder AddIdentityServerBuild(IIdentityServerBuilder builder, IServiceCollection services)
    parameters:
    - id: builder
      type: Microsoft.Extensions.DependencyInjection.IIdentityServerBuilder
      description: ''
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    return:
      type: Microsoft.Extensions.DependencyInjection.IIdentityServerBuilder
    content.vb: Protected Overridable Function AddIdentityServerBuild(builder As IIdentityServerBuilder, services As IServiceCollection) As IIdentityServerBuilder
  overload: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddIdentityServerBuild*
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).AddIdentityServerBuild(IIdentityServerBuilder, IServiceCollection)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).AddIdentityServerBuild(Microsoft.Extensions.DependencyInjection.IIdentityServerBuilder, Microsoft.Extensions.DependencyInjection.IServiceCollection)
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.UseModule(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.UseModule(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  id: UseModule(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  parent: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
  langs:
  - csharp
  - vb
  name: UseModule(IApplicationBuilder)
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.UseModule(IApplicationBuilder)
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.UseModule(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: UseModule
    path: ../src/Hybrid.Zero.IdentityServer4/IdentityServer4ModuleBase.cs
    startLine: 200
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4
  summary: "\n应用模块服务\n"
  example: []
  syntax:
    content: public override void UseModule(IApplicationBuilder app)
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: 应用程序构建器
    content.vb: Public Overrides Sub UseModule(app As IApplicationBuilder)
  overridden: Hybrid.AspNetCore.AspHybridModule.UseModule(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  overload: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.UseModule*
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).UseModule(IApplicationBuilder)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).UseModule(Microsoft.AspNetCore.Builder.IApplicationBuilder)
references:
- uid: Hybrid.Zero.IdentityServer4
  commentId: N:Hybrid.Zero.IdentityServer4
  name: Hybrid.Zero.IdentityServer4
  nameWithType: Hybrid.Zero.IdentityServer4
  fullName: Hybrid.Zero.IdentityServer4
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hybrid.Core.Modules.HybridModule
  commentId: T:Hybrid.Core.Modules.HybridModule
  parent: Hybrid.Core.Modules
  name: HybridModule
  nameWithType: HybridModule
  fullName: Hybrid.Core.Modules.HybridModule
- uid: Hybrid.AspNetCore.AspHybridModule
  commentId: T:Hybrid.AspNetCore.AspHybridModule
  parent: Hybrid.AspNetCore
  name: AspHybridModule
  nameWithType: AspHybridModule
  fullName: Hybrid.AspNetCore.AspHybridModule
- uid: Hybrid.Core.Modules.HybridModule.Order
  commentId: P:Hybrid.Core.Modules.HybridModule.Order
  parent: Hybrid.Core.Modules.HybridModule
  name: Order
  nameWithType: HybridModule.Order
  fullName: Hybrid.Core.Modules.HybridModule.Order
- uid: Hybrid.Core.Modules.HybridModule.IsEnabled
  commentId: P:Hybrid.Core.Modules.HybridModule.IsEnabled
  parent: Hybrid.Core.Modules.HybridModule
  name: IsEnabled
  nameWithType: HybridModule.IsEnabled
  fullName: Hybrid.Core.Modules.HybridModule.IsEnabled
- uid: Hybrid.Core.Modules.HybridModule.UseModule(System.IServiceProvider)
  commentId: M:Hybrid.Core.Modules.HybridModule.UseModule(System.IServiceProvider)
  parent: Hybrid.Core.Modules.HybridModule
  isExternal: true
  name: UseModule(IServiceProvider)
  nameWithType: HybridModule.UseModule(IServiceProvider)
  fullName: Hybrid.Core.Modules.HybridModule.UseModule(System.IServiceProvider)
  spec.csharp:
  - uid: Hybrid.Core.Modules.HybridModule.UseModule(System.IServiceProvider)
    name: UseModule
    nameWithType: HybridModule.UseModule
    fullName: Hybrid.Core.Modules.HybridModule.UseModule
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Core.Modules.HybridModule.UseModule(System.IServiceProvider)
    name: UseModule
    nameWithType: HybridModule.UseModule
    fullName: Hybrid.Core.Modules.HybridModule.UseModule
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  name: CastTo(Type)
  nameWithType: ObjectExtensions.CastTo(Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  name: CastTo<T>(T)
  nameWithType: ObjectExtensions.CastTo<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(T)
  name.vb: CastTo(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>[])
  nameWithType: ObjectExtensions.IsIn<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>[])
  nameWithType.vb: ObjectExtensions.IsIn(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)())
  name.vb: IsIn(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    nameWithType: ObjectExtensions.IsIn<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    nameWithType: ObjectExtensions.IsIn(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: ObjectExtensions.ToDynamic()
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>()
  nameWithType: ObjectExtensions.DeepClone<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>()
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))()
  name.vb: DeepClone(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    nameWithType: ObjectExtensions.DeepClone<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    nameWithType: ObjectExtensions.DeepClone(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}},System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(Func<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(Func<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(System.Func<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(Func(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(System.Func(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), System.Boolean), System.String)
  name.vb: Required(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(Func(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    nameWithType: ParameterCheckExtensions.Required<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    nameWithType: ParameterCheckExtensions.Required(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}},System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TException>(Func<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TException>(Func<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TException>(System.Func<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TException)(Func(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TException)(System.Func(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), System.Boolean), System.String)
  name.vb: Required(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TException)(Func(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TException>
    nameWithType: ParameterCheckExtensions.Required<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TException)
    nameWithType: ParameterCheckExtensions.Required(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  name: CheckNotNull<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(System.String)
  name.vb: CheckNotNull(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    nameWithType: ParameterCheckExtensions.CheckNotNull<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}},System.Action{System.Exception},System.Action{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(Action<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>, Action<Exception>, Action<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>)
  nameWithType: TryCatchExtensions.TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(Action<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>, Action<Exception>, Action<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(System.Action<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>, System.Action<System.Exception>, System.Action<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(Action(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)), Action(Of Exception), Action(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(System.Action(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)), System.Action(Of System.Exception), System.Action(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)))
  name.vb: TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(Action(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)), Action(Of Exception), Action(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    nameWithType: TryCatchExtensions.TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    nameWithType: TryCatchExtensions.TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  name: TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(Action<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(Action<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(System.Action<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(Action(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(System.Action(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)), System.Action(Of System.Exception))
  name.vb: TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(Action(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    nameWithType: TryCatchExtensions.TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    nameWithType: TryCatchExtensions.TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}},{TResult}},System.Action{System.Exception},System.Action{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>(Func<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>, Action<Exception>, Action<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>)
  nameWithType: TryCatchExtensions.TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>(Func<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>, Action<Exception>, Action<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>(System.Func<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>, System.Action<System.Exception>, System.Action<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)(Func(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult), Action(Of Exception), Action(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)(System.Func(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult), System.Action(Of System.Exception), System.Action(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)))
  name.vb: TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)(Func(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult), Action(Of Exception), Action(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>
    nameWithType: TryCatchExtensions.TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}},{TResult}},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  name: TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>(Func<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>(Func<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>(System.Func<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)(Func(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)(System.Func(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)(Func(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>
    nameWithType: TryCatchExtensions.TryCatch<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}},System.Action{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  name: TryFinally<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(Action<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>, Action<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>)
  nameWithType: TryCatchExtensions.TryFinally<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(Action<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>, Action<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(System.Action<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>, System.Action<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(Action(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)), Action(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(System.Action(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)), System.Action(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)))
  name.vb: TryFinally(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(Action(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)), Action(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    nameWithType: TryCatchExtensions.TryFinally<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    nameWithType: TryCatchExtensions.TryFinally(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  parent: Hybrid.Json.JsonExtensions
  definition: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  name: ToJsonString(Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  name: MapTo<TTarget>()
  nameWithType: MapperExtensions.MapTo<TTarget>()
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>()
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)()
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)()
  name.vb: MapTo(Of TTarget)()
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TTarget>(TTarget)
  nameWithType: MapperExtensions.MapTo<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TTarget>(TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TTarget>(TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TTarget)(TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TTarget)(TTarget)
  name.vb: MapTo(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TTarget)(TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TTarget>
    nameWithType: MapperExtensions.MapTo<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TTarget)
    nameWithType: MapperExtensions.MapTo(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  name: Locking(Action)
  nameWithType: LockExtensions.Locking(Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  name: Locking<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(Action<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>)
  nameWithType: LockExtensions.Locking<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(Action<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>(System.Action<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>)
  nameWithType.vb: LockExtensions.Locking(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(Action(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(System.Action(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)))
  name.vb: Locking(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))(Action(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey)))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    nameWithType: LockExtensions.Locking<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    nameWithType: LockExtensions.Locking(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  name: Locking<TResult>(Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase{{TUserStore},{TRoleStore},{TUser},{TRole},{TUserKey},{TRoleKey}},{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  name: Locking<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>(Func<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>)
  nameWithType: LockExtensions.Locking<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>(Func<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>(System.Func<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)(Func(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)(System.Func(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult))
  name.vb: Locking(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)(Func(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>
    nameWithType: LockExtensions.Locking<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)
    nameWithType: LockExtensions.Locking(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6
    name: IdentityServer4ModuleBase
    nameWithType: IdentityServer4ModuleBase
    fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUserStore
    nameWithType: TUserStore
    fullName: TUserStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleStore
    nameWithType: TRoleStore
    fullName: TRoleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey>()
  nameWithType: EntityExtensions.CheckICreatedTime<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey>()
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey>()
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey)()
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey)()
  name.vb: CheckICreatedTime(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey)()
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckICreationAudited<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckIUpdateAudited<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey), TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Core.Modules
  commentId: N:Hybrid.Core.Modules
  name: Hybrid.Core.Modules
  nameWithType: Hybrid.Core.Modules
  fullName: Hybrid.Core.Modules
- uid: Hybrid.AspNetCore
  commentId: N:Hybrid.AspNetCore
  name: Hybrid.AspNetCore
  nameWithType: Hybrid.AspNetCore
  fullName: Hybrid.AspNetCore
- uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  isExternal: true
  name: CastTo(Object, Type)
  nameWithType: ObjectExtensions.CastTo(Object, Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object, System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions
  commentId: T:Hybrid.Extensions.ObjectExtensions
  parent: Hybrid.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Hybrid.Extensions.ObjectExtensions
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  isExternal: true
  name: CastTo<T>(Object, T)
  nameWithType: ObjectExtensions.CastTo<T>(Object, T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object, T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object, T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object, T)
  name.vb: CastTo(Of T)(Object, T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<T>(T, T[])
  nameWithType: ObjectExtensions.IsIn<T>(T, T[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>(T, T[])
  nameWithType.vb: ObjectExtensions.IsIn(Of T)(T, T())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)(T, T())
  name.vb: IsIn(Of T)(T, T())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn<T>
    nameWithType: ObjectExtensions.IsIn<T>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn(Of T)
    nameWithType: ObjectExtensions.IsIn(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: ObjectExtensions.ToDynamic(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T>
    nameWithType: ParameterCheckExtensions.Required<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T)
    nameWithType: ParameterCheckExtensions.Required(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions
  commentId: T:Hybrid.Extensions.ParameterCheckExtensions
  parent: Hybrid.Extensions
  name: ParameterCheckExtensions
  nameWithType: ParameterCheckExtensions
  fullName: Hybrid.Extensions.ParameterCheckExtensions
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T, TException>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T, TException>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T, TException)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T, TException)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T, TException>
    nameWithType: ParameterCheckExtensions.Required<T, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T, TException)
    nameWithType: ParameterCheckExtensions.Required(Of T, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  isExternal: true
  name: CheckNotNull<T>(T, String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<T>(T, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>(T, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of T)(T, String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull<T>
    nameWithType: ParameterCheckExtensions.CheckNotNull<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions
  commentId: T:Hybrid.Extensions.TryCatchExtensions
  parent: Hybrid.Extensions
  name: TryCatchExtensions
  nameWithType: TryCatchExtensions
  fullName: Hybrid.Extensions.TryCatchExtensions
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  isExternal: true
  name: TryFinally<T>(T, Action<T>, Action<T>)
  nameWithType: TryCatchExtensions.TryFinally<T>(T, Action<T>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>(T, System.Action<T>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of T)(T, Action(Of T), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)(T, System.Action(Of T), System.Action(Of T))
  name.vb: TryFinally(Of T)(T, Action(Of T), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally<T>
    nameWithType: TryCatchExtensions.TryFinally<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally(Of T)
    nameWithType: TryCatchExtensions.TryFinally(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  isExternal: true
  name: ToJsonString(Object, Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Object, Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Object, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions
  commentId: T:Hybrid.Json.JsonExtensions
  parent: Hybrid.Json
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: Hybrid.Json.JsonExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  isExternal: true
  name: MapTo<TTarget>(Object)
  nameWithType: MapperExtensions.MapTo<TTarget>(Object)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>(System.Object)
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)(Object)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)(System.Object)
  name.vb: MapTo(Of TTarget)(Object)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Mapping.MapperExtensions
  commentId: T:Hybrid.Mapping.MapperExtensions
  parent: Hybrid.Mapping
  name: MapperExtensions
  nameWithType: MapperExtensions
  fullName: Hybrid.Mapping.MapperExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType: MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  name.vb: MapTo(Of TSource, TTarget)(TSource, TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo<TSource, TTarget>
    nameWithType: MapperExtensions.MapTo<TSource, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo(Of TSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TSource, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  isExternal: true
  name: Locking(Object, Action)
  nameWithType: LockExtensions.Locking(Object, Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Object, System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions
  commentId: T:Hybrid.Reflection.LockExtensions
  parent: Hybrid.Reflection
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: Hybrid.Reflection.LockExtensions
- uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  isExternal: true
  name: Locking<T>(T, Action<T>)
  nameWithType: LockExtensions.Locking<T>(T, Action<T>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<T>(T, System.Action<T>)
  nameWithType.vb: LockExtensions.Locking(Of T)(T, Action(Of T))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of T)(T, System.Action(Of T))
  name.vb: Locking(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking<T>
    nameWithType: LockExtensions.Locking<T>
    fullName: Hybrid.Reflection.LockExtensions.Locking<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking(Of T)
    nameWithType: LockExtensions.Locking(Of T)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  isExternal: true
  name: Locking<TResult>(Object, Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Object, Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Object, System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Object, Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Object, System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Object, Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  isExternal: true
  name: Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  nameWithType: LockExtensions.Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>(TSource, System.Func<TSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)(TSource, System.Func(Of TSource, TResult))
  name.vb: Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking<TSource, TResult>
    nameWithType: LockExtensions.Locking<TSource, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking(Of TSource, TResult)
    nameWithType: LockExtensions.Locking(Of TSource, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  name.vb: CheckICreatedTime(Of TEntity, TKey)(TEntity)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime<TEntity, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime(Of TEntity, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions
  commentId: T:Hybrid.Domain.Entities.EntityExtensions
  parent: Hybrid.Domain.Entities
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: Hybrid.Domain.Entities.EntityExtensions
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions
  commentId: N:Hybrid.Extensions
  name: Hybrid.Extensions
  nameWithType: Hybrid.Extensions
  fullName: Hybrid.Extensions
- uid: Hybrid.Json
  commentId: N:Hybrid.Json
  name: Hybrid.Json
  nameWithType: Hybrid.Json
  fullName: Hybrid.Json
- uid: Hybrid.Mapping
  commentId: N:Hybrid.Mapping
  name: Hybrid.Mapping
  nameWithType: Hybrid.Mapping
  fullName: Hybrid.Mapping
- uid: Hybrid.Reflection
  commentId: N:Hybrid.Reflection
  name: Hybrid.Reflection
  nameWithType: Hybrid.Reflection
  fullName: Hybrid.Reflection
- uid: Hybrid.Domain.Entities
  commentId: N:Hybrid.Domain.Entities
  name: Hybrid.Domain.Entities
  nameWithType: Hybrid.Domain.Entities
  fullName: Hybrid.Domain.Entities
- uid: Hybrid.Core.Modules.HybridModule.Level
  commentId: P:Hybrid.Core.Modules.HybridModule.Level
  parent: Hybrid.Core.Modules.HybridModule
  name: Level
  nameWithType: HybridModule.Level
  fullName: Hybrid.Core.Modules.HybridModule.Level
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Level*
  commentId: Overload:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.Level
  name: Level
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.Level
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.Level
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).Level
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).Level
- uid: Hybrid.Core.Modules.ModuleLevel
  commentId: T:Hybrid.Core.Modules.ModuleLevel
  parent: Hybrid.Core.Modules
  name: ModuleLevel
  nameWithType: ModuleLevel
  fullName: Hybrid.Core.Modules.ModuleLevel
- uid: Hybrid.Core.Modules.HybridModule.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Hybrid.Core.Modules.HybridModule.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Hybrid.Core.Modules.HybridModule
  isExternal: true
  name: AddServices(IServiceCollection)
  nameWithType: HybridModule.AddServices(IServiceCollection)
  fullName: Hybrid.Core.Modules.HybridModule.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  spec.csharp:
  - uid: Hybrid.Core.Modules.HybridModule.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: AddServices
    nameWithType: HybridModule.AddServices
    fullName: Hybrid.Core.Modules.HybridModule.AddServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Core.Modules.HybridModule.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: AddServices
    nameWithType: HybridModule.AddServices
    fullName: Hybrid.Core.Modules.HybridModule.AddServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddServices*
  commentId: Overload:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddServices
  name: AddServices
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.AddServices
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.AddServices
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).AddServices
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).AddServices
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.AspNetCore.Identity.IdentityOptions
  commentId: T:Microsoft.AspNetCore.Identity.IdentityOptions
  isExternal: true
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.IdentityOptionsAction*
  commentId: Overload:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.IdentityOptionsAction
  name: IdentityOptionsAction
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.IdentityOptionsAction
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.IdentityOptionsAction
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).IdentityOptionsAction
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).IdentityOptionsAction
- uid: System.Action{Microsoft.AspNetCore.Identity.IdentityOptions}
  commentId: T:System.Action{Microsoft.AspNetCore.Identity.IdentityOptions}
  parent: System
  definition: System.Action`1
  name: Action<IdentityOptions>
  nameWithType: Action<IdentityOptions>
  fullName: System.Action<Microsoft.AspNetCore.Identity.IdentityOptions>
  nameWithType.vb: Action(Of IdentityOptions)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Identity.IdentityOptions)
  name.vb: Action(Of IdentityOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Identity.IdentityOptions
    name: IdentityOptions
    nameWithType: IdentityOptions
    fullName: Microsoft.AspNetCore.Identity.IdentityOptions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Identity.IdentityOptions
    name: IdentityOptions
    nameWithType: IdentityOptions
    fullName: Microsoft.AspNetCore.Identity.IdentityOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: IdentityServer4.Configuration.IdentityServerOptions
  commentId: T:IdentityServer4.Configuration.IdentityServerOptions
  parent: IdentityServer4.Configuration
  isExternal: true
  name: IdentityServerOptions
  nameWithType: IdentityServerOptions
  fullName: IdentityServer4.Configuration.IdentityServerOptions
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.IdentityServerOptionsAction*
  commentId: Overload:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.IdentityServerOptionsAction
  name: IdentityServerOptionsAction
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.IdentityServerOptionsAction
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.IdentityServerOptionsAction
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).IdentityServerOptionsAction
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).IdentityServerOptionsAction
- uid: System.Action{IdentityServer4.Configuration.IdentityServerOptions}
  commentId: T:System.Action{IdentityServer4.Configuration.IdentityServerOptions}
  parent: System
  definition: System.Action`1
  name: Action<IdentityServerOptions>
  nameWithType: Action<IdentityServerOptions>
  fullName: System.Action<IdentityServer4.Configuration.IdentityServerOptions>
  nameWithType.vb: Action(Of IdentityServerOptions)
  fullName.vb: System.Action(Of IdentityServer4.Configuration.IdentityServerOptions)
  name.vb: Action(Of IdentityServerOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IdentityServer4.Configuration.IdentityServerOptions
    name: IdentityServerOptions
    nameWithType: IdentityServerOptions
    fullName: IdentityServer4.Configuration.IdentityServerOptions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IdentityServer4.Configuration.IdentityServerOptions
    name: IdentityServerOptions
    nameWithType: IdentityServerOptions
    fullName: IdentityServer4.Configuration.IdentityServerOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IdentityServer4.Configuration
  commentId: N:IdentityServer4.Configuration
  isExternal: true
  name: IdentityServer4.Configuration
  nameWithType: IdentityServer4.Configuration
  fullName: IdentityServer4.Configuration
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddAuthentication*
  commentId: Overload:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddAuthentication
  name: AddAuthentication
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.AddAuthentication
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.AddAuthentication
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).AddAuthentication
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).AddAuthentication
- uid: Hybrid.Core.Options.IdsOptions
  commentId: T:Hybrid.Core.Options.IdsOptions
  parent: Hybrid.Core.Options
  name: IdsOptions
  nameWithType: IdsOptions
  fullName: Hybrid.Core.Options.IdsOptions
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Hybrid.Core.Options
  commentId: N:Hybrid.Core.Options
  name: Hybrid.Core.Options
  nameWithType: Hybrid.Core.Options
  fullName: Hybrid.Core.Options
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddIdentityServerBuild*
  commentId: Overload:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.AddIdentityServerBuild
  name: AddIdentityServerBuild
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.AddIdentityServerBuild
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.AddIdentityServerBuild
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).AddIdentityServerBuild
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).AddIdentityServerBuild
- uid: Microsoft.Extensions.DependencyInjection.IIdentityServerBuilder
  commentId: T:Microsoft.Extensions.DependencyInjection.IIdentityServerBuilder
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IIdentityServerBuilder
  nameWithType: IIdentityServerBuilder
  fullName: Microsoft.Extensions.DependencyInjection.IIdentityServerBuilder
- uid: Hybrid.AspNetCore.AspHybridModule.UseModule(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:Hybrid.AspNetCore.AspHybridModule.UseModule(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  parent: Hybrid.AspNetCore.AspHybridModule
  isExternal: true
  name: UseModule(IApplicationBuilder)
  nameWithType: AspHybridModule.UseModule(IApplicationBuilder)
  fullName: Hybrid.AspNetCore.AspHybridModule.UseModule(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  spec.csharp:
  - uid: Hybrid.AspNetCore.AspHybridModule.UseModule(Microsoft.AspNetCore.Builder.IApplicationBuilder)
    name: UseModule
    nameWithType: AspHybridModule.UseModule
    fullName: Hybrid.AspNetCore.AspHybridModule.UseModule
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.AspNetCore.AspHybridModule.UseModule(Microsoft.AspNetCore.Builder.IApplicationBuilder)
    name: UseModule
    nameWithType: AspHybridModule.UseModule
    fullName: Hybrid.AspNetCore.AspHybridModule.UseModule
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
    name: IApplicationBuilder
    nameWithType: IApplicationBuilder
    fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.UseModule*
  commentId: Overload:Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase`6.UseModule
  name: UseModule
  nameWithType: IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.UseModule
  fullName: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase<TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey>.UseModule
  nameWithType.vb: IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).UseModule
  fullName.vb: Hybrid.Zero.IdentityServer4.IdentityServer4ModuleBase(Of TUserStore, TRoleStore, TUser, TRole, TUserKey, TRoleKey).UseModule
- uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  parent: Microsoft.AspNetCore.Builder
  isExternal: true
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
