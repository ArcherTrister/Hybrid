### YamlMime:ManagedReference
items:
- uid: Hybrid.Domain.Entities.InputDtoValidateExtensions
  commentId: T:Hybrid.Domain.Entities.InputDtoValidateExtensions
  id: InputDtoValidateExtensions
  parent: Hybrid.Domain.Entities
  children:
  - Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate``1(Hybrid.Domain.Entities.IInputDto{``0})
  - Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate``1(System.Collections.Generic.IEnumerable{Hybrid.Domain.Entities.IInputDto{``0}})
  langs:
  - csharp
  - vb
  name: InputDtoValidateExtensions
  nameWithType: InputDtoValidateExtensions
  fullName: Hybrid.Domain.Entities.InputDtoValidateExtensions
  type: Class
  source:
    remote:
      path: src/Hybrid/Domain/Entities/InputDtoValidateExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: InputDtoValidateExtensions
    path: ../src/Hybrid/Domain/Entities/InputDtoValidateExtensions.cs
    startLine: 24
  assemblies:
  - Hybrid
  namespace: Hybrid.Domain.Entities
  summary: "\n<xref href=\"Hybrid.Domain.Entities.IInputDto%601\" data-throw-if-not-resolved=\"false\"></xref>验证扩展\n"
  example: []
  syntax:
    content: public static class InputDtoValidateExtensions
    content.vb: Public Module InputDtoValidateExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate``1(System.Collections.Generic.IEnumerable{Hybrid.Domain.Entities.IInputDto{``0}})
  commentId: M:Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate``1(System.Collections.Generic.IEnumerable{Hybrid.Domain.Entities.IInputDto{``0}})
  id: Validate``1(System.Collections.Generic.IEnumerable{Hybrid.Domain.Entities.IInputDto{``0}})
  isExtensionMethod: true
  parent: Hybrid.Domain.Entities.InputDtoValidateExtensions
  langs:
  - csharp
  - vb
  name: Validate<TKey>(IEnumerable<IInputDto<TKey>>)
  nameWithType: InputDtoValidateExtensions.Validate<TKey>(IEnumerable<IInputDto<TKey>>)
  fullName: Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate<TKey>(System.Collections.Generic.IEnumerable<Hybrid.Domain.Entities.IInputDto<TKey>>)
  type: Method
  source:
    remote:
      path: src/Hybrid/Domain/Entities/InputDtoValidateExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Validate
    path: ../src/Hybrid/Domain/Entities/InputDtoValidateExtensions.cs
    startLine: 32
  assemblies:
  - Hybrid
  namespace: Hybrid.Domain.Entities
  summary: "\nInputDto属性验证\n"
  example: []
  syntax:
    content: public static void Validate<TKey>(this IEnumerable<IInputDto<TKey>> dtos)
    parameters:
    - id: dtos
      type: System.Collections.Generic.IEnumerable{Hybrid.Domain.Entities.IInputDto{{TKey}}}
    typeParameters:
    - id: TKey
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Validate(Of TKey)(dtos As IEnumerable(Of IInputDto(Of TKey)))
  overload: Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate*
  nameWithType.vb: InputDtoValidateExtensions.Validate(Of TKey)(IEnumerable(Of IInputDto(Of TKey)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate(Of TKey)(System.Collections.Generic.IEnumerable(Of Hybrid.Domain.Entities.IInputDto(Of TKey)))
  name.vb: Validate(Of TKey)(IEnumerable(Of IInputDto(Of TKey)))
- uid: Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate``1(Hybrid.Domain.Entities.IInputDto{``0})
  commentId: M:Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate``1(Hybrid.Domain.Entities.IInputDto{``0})
  id: Validate``1(Hybrid.Domain.Entities.IInputDto{``0})
  isExtensionMethod: true
  parent: Hybrid.Domain.Entities.InputDtoValidateExtensions
  langs:
  - csharp
  - vb
  name: Validate<TKey>(IInputDto<TKey>)
  nameWithType: InputDtoValidateExtensions.Validate<TKey>(IInputDto<TKey>)
  fullName: Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate<TKey>(Hybrid.Domain.Entities.IInputDto<TKey>)
  type: Method
  source:
    remote:
      path: src/Hybrid/Domain/Entities/InputDtoValidateExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Validate
    path: ../src/Hybrid/Domain/Entities/InputDtoValidateExtensions.cs
    startLine: 45
  assemblies:
  - Hybrid
  namespace: Hybrid.Domain.Entities
  summary: "\nInputDto属性验证\n"
  example: []
  syntax:
    content: public static void Validate<TKey>(this IInputDto<TKey> dto)
    parameters:
    - id: dto
      type: Hybrid.Domain.Entities.IInputDto{{TKey}}
    typeParameters:
    - id: TKey
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Validate(Of TKey)(dto As IInputDto(Of TKey))
  overload: Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate*
  nameWithType.vb: InputDtoValidateExtensions.Validate(Of TKey)(IInputDto(Of TKey))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate(Of TKey)(Hybrid.Domain.Entities.IInputDto(Of TKey))
  name.vb: Validate(Of TKey)(IInputDto(Of TKey))
references:
- uid: Hybrid.Domain.Entities.IInputDto`1
  commentId: T:Hybrid.Domain.Entities.IInputDto`1
  name: IInputDto<TKey>
  nameWithType: IInputDto<TKey>
  fullName: Hybrid.Domain.Entities.IInputDto<TKey>
  nameWithType.vb: IInputDto(Of TKey)
  fullName.vb: Hybrid.Domain.Entities.IInputDto(Of TKey)
  name.vb: IInputDto(Of TKey)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.IInputDto`1
    name: IInputDto
    nameWithType: IInputDto
    fullName: Hybrid.Domain.Entities.IInputDto
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Hybrid.Domain.Entities.IInputDto`1
    name: IInputDto
    nameWithType: IInputDto
    fullName: Hybrid.Domain.Entities.IInputDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities
  commentId: N:Hybrid.Domain.Entities
  name: Hybrid.Domain.Entities
  nameWithType: Hybrid.Domain.Entities
  fullName: Hybrid.Domain.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate*
  commentId: Overload:Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate
  name: Validate
  nameWithType: InputDtoValidateExtensions.Validate
  fullName: Hybrid.Domain.Entities.InputDtoValidateExtensions.Validate
- uid: System.Collections.Generic.IEnumerable{Hybrid.Domain.Entities.IInputDto{{TKey}}}
  commentId: T:System.Collections.Generic.IEnumerable{Hybrid.Domain.Entities.IInputDto{``0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IInputDto<TKey>>
  nameWithType: IEnumerable<IInputDto<TKey>>
  fullName: System.Collections.Generic.IEnumerable<Hybrid.Domain.Entities.IInputDto<TKey>>
  nameWithType.vb: IEnumerable(Of IInputDto(Of TKey))
  fullName.vb: System.Collections.Generic.IEnumerable(Of Hybrid.Domain.Entities.IInputDto(Of TKey))
  name.vb: IEnumerable(Of IInputDto(Of TKey))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Domain.Entities.IInputDto`1
    name: IInputDto
    nameWithType: IInputDto
    fullName: Hybrid.Domain.Entities.IInputDto
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Domain.Entities.IInputDto`1
    name: IInputDto
    nameWithType: IInputDto
    fullName: Hybrid.Domain.Entities.IInputDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Hybrid.Domain.Entities.IInputDto{{TKey}}
  commentId: T:Hybrid.Domain.Entities.IInputDto{`0}
  parent: Hybrid.Domain.Entities
  definition: Hybrid.Domain.Entities.IInputDto`1
  name: IInputDto<TKey>
  nameWithType: IInputDto<TKey>
  fullName: Hybrid.Domain.Entities.IInputDto<TKey>
  nameWithType.vb: IInputDto(Of TKey)
  fullName.vb: Hybrid.Domain.Entities.IInputDto(Of TKey)
  name.vb: IInputDto(Of TKey)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.IInputDto`1
    name: IInputDto
    nameWithType: IInputDto
    fullName: Hybrid.Domain.Entities.IInputDto
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Hybrid.Domain.Entities.IInputDto`1
    name: IInputDto
    nameWithType: IInputDto
    fullName: Hybrid.Domain.Entities.IInputDto
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
