### YamlMime:ManagedReference
items:
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
  commentId: T:Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
  id: FunctionAuthCacheBase`10
  parent: Hybrid.Zero.Authorization
  children:
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.#ctor(System.IServiceProvider)
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.BuildRoleCaches
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.GetFunctionRoles(System.Guid)
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.GetUserFunctions(System.String)
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.RemoveFunctionCaches(System.Guid[])
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.RemoveUserCaches(System.String[])
  langs:
  - csharp
  - vb
  name: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>
  nameWithType: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>
  fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>
  type: Class
  source:
    remote:
      path: src/Hybrid.Zero/Authorization/FunctionAuthCacheBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: FunctionAuthCacheBase
    path: ../src/Hybrid.Zero/Authorization/FunctionAuthCacheBase.cs
    startLine: 29
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Authorization
  summary: "\n功能权限配置缓存基类\n"
  example: []
  syntax:
    content: 'public abstract class FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey> : IFunctionAuthCache where TModuleFunction : ModuleFunctionBase<TModuleKey> where TModuleRole : ModuleRoleBase<TModuleKey, TRoleKey> where TModuleUser : ModuleUserBase<TModuleKey, TUserKey> where TFunction : class, IFunction where TModule : ModuleBase<TModuleKey> where TModuleKey : struct, IEquatable<TModuleKey> where TRole : RoleBase<TRoleKey> where TRoleKey : IEquatable<TRoleKey> where TUser : UserBase<TUserKey> where TUserKey : IEquatable<TUserKey>'
    typeParameters:
    - id: TModuleFunction
    - id: TModuleRole
    - id: TModuleUser
    - id: TFunction
    - id: TModule
    - id: TModuleKey
    - id: TRole
    - id: TRoleKey
    - id: TUser
    - id: TUserKey
    content.vb: >-
      Public MustInherit Class FunctionAuthCacheBase(Of TModuleFunction As ModuleFunctionBase(Of TModuleKey), TModuleRole As ModuleRoleBase(Of TModuleKey, TRoleKey), TModuleUser As ModuleUserBase(Of TModuleKey, TUserKey), TFunction As {Class, IFunction}, TModule As ModuleBase(Of TModuleKey), TModuleKey As {Structure, IEquatable(Of TModuleKey)}, TRole As RoleBase(Of TRoleKey), TRoleKey As IEquatable(Of TRoleKey), TUser As UserBase(Of TUserKey), TUserKey As IEquatable(Of TUserKey))
          Implements IFunctionAuthCache
  inheritance:
  - System.Object
  implements:
  - Hybrid.Authorization.IFunctionAuthCache
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}[])
  - System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}},System.Boolean},System.String)
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}},System.Boolean},System.String)
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}},System.Action{System.Exception},System.Action{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}})
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}},System.Action{System.Exception})
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}},{TResult}},System.Action{System.Exception},System.Action{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}})
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}},{TResult}},System.Action{System.Exception})
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}},System.Action{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}})
  - System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  - System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}},{TResult}})
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  nameWithType.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)
  name.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.#ctor(System.IServiceProvider)
  commentId: M:Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
  langs:
  - csharp
  - vb
  name: FunctionAuthCacheBase(IServiceProvider)
  nameWithType: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.FunctionAuthCacheBase(IServiceProvider)
  fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.FunctionAuthCacheBase(System.IServiceProvider)
  type: Constructor
  source:
    remote:
      path: src/Hybrid.Zero/Authorization/FunctionAuthCacheBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: .ctor
    path: ../src/Hybrid.Zero/Authorization/FunctionAuthCacheBase.cs
    startLine: 50
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Authorization
  summary: "\n初始化一个<xref href=\"Hybrid.Zero.Authorization.FunctionAuthCacheBase%6010\" data-throw-if-not-resolved=\"false\"></xref>类型的新实例\n"
  example: []
  syntax:
    content: protected FunctionAuthCacheBase(IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
    content.vb: Protected Sub New(serviceProvider As IServiceProvider)
  overload: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.#ctor*
  nameWithType.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).FunctionAuthCacheBase(IServiceProvider)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).FunctionAuthCacheBase(System.IServiceProvider)
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.BuildRoleCaches
  commentId: M:Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.BuildRoleCaches
  id: BuildRoleCaches
  parent: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
  langs:
  - csharp
  - vb
  name: BuildRoleCaches()
  nameWithType: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.BuildRoleCaches()
  fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.BuildRoleCaches()
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Authorization/FunctionAuthCacheBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: BuildRoleCaches
    path: ../src/Hybrid.Zero/Authorization/FunctionAuthCacheBase.cs
    startLine: 60
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Authorization
  summary: "\n创建功能权限缓存，只创建 功能-角色集合 的映射，用户-功能 的映射，遇到才即时创建并缓存\n"
  example: []
  syntax:
    content: public virtual void BuildRoleCaches()
    content.vb: Public Overridable Sub BuildRoleCaches
  overload: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.BuildRoleCaches*
  implements:
  - Hybrid.Authorization.IFunctionAuthCache.BuildRoleCaches
  nameWithType.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).BuildRoleCaches()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).BuildRoleCaches()
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.RemoveFunctionCaches(System.Guid[])
  commentId: M:Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.RemoveFunctionCaches(System.Guid[])
  id: RemoveFunctionCaches(System.Guid[])
  parent: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
  langs:
  - csharp
  - vb
  name: RemoveFunctionCaches(Guid[])
  nameWithType: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.RemoveFunctionCaches(Guid[])
  fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.RemoveFunctionCaches(System.Guid[])
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Authorization/FunctionAuthCacheBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: RemoveFunctionCaches
    path: ../src/Hybrid.Zero/Authorization/FunctionAuthCacheBase.cs
    startLine: 80
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Authorization
  summary: "\n移除指定功能的缓存\n"
  example: []
  syntax:
    content: public virtual void RemoveFunctionCaches(params Guid[] functionIds)
    parameters:
    - id: functionIds
      type: System.Guid[]
      description: 功能编号集合
    content.vb: Public Overridable Sub RemoveFunctionCaches(ParamArray functionIds As Guid())
  overload: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.RemoveFunctionCaches*
  implements:
  - Hybrid.Authorization.IFunctionAuthCache.RemoveFunctionCaches(System.Guid[])
  nameWithType.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).RemoveFunctionCaches(Guid())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).RemoveFunctionCaches(System.Guid())
  name.vb: RemoveFunctionCaches(Guid())
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.RemoveUserCaches(System.String[])
  commentId: M:Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.RemoveUserCaches(System.String[])
  id: RemoveUserCaches(System.String[])
  parent: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
  langs:
  - csharp
  - vb
  name: RemoveUserCaches(String[])
  nameWithType: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.RemoveUserCaches(String[])
  fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.RemoveUserCaches(System.String[])
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Authorization/FunctionAuthCacheBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: RemoveUserCaches
    path: ../src/Hybrid.Zero/Authorization/FunctionAuthCacheBase.cs
    startLine: 95
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Authorization
  summary: "\n移除指定用户的缓存\n"
  example: []
  syntax:
    content: public virtual void RemoveUserCaches(params string[] userNames)
    parameters:
    - id: userNames
      type: System.String[]
      description: 用户编号集合
    content.vb: Public Overridable Sub RemoveUserCaches(ParamArray userNames As String())
  overload: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.RemoveUserCaches*
  implements:
  - Hybrid.Authorization.IFunctionAuthCache.RemoveUserCaches(System.String[])
  nameWithType.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).RemoveUserCaches(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).RemoveUserCaches(System.String())
  name.vb: RemoveUserCaches(String())
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.GetFunctionRoles(System.Guid)
  commentId: M:Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.GetFunctionRoles(System.Guid)
  id: GetFunctionRoles(System.Guid)
  parent: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
  langs:
  - csharp
  - vb
  name: GetFunctionRoles(Guid)
  nameWithType: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.GetFunctionRoles(Guid)
  fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.GetFunctionRoles(System.Guid)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Authorization/FunctionAuthCacheBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetFunctionRoles
    path: ../src/Hybrid.Zero/Authorization/FunctionAuthCacheBase.cs
    startLine: 109
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Authorization
  summary: "\n获取能执行指定功能的所有角色\n"
  example: []
  syntax:
    content: public virtual string[] GetFunctionRoles(Guid functionId)
    parameters:
    - id: functionId
      type: System.Guid
      description: 功能编号
    return:
      type: System.String[]
      description: 能执行功能的角色名称集合
    content.vb: Public Overridable Function GetFunctionRoles(functionId As Guid) As String()
  overload: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.GetFunctionRoles*
  implements:
  - Hybrid.Authorization.IFunctionAuthCache.GetFunctionRoles(System.Guid)
  nameWithType.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).GetFunctionRoles(Guid)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).GetFunctionRoles(System.Guid)
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.GetUserFunctions(System.String)
  commentId: M:Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.GetUserFunctions(System.String)
  id: GetUserFunctions(System.String)
  parent: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
  langs:
  - csharp
  - vb
  name: GetUserFunctions(String)
  nameWithType: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.GetUserFunctions(String)
  fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.GetUserFunctions(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Authorization/FunctionAuthCacheBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetUserFunctions
    path: ../src/Hybrid.Zero/Authorization/FunctionAuthCacheBase.cs
    startLine: 150
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Authorization
  summary: "\n获取指定用户的所有特权功能\n"
  example: []
  syntax:
    content: public virtual Guid[] GetUserFunctions(string userName)
    parameters:
    - id: userName
      type: System.String
      description: 用户名
    return:
      type: System.Guid[]
      description: 用户的所有特权功能
    content.vb: Public Overridable Function GetUserFunctions(userName As String) As Guid()
  overload: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.GetUserFunctions*
  implements:
  - Hybrid.Authorization.IFunctionAuthCache.GetUserFunctions(System.String)
  nameWithType.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).GetUserFunctions(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).GetUserFunctions(System.String)
references:
- uid: Hybrid.Zero.Authorization
  commentId: N:Hybrid.Zero.Authorization
  name: Hybrid.Zero.Authorization
  nameWithType: Hybrid.Zero.Authorization
  fullName: Hybrid.Zero.Authorization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hybrid.Authorization.IFunctionAuthCache
  commentId: T:Hybrid.Authorization.IFunctionAuthCache
  parent: Hybrid.Authorization
  name: IFunctionAuthCache
  nameWithType: IFunctionAuthCache
  fullName: Hybrid.Authorization.IFunctionAuthCache
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  name: CastTo(Type)
  nameWithType: ObjectExtensions.CastTo(Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  name: CastTo<T>(T)
  nameWithType: ObjectExtensions.CastTo<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(T)
  name.vb: CastTo(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>[])
  nameWithType: ObjectExtensions.IsIn<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>[])
  nameWithType.vb: ObjectExtensions.IsIn(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)())
  name.vb: IsIn(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    nameWithType: ObjectExtensions.IsIn<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    nameWithType: ObjectExtensions.IsIn(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: ObjectExtensions.ToDynamic()
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>()
  nameWithType: ObjectExtensions.DeepClone<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>()
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))()
  name.vb: DeepClone(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    nameWithType: ObjectExtensions.DeepClone<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    nameWithType: ObjectExtensions.DeepClone(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}},System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(Func<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(Func<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(System.Func<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(Func(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(System.Func(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), System.Boolean), System.String)
  name.vb: Required(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(Func(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    nameWithType: ParameterCheckExtensions.Required<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    nameWithType: ParameterCheckExtensions.Required(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}},System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TException>(Func<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TException>(Func<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TException>(System.Func<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TException)(Func(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TException)(System.Func(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), System.Boolean), System.String)
  name.vb: Required(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TException)(Func(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TException>
    nameWithType: ParameterCheckExtensions.Required<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TException)
    nameWithType: ParameterCheckExtensions.Required(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  name: CheckNotNull<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(System.String)
  name.vb: CheckNotNull(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    nameWithType: ParameterCheckExtensions.CheckNotNull<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}},System.Action{System.Exception},System.Action{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(Action<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>, Action<Exception>, Action<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>)
  nameWithType: TryCatchExtensions.TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(Action<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>, Action<Exception>, Action<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(System.Action<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>, System.Action<System.Exception>, System.Action<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(Action(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)), Action(Of Exception), Action(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(System.Action(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)), System.Action(Of System.Exception), System.Action(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)))
  name.vb: TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(Action(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)), Action(Of Exception), Action(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    nameWithType: TryCatchExtensions.TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    nameWithType: TryCatchExtensions.TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  name: TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(Action<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(Action<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(System.Action<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(Action(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(System.Action(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)), System.Action(Of System.Exception))
  name.vb: TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(Action(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    nameWithType: TryCatchExtensions.TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    nameWithType: TryCatchExtensions.TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}},{TResult}},System.Action{System.Exception},System.Action{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>(Func<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>, Action<Exception>, Action<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>)
  nameWithType: TryCatchExtensions.TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>(Func<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>, Action<Exception>, Action<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>(System.Func<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>, System.Action<System.Exception>, System.Action<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)(Func(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult), Action(Of Exception), Action(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)(System.Func(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult), System.Action(Of System.Exception), System.Action(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)))
  name.vb: TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)(Func(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult), Action(Of Exception), Action(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>
    nameWithType: TryCatchExtensions.TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}},{TResult}},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  name: TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>(Func<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>(Func<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>(System.Func<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)(Func(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)(System.Func(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)(Func(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>
    nameWithType: TryCatchExtensions.TryCatch<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}},System.Action{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  name: TryFinally<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(Action<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>, Action<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>)
  nameWithType: TryCatchExtensions.TryFinally<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(Action<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>, Action<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(System.Action<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>, System.Action<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(Action(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)), Action(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(System.Action(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)), System.Action(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)))
  name.vb: TryFinally(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(Action(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)), Action(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    nameWithType: TryCatchExtensions.TryFinally<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    nameWithType: TryCatchExtensions.TryFinally(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  parent: Hybrid.Json.JsonExtensions
  definition: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  name: ToJsonString(Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  name: MapTo<TTarget>()
  nameWithType: MapperExtensions.MapTo<TTarget>()
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>()
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)()
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)()
  name.vb: MapTo(Of TTarget)()
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TTarget>(TTarget)
  nameWithType: MapperExtensions.MapTo<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TTarget>(TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TTarget>(TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TTarget)(TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TTarget)(TTarget)
  name.vb: MapTo(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TTarget)(TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TTarget>
    nameWithType: MapperExtensions.MapTo<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TTarget)
    nameWithType: MapperExtensions.MapTo(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  name: Locking(Action)
  nameWithType: LockExtensions.Locking(Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  name: Locking<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(Action<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>)
  nameWithType: LockExtensions.Locking<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(Action<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>(System.Action<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>)
  nameWithType.vb: LockExtensions.Locking(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(Action(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(System.Action(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)))
  name.vb: Locking(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))(Action(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    nameWithType: LockExtensions.Locking<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    nameWithType: LockExtensions.Locking(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  name: Locking<TResult>(Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Zero.Authorization.FunctionAuthCacheBase{{TModuleFunction},{TModuleRole},{TModuleUser},{TFunction},{TModule},{TModuleKey},{TRole},{TRoleKey},{TUser},{TUserKey}},{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  name: Locking<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>(Func<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>)
  nameWithType: LockExtensions.Locking<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>(Func<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>(System.Func<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)(Func(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)(System.Func(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult))
  name.vb: Locking(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)(Func(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>
    nameWithType: LockExtensions.Locking<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)
    nameWithType: LockExtensions.Locking(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey>()
  nameWithType: EntityExtensions.CheckICreatedTime<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey>()
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey>()
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey)()
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey)()
  name.vb: CheckICreatedTime(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey)()
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckICreationAudited<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckIUpdateAudited<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey), TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Authorization
  commentId: N:Hybrid.Authorization
  name: Hybrid.Authorization
  nameWithType: Hybrid.Authorization
  fullName: Hybrid.Authorization
- uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  isExternal: true
  name: CastTo(Object, Type)
  nameWithType: ObjectExtensions.CastTo(Object, Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object, System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions
  commentId: T:Hybrid.Extensions.ObjectExtensions
  parent: Hybrid.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Hybrid.Extensions.ObjectExtensions
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  isExternal: true
  name: CastTo<T>(Object, T)
  nameWithType: ObjectExtensions.CastTo<T>(Object, T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object, T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object, T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object, T)
  name.vb: CastTo(Of T)(Object, T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<T>(T, T[])
  nameWithType: ObjectExtensions.IsIn<T>(T, T[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>(T, T[])
  nameWithType.vb: ObjectExtensions.IsIn(Of T)(T, T())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)(T, T())
  name.vb: IsIn(Of T)(T, T())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn<T>
    nameWithType: ObjectExtensions.IsIn<T>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn(Of T)
    nameWithType: ObjectExtensions.IsIn(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: ObjectExtensions.ToDynamic(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T>
    nameWithType: ParameterCheckExtensions.Required<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T)
    nameWithType: ParameterCheckExtensions.Required(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions
  commentId: T:Hybrid.Extensions.ParameterCheckExtensions
  parent: Hybrid.Extensions
  name: ParameterCheckExtensions
  nameWithType: ParameterCheckExtensions
  fullName: Hybrid.Extensions.ParameterCheckExtensions
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T, TException>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T, TException>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T, TException)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T, TException)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T, TException>
    nameWithType: ParameterCheckExtensions.Required<T, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T, TException)
    nameWithType: ParameterCheckExtensions.Required(Of T, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  isExternal: true
  name: CheckNotNull<T>(T, String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<T>(T, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>(T, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of T)(T, String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull<T>
    nameWithType: ParameterCheckExtensions.CheckNotNull<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions
  commentId: T:Hybrid.Extensions.TryCatchExtensions
  parent: Hybrid.Extensions
  name: TryCatchExtensions
  nameWithType: TryCatchExtensions
  fullName: Hybrid.Extensions.TryCatchExtensions
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  isExternal: true
  name: TryFinally<T>(T, Action<T>, Action<T>)
  nameWithType: TryCatchExtensions.TryFinally<T>(T, Action<T>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>(T, System.Action<T>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of T)(T, Action(Of T), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)(T, System.Action(Of T), System.Action(Of T))
  name.vb: TryFinally(Of T)(T, Action(Of T), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally<T>
    nameWithType: TryCatchExtensions.TryFinally<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally(Of T)
    nameWithType: TryCatchExtensions.TryFinally(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  isExternal: true
  name: ToJsonString(Object, Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Object, Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Object, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions
  commentId: T:Hybrid.Json.JsonExtensions
  parent: Hybrid.Json
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: Hybrid.Json.JsonExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  isExternal: true
  name: MapTo<TTarget>(Object)
  nameWithType: MapperExtensions.MapTo<TTarget>(Object)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>(System.Object)
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)(Object)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)(System.Object)
  name.vb: MapTo(Of TTarget)(Object)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Mapping.MapperExtensions
  commentId: T:Hybrid.Mapping.MapperExtensions
  parent: Hybrid.Mapping
  name: MapperExtensions
  nameWithType: MapperExtensions
  fullName: Hybrid.Mapping.MapperExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType: MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  name.vb: MapTo(Of TSource, TTarget)(TSource, TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo<TSource, TTarget>
    nameWithType: MapperExtensions.MapTo<TSource, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo(Of TSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TSource, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  isExternal: true
  name: Locking(Object, Action)
  nameWithType: LockExtensions.Locking(Object, Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Object, System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions
  commentId: T:Hybrid.Reflection.LockExtensions
  parent: Hybrid.Reflection
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: Hybrid.Reflection.LockExtensions
- uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  isExternal: true
  name: Locking<T>(T, Action<T>)
  nameWithType: LockExtensions.Locking<T>(T, Action<T>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<T>(T, System.Action<T>)
  nameWithType.vb: LockExtensions.Locking(Of T)(T, Action(Of T))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of T)(T, System.Action(Of T))
  name.vb: Locking(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking<T>
    nameWithType: LockExtensions.Locking<T>
    fullName: Hybrid.Reflection.LockExtensions.Locking<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking(Of T)
    nameWithType: LockExtensions.Locking(Of T)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  isExternal: true
  name: Locking<TResult>(Object, Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Object, Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Object, System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Object, Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Object, System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Object, Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  isExternal: true
  name: Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  nameWithType: LockExtensions.Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>(TSource, System.Func<TSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)(TSource, System.Func(Of TSource, TResult))
  name.vb: Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking<TSource, TResult>
    nameWithType: LockExtensions.Locking<TSource, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking(Of TSource, TResult)
    nameWithType: LockExtensions.Locking(Of TSource, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  name.vb: CheckICreatedTime(Of TEntity, TKey)(TEntity)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime<TEntity, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime(Of TEntity, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions
  commentId: T:Hybrid.Domain.Entities.EntityExtensions
  parent: Hybrid.Domain.Entities
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: Hybrid.Domain.Entities.EntityExtensions
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions
  commentId: N:Hybrid.Extensions
  name: Hybrid.Extensions
  nameWithType: Hybrid.Extensions
  fullName: Hybrid.Extensions
- uid: Hybrid.Json
  commentId: N:Hybrid.Json
  name: Hybrid.Json
  nameWithType: Hybrid.Json
  fullName: Hybrid.Json
- uid: Hybrid.Mapping
  commentId: N:Hybrid.Mapping
  name: Hybrid.Mapping
  nameWithType: Hybrid.Mapping
  fullName: Hybrid.Mapping
- uid: Hybrid.Reflection
  commentId: N:Hybrid.Reflection
  name: Hybrid.Reflection
  nameWithType: Hybrid.Reflection
  fullName: Hybrid.Reflection
- uid: Hybrid.Domain.Entities
  commentId: N:Hybrid.Domain.Entities
  name: Hybrid.Domain.Entities
  nameWithType: Hybrid.Domain.Entities
  fullName: Hybrid.Domain.Entities
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
  commentId: T:Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
  name: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>
  nameWithType: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>
  fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>
  nameWithType.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)
  fullName.vb: Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)
  name.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey)
  spec.csharp:
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10
    name: FunctionAuthCacheBase
    nameWithType: FunctionAuthCacheBase
    fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.#ctor*
  commentId: Overload:Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.#ctor
  name: FunctionAuthCacheBase
  nameWithType: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.FunctionAuthCacheBase
  fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.FunctionAuthCacheBase
  nameWithType.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).FunctionAuthCacheBase
  fullName.vb: Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).FunctionAuthCacheBase
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.BuildRoleCaches*
  commentId: Overload:Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.BuildRoleCaches
  name: BuildRoleCaches
  nameWithType: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.BuildRoleCaches
  fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.BuildRoleCaches
  nameWithType.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).BuildRoleCaches
  fullName.vb: Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).BuildRoleCaches
- uid: Hybrid.Authorization.IFunctionAuthCache.BuildRoleCaches
  commentId: M:Hybrid.Authorization.IFunctionAuthCache.BuildRoleCaches
  parent: Hybrid.Authorization.IFunctionAuthCache
  name: BuildRoleCaches()
  nameWithType: IFunctionAuthCache.BuildRoleCaches()
  fullName: Hybrid.Authorization.IFunctionAuthCache.BuildRoleCaches()
  spec.csharp:
  - uid: Hybrid.Authorization.IFunctionAuthCache.BuildRoleCaches
    name: BuildRoleCaches
    nameWithType: IFunctionAuthCache.BuildRoleCaches
    fullName: Hybrid.Authorization.IFunctionAuthCache.BuildRoleCaches
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Authorization.IFunctionAuthCache.BuildRoleCaches
    name: BuildRoleCaches
    nameWithType: IFunctionAuthCache.BuildRoleCaches
    fullName: Hybrid.Authorization.IFunctionAuthCache.BuildRoleCaches
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.RemoveFunctionCaches*
  commentId: Overload:Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.RemoveFunctionCaches
  name: RemoveFunctionCaches
  nameWithType: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.RemoveFunctionCaches
  fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.RemoveFunctionCaches
  nameWithType.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).RemoveFunctionCaches
  fullName.vb: Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).RemoveFunctionCaches
- uid: Hybrid.Authorization.IFunctionAuthCache.RemoveFunctionCaches(System.Guid[])
  commentId: M:Hybrid.Authorization.IFunctionAuthCache.RemoveFunctionCaches(System.Guid[])
  parent: Hybrid.Authorization.IFunctionAuthCache
  isExternal: true
  name: RemoveFunctionCaches(Guid[])
  nameWithType: IFunctionAuthCache.RemoveFunctionCaches(Guid[])
  fullName: Hybrid.Authorization.IFunctionAuthCache.RemoveFunctionCaches(System.Guid[])
  nameWithType.vb: IFunctionAuthCache.RemoveFunctionCaches(Guid())
  fullName.vb: Hybrid.Authorization.IFunctionAuthCache.RemoveFunctionCaches(System.Guid())
  name.vb: RemoveFunctionCaches(Guid())
  spec.csharp:
  - uid: Hybrid.Authorization.IFunctionAuthCache.RemoveFunctionCaches(System.Guid[])
    name: RemoveFunctionCaches
    nameWithType: IFunctionAuthCache.RemoveFunctionCaches
    fullName: Hybrid.Authorization.IFunctionAuthCache.RemoveFunctionCaches
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Authorization.IFunctionAuthCache.RemoveFunctionCaches(System.Guid[])
    name: RemoveFunctionCaches
    nameWithType: IFunctionAuthCache.RemoveFunctionCaches
    fullName: Hybrid.Authorization.IFunctionAuthCache.RemoveFunctionCaches
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid[]
  isExternal: true
  name: Guid[]
  nameWithType: Guid[]
  fullName: System.Guid[]
  nameWithType.vb: Guid()
  fullName.vb: System.Guid()
  name.vb: Guid()
  spec.csharp:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.RemoveUserCaches*
  commentId: Overload:Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.RemoveUserCaches
  name: RemoveUserCaches
  nameWithType: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.RemoveUserCaches
  fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.RemoveUserCaches
  nameWithType.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).RemoveUserCaches
  fullName.vb: Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).RemoveUserCaches
- uid: Hybrid.Authorization.IFunctionAuthCache.RemoveUserCaches(System.String[])
  commentId: M:Hybrid.Authorization.IFunctionAuthCache.RemoveUserCaches(System.String[])
  parent: Hybrid.Authorization.IFunctionAuthCache
  isExternal: true
  name: RemoveUserCaches(String[])
  nameWithType: IFunctionAuthCache.RemoveUserCaches(String[])
  fullName: Hybrid.Authorization.IFunctionAuthCache.RemoveUserCaches(System.String[])
  nameWithType.vb: IFunctionAuthCache.RemoveUserCaches(String())
  fullName.vb: Hybrid.Authorization.IFunctionAuthCache.RemoveUserCaches(System.String())
  name.vb: RemoveUserCaches(String())
  spec.csharp:
  - uid: Hybrid.Authorization.IFunctionAuthCache.RemoveUserCaches(System.String[])
    name: RemoveUserCaches
    nameWithType: IFunctionAuthCache.RemoveUserCaches
    fullName: Hybrid.Authorization.IFunctionAuthCache.RemoveUserCaches
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Authorization.IFunctionAuthCache.RemoveUserCaches(System.String[])
    name: RemoveUserCaches
    nameWithType: IFunctionAuthCache.RemoveUserCaches
    fullName: Hybrid.Authorization.IFunctionAuthCache.RemoveUserCaches
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.GetFunctionRoles*
  commentId: Overload:Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.GetFunctionRoles
  name: GetFunctionRoles
  nameWithType: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.GetFunctionRoles
  fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.GetFunctionRoles
  nameWithType.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).GetFunctionRoles
  fullName.vb: Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).GetFunctionRoles
- uid: Hybrid.Authorization.IFunctionAuthCache.GetFunctionRoles(System.Guid)
  commentId: M:Hybrid.Authorization.IFunctionAuthCache.GetFunctionRoles(System.Guid)
  parent: Hybrid.Authorization.IFunctionAuthCache
  isExternal: true
  name: GetFunctionRoles(Guid)
  nameWithType: IFunctionAuthCache.GetFunctionRoles(Guid)
  fullName: Hybrid.Authorization.IFunctionAuthCache.GetFunctionRoles(System.Guid)
  spec.csharp:
  - uid: Hybrid.Authorization.IFunctionAuthCache.GetFunctionRoles(System.Guid)
    name: GetFunctionRoles
    nameWithType: IFunctionAuthCache.GetFunctionRoles
    fullName: Hybrid.Authorization.IFunctionAuthCache.GetFunctionRoles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Authorization.IFunctionAuthCache.GetFunctionRoles(System.Guid)
    name: GetFunctionRoles
    nameWithType: IFunctionAuthCache.GetFunctionRoles
    fullName: Hybrid.Authorization.IFunctionAuthCache.GetFunctionRoles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.GetUserFunctions*
  commentId: Overload:Hybrid.Zero.Authorization.FunctionAuthCacheBase`10.GetUserFunctions
  name: GetUserFunctions
  nameWithType: FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.GetUserFunctions
  fullName: Hybrid.Zero.Authorization.FunctionAuthCacheBase<TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey>.GetUserFunctions
  nameWithType.vb: FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).GetUserFunctions
  fullName.vb: Hybrid.Zero.Authorization.FunctionAuthCacheBase(Of TModuleFunction, TModuleRole, TModuleUser, TFunction, TModule, TModuleKey, TRole, TRoleKey, TUser, TUserKey).GetUserFunctions
- uid: Hybrid.Authorization.IFunctionAuthCache.GetUserFunctions(System.String)
  commentId: M:Hybrid.Authorization.IFunctionAuthCache.GetUserFunctions(System.String)
  parent: Hybrid.Authorization.IFunctionAuthCache
  isExternal: true
  name: GetUserFunctions(String)
  nameWithType: IFunctionAuthCache.GetUserFunctions(String)
  fullName: Hybrid.Authorization.IFunctionAuthCache.GetUserFunctions(System.String)
  spec.csharp:
  - uid: Hybrid.Authorization.IFunctionAuthCache.GetUserFunctions(System.String)
    name: GetUserFunctions
    nameWithType: IFunctionAuthCache.GetUserFunctions
    fullName: Hybrid.Authorization.IFunctionAuthCache.GetUserFunctions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Authorization.IFunctionAuthCache.GetUserFunctions(System.String)
    name: GetUserFunctions
    nameWithType: IFunctionAuthCache.GetUserFunctions
    fullName: Hybrid.Authorization.IFunctionAuthCache.GetUserFunctions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
