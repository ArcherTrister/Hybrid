### YamlMime:ManagedReference
items:
- uid: Hybrid.Security.Crypto
  commentId: T:Hybrid.Security.Crypto
  id: Crypto
  parent: Hybrid.Security
  children:
  - Hybrid.Security.Crypto.DesDecrypt(System.String,System.String)
  - Hybrid.Security.Crypto.DesDecrypt(System.String,System.String,System.String)
  - Hybrid.Security.Crypto.DesEncrypt(System.String,System.String)
  - Hybrid.Security.Crypto.DesEncrypt(System.String,System.String,System.String)
  - Hybrid.Security.Crypto.Md5Encrypt16(System.String)
  - Hybrid.Security.Crypto.Md5Encrypt32(System.String)
  - Hybrid.Security.Crypto.Md5Encrypt64(System.String)
  - Hybrid.Security.Crypto.Md5Hex(System.Byte[])
  langs:
  - csharp
  - vb
  name: Crypto
  nameWithType: Crypto
  fullName: Hybrid.Security.Crypto
  type: Class
  source:
    remote:
      path: src/Hybrid/Security/Crypto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Crypto
    path: ../src/Hybrid/Security/Crypto.cs
    startLine: 11
  assemblies:
  - Hybrid
  namespace: Hybrid.Security
  summary: "\n加密解密\n"
  example: []
  syntax:
    content: public static class Crypto
    content.vb: Public Module Crypto
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Security.Crypto.DesEncrypt(System.String,System.String,System.String)
  commentId: M:Hybrid.Security.Crypto.DesEncrypt(System.String,System.String,System.String)
  id: DesEncrypt(System.String,System.String,System.String)
  parent: Hybrid.Security.Crypto
  langs:
  - csharp
  - vb
  name: DesEncrypt(String, String, String)
  nameWithType: Crypto.DesEncrypt(String, String, String)
  fullName: Hybrid.Security.Crypto.DesEncrypt(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Security/Crypto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: DesEncrypt
    path: ../src/Hybrid/Security/Crypto.cs
    startLine: 23
  assemblies:
  - Hybrid
  namespace: Hybrid.Security
  summary: "\nC# DES加密方法\n"
  example: []
  syntax:
    content: public static string DesEncrypt(string decryptedValue, string key, string iv)
    parameters:
    - id: decryptedValue
      type: System.String
      description: 要加密的字符串
    - id: key
      type: System.String
      description: 密钥
    - id: iv
      type: System.String
      description: 向量
    return:
      type: System.String
      description: 加密后的字符串
    content.vb: Public Shared Function DesEncrypt(decryptedValue As String, key As String, iv As String) As String
  overload: Hybrid.Security.Crypto.DesEncrypt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Security.Crypto.DesEncrypt(System.String,System.String)
  commentId: M:Hybrid.Security.Crypto.DesEncrypt(System.String,System.String)
  id: DesEncrypt(System.String,System.String)
  parent: Hybrid.Security.Crypto
  langs:
  - csharp
  - vb
  name: DesEncrypt(String, String)
  nameWithType: Crypto.DesEncrypt(String, String)
  fullName: Hybrid.Security.Crypto.DesEncrypt(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Security/Crypto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: DesEncrypt
    path: ../src/Hybrid/Security/Crypto.cs
    startLine: 52
  assemblies:
  - Hybrid
  namespace: Hybrid.Security
  summary: "\nC# DES加密方法\n"
  example: []
  syntax:
    content: public static string DesEncrypt(string decryptedValue, string key = "Gy4aFj7z")
    parameters:
    - id: decryptedValue
      type: System.String
      description: 要加密的字符串
    - id: key
      type: System.String
      description: 密钥
    return:
      type: System.String
      description: 加密后的字符串
    content.vb: Public Shared Function DesEncrypt(decryptedValue As String, key As String = "Gy4aFj7z") As String
  overload: Hybrid.Security.Crypto.DesEncrypt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Security.Crypto.DesDecrypt(System.String,System.String,System.String)
  commentId: M:Hybrid.Security.Crypto.DesDecrypt(System.String,System.String,System.String)
  id: DesDecrypt(System.String,System.String,System.String)
  parent: Hybrid.Security.Crypto
  langs:
  - csharp
  - vb
  name: DesDecrypt(String, String, String)
  nameWithType: Crypto.DesDecrypt(String, String, String)
  fullName: Hybrid.Security.Crypto.DesDecrypt(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Security/Crypto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: DesDecrypt
    path: ../src/Hybrid/Security/Crypto.cs
    startLine: 91
  assemblies:
  - Hybrid
  namespace: Hybrid.Security
  summary: "\nC# DES解密方法\n"
  example: []
  syntax:
    content: public static string DesDecrypt(string encryptedValue, string key, string iv)
    parameters:
    - id: encryptedValue
      type: System.String
      description: 待解密的字符串
    - id: key
      type: System.String
      description: 密钥
    - id: iv
      type: System.String
      description: 向量
    return:
      type: System.String
      description: 解密后的字符串
    content.vb: Public Shared Function DesDecrypt(encryptedValue As String, key As String, iv As String) As String
  overload: Hybrid.Security.Crypto.DesDecrypt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Security.Crypto.DesDecrypt(System.String,System.String)
  commentId: M:Hybrid.Security.Crypto.DesDecrypt(System.String,System.String)
  id: DesDecrypt(System.String,System.String)
  parent: Hybrid.Security.Crypto
  langs:
  - csharp
  - vb
  name: DesDecrypt(String, String)
  nameWithType: Crypto.DesDecrypt(String, String)
  fullName: Hybrid.Security.Crypto.DesDecrypt(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Security/Crypto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: DesDecrypt
    path: ../src/Hybrid/Security/Crypto.cs
    startLine: 121
  assemblies:
  - Hybrid
  namespace: Hybrid.Security
  summary: "\nC# DES解密方法\n"
  example: []
  syntax:
    content: public static string DesDecrypt(string encryptedValue, string key = "Gy4aFj7z")
    parameters:
    - id: encryptedValue
      type: System.String
      description: 待解密的字符串
    - id: key
      type: System.String
      description: 密钥
    return:
      type: System.String
      description: 解密后的字符串
    content.vb: Public Shared Function DesDecrypt(encryptedValue As String, key As String = "Gy4aFj7z") As String
  overload: Hybrid.Security.Crypto.DesDecrypt*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Security.Crypto.Md5Hex(System.Byte[])
  commentId: M:Hybrid.Security.Crypto.Md5Hex(System.Byte[])
  id: Md5Hex(System.Byte[])
  parent: Hybrid.Security.Crypto
  langs:
  - csharp
  - vb
  name: Md5Hex(Byte[])
  nameWithType: Crypto.Md5Hex(Byte[])
  fullName: Hybrid.Security.Crypto.Md5Hex(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Security/Crypto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Md5Hex
    path: ../src/Hybrid/Security/Crypto.cs
    startLine: 156
  assemblies:
  - Hybrid
  namespace: Hybrid.Security
  summary: "\n16位MD5加密转小写\n"
  example: []
  syntax:
    content: public static string Md5Hex(byte[] buffer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function Md5Hex(buffer As Byte()) As String
  overload: Hybrid.Security.Crypto.Md5Hex*
  nameWithType.vb: Crypto.Md5Hex(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Hybrid.Security.Crypto.Md5Hex(System.Byte())
  name.vb: Md5Hex(Byte())
- uid: Hybrid.Security.Crypto.Md5Encrypt16(System.String)
  commentId: M:Hybrid.Security.Crypto.Md5Encrypt16(System.String)
  id: Md5Encrypt16(System.String)
  parent: Hybrid.Security.Crypto
  langs:
  - csharp
  - vb
  name: Md5Encrypt16(String)
  nameWithType: Crypto.Md5Encrypt16(String)
  fullName: Hybrid.Security.Crypto.Md5Encrypt16(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Security/Crypto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Md5Encrypt16
    path: ../src/Hybrid/Security/Crypto.cs
    startLine: 169
  assemblies:
  - Hybrid
  namespace: Hybrid.Security
  summary: "\n16位MD5加密\n"
  example: []
  syntax:
    content: public static string Md5Encrypt16(string password)
    parameters:
    - id: password
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function Md5Encrypt16(password As String) As String
  overload: Hybrid.Security.Crypto.Md5Encrypt16*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Security.Crypto.Md5Encrypt32(System.String)
  commentId: M:Hybrid.Security.Crypto.Md5Encrypt32(System.String)
  id: Md5Encrypt32(System.String)
  parent: Hybrid.Security.Crypto
  langs:
  - csharp
  - vb
  name: Md5Encrypt32(String)
  nameWithType: Crypto.Md5Encrypt32(String)
  fullName: Hybrid.Security.Crypto.Md5Encrypt32(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Security/Crypto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Md5Encrypt32
    path: ../src/Hybrid/Security/Crypto.cs
    startLine: 182
  assemblies:
  - Hybrid
  namespace: Hybrid.Security
  summary: "\n32位MD5加密\n"
  example: []
  syntax:
    content: public static string Md5Encrypt32(string password)
    parameters:
    - id: password
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function Md5Encrypt32(password As String) As String
  overload: Hybrid.Security.Crypto.Md5Encrypt32*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Security.Crypto.Md5Encrypt64(System.String)
  commentId: M:Hybrid.Security.Crypto.Md5Encrypt64(System.String)
  id: Md5Encrypt64(System.String)
  parent: Hybrid.Security.Crypto
  langs:
  - csharp
  - vb
  name: Md5Encrypt64(String)
  nameWithType: Crypto.Md5Encrypt64(String)
  fullName: Hybrid.Security.Crypto.Md5Encrypt64(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Security/Crypto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Md5Encrypt64
    path: ../src/Hybrid/Security/Crypto.cs
    startLine: 197
  assemblies:
  - Hybrid
  namespace: Hybrid.Security
  summary: "\nBase64MD5加密\n"
  example: []
  syntax:
    content: public static string Md5Encrypt64(string password)
    parameters:
    - id: password
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function Md5Encrypt64(password As String) As String
  overload: Hybrid.Security.Crypto.Md5Encrypt64*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Hybrid.Security
  commentId: N:Hybrid.Security
  name: Hybrid.Security
  nameWithType: Hybrid.Security
  fullName: Hybrid.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Security.Crypto.DesEncrypt*
  commentId: Overload:Hybrid.Security.Crypto.DesEncrypt
  name: DesEncrypt
  nameWithType: Crypto.DesEncrypt
  fullName: Hybrid.Security.Crypto.DesEncrypt
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hybrid.Security.Crypto.DesDecrypt*
  commentId: Overload:Hybrid.Security.Crypto.DesDecrypt
  name: DesDecrypt
  nameWithType: Crypto.DesDecrypt
  fullName: Hybrid.Security.Crypto.DesDecrypt
- uid: Hybrid.Security.Crypto.Md5Hex*
  commentId: Overload:Hybrid.Security.Crypto.Md5Hex
  name: Md5Hex
  nameWithType: Crypto.Md5Hex
  fullName: Hybrid.Security.Crypto.Md5Hex
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Hybrid.Security.Crypto.Md5Encrypt16*
  commentId: Overload:Hybrid.Security.Crypto.Md5Encrypt16
  name: Md5Encrypt16
  nameWithType: Crypto.Md5Encrypt16
  fullName: Hybrid.Security.Crypto.Md5Encrypt16
- uid: Hybrid.Security.Crypto.Md5Encrypt32*
  commentId: Overload:Hybrid.Security.Crypto.Md5Encrypt32
  name: Md5Encrypt32
  nameWithType: Crypto.Md5Encrypt32
  fullName: Hybrid.Security.Crypto.Md5Encrypt32
- uid: Hybrid.Security.Crypto.Md5Encrypt64*
  commentId: Overload:Hybrid.Security.Crypto.Md5Encrypt64
  name: Md5Encrypt64
  nameWithType: Crypto.Md5Encrypt64
  fullName: Hybrid.Security.Crypto.Md5Encrypt64
