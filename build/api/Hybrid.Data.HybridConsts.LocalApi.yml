### YamlMime:ManagedReference
items:
- uid: Hybrid.Data.HybridConsts.LocalApi
  commentId: T:Hybrid.Data.HybridConsts.LocalApi
  id: HybridConsts.LocalApi
  parent: Hybrid.Data
  children:
  - Hybrid.Data.HybridConsts.LocalApi.AuthenticationScheme
  - Hybrid.Data.HybridConsts.LocalApi.PolicyName
  - Hybrid.Data.HybridConsts.LocalApi.ScopeName
  langs:
  - csharp
  - vb
  name: HybridConsts.LocalApi
  nameWithType: HybridConsts.LocalApi
  fullName: Hybrid.Data.HybridConsts.LocalApi
  type: Class
  source:
    remote:
      path: src/Hybrid/Data/HybridConsts.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: LocalApi
    path: ../src/Hybrid/Data/HybridConsts.cs
    startLine: 54
  assemblies:
  - Hybrid
  namespace: Hybrid.Data
  summary: "\n本地标识服务器访问令牌身份验证的常量\n"
  example: []
  syntax:
    content: public static class LocalApi
    content.vb: Public Module LocalApi
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Data.HybridConsts.LocalApi.AuthenticationScheme
  commentId: F:Hybrid.Data.HybridConsts.LocalApi.AuthenticationScheme
  id: AuthenticationScheme
  parent: Hybrid.Data.HybridConsts.LocalApi
  langs:
  - csharp
  - vb
  name: AuthenticationScheme
  nameWithType: HybridConsts.LocalApi.AuthenticationScheme
  fullName: Hybrid.Data.HybridConsts.LocalApi.AuthenticationScheme
  type: Field
  source:
    remote:
      path: src/Hybrid/Data/HybridConsts.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: AuthenticationScheme
    path: ../src/Hybrid/Data/HybridConsts.cs
    startLine: 59
  assemblies:
  - Hybrid
  namespace: Hybrid.Data
  summary: "\n使用AddLocalApi帮助程序时的身份验证方案\n"
  example: []
  syntax:
    content: public const string AuthenticationScheme = "IdentityServerAccessToken"
    return:
      type: System.String
    content.vb: Public Const AuthenticationScheme As String = "IdentityServerAccessToken"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Hybrid.Data.HybridConsts.LocalApi.ScopeName
  commentId: F:Hybrid.Data.HybridConsts.LocalApi.ScopeName
  id: ScopeName
  parent: Hybrid.Data.HybridConsts.LocalApi
  langs:
  - csharp
  - vb
  name: ScopeName
  nameWithType: HybridConsts.LocalApi.ScopeName
  fullName: Hybrid.Data.HybridConsts.LocalApi.ScopeName
  type: Field
  source:
    remote:
      path: src/Hybrid/Data/HybridConsts.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ScopeName
    path: ../src/Hybrid/Data/HybridConsts.cs
    startLine: 64
  assemblies:
  - Hybrid
  namespace: Hybrid.Data
  summary: "\n使用AddLocalApiAuthentication帮助程序时的API作用域名称\n"
  example: []
  syntax:
    content: public const string ScopeName = "IdentityServerApi"
    return:
      type: System.String
    content.vb: Public Const ScopeName As String = "IdentityServerApi"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Hybrid.Data.HybridConsts.LocalApi.PolicyName
  commentId: F:Hybrid.Data.HybridConsts.LocalApi.PolicyName
  id: PolicyName
  parent: Hybrid.Data.HybridConsts.LocalApi
  langs:
  - csharp
  - vb
  name: PolicyName
  nameWithType: HybridConsts.LocalApi.PolicyName
  fullName: Hybrid.Data.HybridConsts.LocalApi.PolicyName
  type: Field
  source:
    remote:
      path: src/Hybrid/Data/HybridConsts.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: PolicyName
    path: ../src/Hybrid/Data/HybridConsts.cs
    startLine: 69
  assemblies:
  - Hybrid
  namespace: Hybrid.Data
  summary: "\n使用AddLocalApiAuthentication帮助程序时的授权策略名称\n"
  example: []
  syntax:
    content: public const string PolicyName = "IdentityServerAccessToken"
    return:
      type: System.String
    content.vb: Public Const PolicyName As String = "IdentityServerAccessToken"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Hybrid.Data
  commentId: N:Hybrid.Data
  name: Hybrid.Data
  nameWithType: Hybrid.Data
  fullName: Hybrid.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
