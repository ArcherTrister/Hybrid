### YamlMime:ManagedReference
items:
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
  commentId: T:Hybrid.Zero.Authorization.SecurityModuleBase`19
  id: SecurityModuleBase`19
  parent: Hybrid.Zero.Authorization
  children:
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Level
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.UseModule(System.IServiceProvider)
  langs:
  - csharp
  - vb
  name: SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>
  nameWithType: SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>
  fullName: Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>
  type: Class
  source:
    remote:
      path: src/Hybrid.Zero/Authorization/SecurityModuleBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: SecurityModuleBase
    path: ../src/Hybrid.Zero/Authorization/SecurityModuleBase.cs
    startLine: 45
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Authorization
  summary: "\n权限安全模块基类\n"
  example: []
  syntax:
    content: 'public abstract class SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey> : HybridModule where TSecurityManager : class, IFunctionStore<TFunction, TFunctionInputDto>, IEntityInfoStore<TEntityInfo, TEntityInfoInputDto>, IModuleStore<TModule, TModuleInputDto, TModuleKey>, IModuleFunctionStore<TModuleFunction, TModuleKey>, IModuleRoleStore<TModuleRole, TRoleKey, TModuleKey>, IModuleUserStore<TModuleUser, TUserKey, TModuleKey>, IEntityRoleStore<TEntityRole, TEntityRoleInputDto, TRoleKey> where TFunctionAuthorization : IFunctionAuthorization where TFunctionAuthCache : IFunctionAuthCache where TDataAuthCache : IDataAuthCache where TModuleHandler : IModuleHandler where TFunction : IFunction where TFunctionInputDto : FunctionInputDtoBase where TEntityInfo : IEntityInfo where TEntityInfoInputDto : EntityInfoInputDtoBase where TModule : ModuleBase<TModuleKey> where TModuleInputDto : ModuleInputDtoBase<TModuleKey> where TModuleKey : struct, IEquatable<TModuleKey> where TModuleFunction : ModuleFunctionBase<TModuleKey> where TModuleRole : ModuleRoleBase<TModuleKey, TRoleKey> where TModuleUser : ModuleUserBase<TModuleKey, TUserKey> where TEntityRole : EntityRoleBase<TRoleKey> where TEntityRoleInputDto : EntityRoleInputDtoBase<TRoleKey> where TRoleKey : IEquatable<TRoleKey> where TUserKey : IEquatable<TUserKey>'
    typeParameters:
    - id: TSecurityManager
      description: 安全管理器类型
    - id: TFunctionAuthorization
      description: 功能权限检查类型
    - id: TFunctionAuthCache
      description: 功能权限缓存类型
    - id: TDataAuthCache
      description: 数据权限缓存类型
    - id: TModuleHandler
      description: 模块处理器类型
    - id: TFunction
      description: 功能类型
    - id: TFunctionInputDto
      description: 功能输入DTO类型
    - id: TEntityInfo
      description: 实体信息类型
    - id: TEntityInfoInputDto
      description: 实体输入DTO类型
    - id: TModule
      description: 模块类型
    - id: TModuleInputDto
      description: 模块输入DTO类型
    - id: TModuleKey
      description: 模块编号类型
    - id: TModuleFunction
      description: 模块功能类型
    - id: TModuleRole
      description: 模块角色类型
    - id: TModuleUser
      description: 模块用户类型
    - id: TEntityRole
      description: 实体角色类型
    - id: TEntityRoleInputDto
      description: 实体角色输入DTO类型
    - id: TRoleKey
      description: 角色编号类型
    - id: TUserKey
      description: 用户编号类型
    content.vb: >-
      Public MustInherit Class SecurityModuleBase(Of TSecurityManager As {Class, IFunctionStore(Of TFunction, TFunctionInputDto), IEntityInfoStore(Of TEntityInfo, TEntityInfoInputDto), IModuleStore(Of TModule, TModuleInputDto, TModuleKey), IModuleFunctionStore(Of TModuleFunction, TModuleKey), IModuleRoleStore(Of TModuleRole, TRoleKey, TModuleKey), IModuleUserStore(Of TModuleUser, TUserKey, TModuleKey), IEntityRoleStore(Of TEntityRole, TEntityRoleInputDto, TRoleKey)}, TFunctionAuthorization As IFunctionAuthorization, TFunctionAuthCache As IFunctionAuthCache, TDataAuthCache As IDataAuthCache, TModuleHandler As IModuleHandler, TFunction As IFunction, TFunctionInputDto As FunctionInputDtoBase, TEntityInfo As IEntityInfo, TEntityInfoInputDto As EntityInfoInputDtoBase, TModule As ModuleBase(Of TModuleKey), TModuleInputDto As ModuleInputDtoBase(Of TModuleKey), TModuleKey As {Structure, IEquatable(Of TModuleKey)}, TModuleFunction As ModuleFunctionBase(Of TModuleKey), TModuleRole As ModuleRoleBase(Of TModuleKey, TRoleKey), TModuleUser As ModuleUserBase(Of TModuleKey, TUserKey), TEntityRole As EntityRoleBase(Of TRoleKey), TEntityRoleInputDto As EntityRoleInputDtoBase(Of TRoleKey), TRoleKey As IEquatable(Of TRoleKey), TUserKey As IEquatable(Of TUserKey))
          Inherits HybridModule
  inheritance:
  - System.Object
  - Hybrid.Core.Modules.HybridModule
  inheritedMembers:
  - Hybrid.Core.Modules.HybridModule.Order
  - Hybrid.Core.Modules.HybridModule.IsEnabled
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}[])
  - System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}},System.Boolean},System.String)
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}},System.Boolean},System.String)
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}},System.Action{System.Exception},System.Action{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}})
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}},System.Action{System.Exception})
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}},{TResult}},System.Action{System.Exception},System.Action{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}})
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}},{TResult}},System.Action{System.Exception})
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}},System.Action{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}})
  - System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  - System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}},{TResult}})
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  nameWithType.vb: SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)
  name.vb: SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Level
  commentId: P:Hybrid.Zero.Authorization.SecurityModuleBase`19.Level
  id: Level
  parent: Hybrid.Zero.Authorization.SecurityModuleBase`19
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>.Level
  fullName: Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>.Level
  type: Property
  source:
    remote:
      path: src/Hybrid.Zero/Authorization/SecurityModuleBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Level
    path: ../src/Hybrid.Zero/Authorization/SecurityModuleBase.cs
    startLine: 76
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Authorization
  summary: "\n获取 模块级别\n"
  example: []
  syntax:
    content: public override ModuleLevel Level { get; }
    parameters: []
    return:
      type: Hybrid.Core.Modules.ModuleLevel
    content.vb: Public Overrides ReadOnly Property Level As ModuleLevel
  overridden: Hybrid.Core.Modules.HybridModule.Level
  overload: Hybrid.Zero.Authorization.SecurityModuleBase`19.Level*
  nameWithType.vb: SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey).Level
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey).Level
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Hybrid.Zero.Authorization.SecurityModuleBase`19.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Hybrid.Zero.Authorization.SecurityModuleBase`19
  langs:
  - csharp
  - vb
  name: AddServices(IServiceCollection)
  nameWithType: SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>.AddServices(IServiceCollection)
  fullName: Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Authorization/SecurityModuleBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: AddServices
    path: ../src/Hybrid.Zero/Authorization/SecurityModuleBase.cs
    startLine: 83
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Authorization
  summary: "\n将模块服务添加到依赖注入服务容器中\n"
  example: []
  syntax:
    content: public override IServiceCollection AddServices(IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: 依赖注入服务容器
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: Public Overrides Function AddServices(services As IServiceCollection) As IServiceCollection
  overridden: Hybrid.Core.Modules.HybridModule.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  overload: Hybrid.Zero.Authorization.SecurityModuleBase`19.AddServices*
  nameWithType.vb: SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey).AddServices(IServiceCollection)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey).AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.UseModule(System.IServiceProvider)
  commentId: M:Hybrid.Zero.Authorization.SecurityModuleBase`19.UseModule(System.IServiceProvider)
  id: UseModule(System.IServiceProvider)
  parent: Hybrid.Zero.Authorization.SecurityModuleBase`19
  langs:
  - csharp
  - vb
  name: UseModule(IServiceProvider)
  nameWithType: SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>.UseModule(IServiceProvider)
  fullName: Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>.UseModule(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero/Authorization/SecurityModuleBase.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: UseModule
    path: ../src/Hybrid.Zero/Authorization/SecurityModuleBase.cs
    startLine: 106
  assemblies:
  - Hybrid.Zero
  namespace: Hybrid.Zero.Authorization
  summary: "\n应用模块服务\n"
  example: []
  syntax:
    content: public override void UseModule(IServiceProvider provider)
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: 服务提供者
    content.vb: Public Overrides Sub UseModule(provider As IServiceProvider)
  overridden: Hybrid.Core.Modules.HybridModule.UseModule(System.IServiceProvider)
  overload: Hybrid.Zero.Authorization.SecurityModuleBase`19.UseModule*
  nameWithType.vb: SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey).UseModule(IServiceProvider)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey).UseModule(System.IServiceProvider)
references:
- uid: Hybrid.Zero.Authorization
  commentId: N:Hybrid.Zero.Authorization
  name: Hybrid.Zero.Authorization
  nameWithType: Hybrid.Zero.Authorization
  fullName: Hybrid.Zero.Authorization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hybrid.Core.Modules.HybridModule
  commentId: T:Hybrid.Core.Modules.HybridModule
  parent: Hybrid.Core.Modules
  name: HybridModule
  nameWithType: HybridModule
  fullName: Hybrid.Core.Modules.HybridModule
- uid: Hybrid.Core.Modules.HybridModule.Order
  commentId: P:Hybrid.Core.Modules.HybridModule.Order
  parent: Hybrid.Core.Modules.HybridModule
  name: Order
  nameWithType: HybridModule.Order
  fullName: Hybrid.Core.Modules.HybridModule.Order
- uid: Hybrid.Core.Modules.HybridModule.IsEnabled
  commentId: P:Hybrid.Core.Modules.HybridModule.IsEnabled
  parent: Hybrid.Core.Modules.HybridModule
  name: IsEnabled
  nameWithType: HybridModule.IsEnabled
  fullName: Hybrid.Core.Modules.HybridModule.IsEnabled
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  name: CastTo(Type)
  nameWithType: ObjectExtensions.CastTo(Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  name: CastTo<T>(T)
  nameWithType: ObjectExtensions.CastTo<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(T)
  name.vb: CastTo(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>[])
  nameWithType: ObjectExtensions.IsIn<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>[])
  nameWithType.vb: ObjectExtensions.IsIn(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)())
  name.vb: IsIn(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    nameWithType: ObjectExtensions.IsIn<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    nameWithType: ObjectExtensions.IsIn(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: ObjectExtensions.ToDynamic()
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>()
  nameWithType: ObjectExtensions.DeepClone<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>()
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))()
  name.vb: DeepClone(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    nameWithType: ObjectExtensions.DeepClone<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    nameWithType: ObjectExtensions.DeepClone(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}},System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(Func<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(Func<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(System.Func<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(Func(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(System.Func(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), System.Boolean), System.String)
  name.vb: Required(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(Func(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    nameWithType: ParameterCheckExtensions.Required<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    nameWithType: ParameterCheckExtensions.Required(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}},System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TException>(Func<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TException>(Func<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TException>(System.Func<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TException)(Func(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TException)(System.Func(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), System.Boolean), System.String)
  name.vb: Required(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TException)(Func(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TException>
    nameWithType: ParameterCheckExtensions.Required<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TException)
    nameWithType: ParameterCheckExtensions.Required(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  name: CheckNotNull<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(System.String)
  name.vb: CheckNotNull(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    nameWithType: ParameterCheckExtensions.CheckNotNull<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}},System.Action{System.Exception},System.Action{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(Action<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>, Action<Exception>, Action<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>)
  nameWithType: TryCatchExtensions.TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(Action<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>, Action<Exception>, Action<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(System.Action<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>, System.Action<System.Exception>, System.Action<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(Action(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)), Action(Of Exception), Action(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(System.Action(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)), System.Action(Of System.Exception), System.Action(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)))
  name.vb: TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(Action(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)), Action(Of Exception), Action(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    nameWithType: TryCatchExtensions.TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    nameWithType: TryCatchExtensions.TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  name: TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(Action<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(Action<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(System.Action<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(Action(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(System.Action(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)), System.Action(Of System.Exception))
  name.vb: TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(Action(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    nameWithType: TryCatchExtensions.TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    nameWithType: TryCatchExtensions.TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}},{TResult}},System.Action{System.Exception},System.Action{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>(Func<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>, Action<Exception>, Action<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>)
  nameWithType: TryCatchExtensions.TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>(Func<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>, Action<Exception>, Action<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>(System.Func<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>, System.Action<System.Exception>, System.Action<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)(Func(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult), Action(Of Exception), Action(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)(System.Func(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult), System.Action(Of System.Exception), System.Action(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)))
  name.vb: TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)(Func(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult), Action(Of Exception), Action(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>
    nameWithType: TryCatchExtensions.TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}},{TResult}},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  name: TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>(Func<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>(Func<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>(System.Func<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)(Func(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)(System.Func(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)(Func(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>
    nameWithType: TryCatchExtensions.TryCatch<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}},System.Action{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  name: TryFinally<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(Action<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>, Action<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>)
  nameWithType: TryCatchExtensions.TryFinally<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(Action<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>, Action<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(System.Action<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>, System.Action<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(Action(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)), Action(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(System.Action(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)), System.Action(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)))
  name.vb: TryFinally(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(Action(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)), Action(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    nameWithType: TryCatchExtensions.TryFinally<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    nameWithType: TryCatchExtensions.TryFinally(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  parent: Hybrid.Json.JsonExtensions
  definition: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  name: ToJsonString(Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  name: MapTo<TTarget>()
  nameWithType: MapperExtensions.MapTo<TTarget>()
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>()
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)()
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)()
  name.vb: MapTo(Of TTarget)()
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TTarget>(TTarget)
  nameWithType: MapperExtensions.MapTo<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TTarget>(TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TTarget>(TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TTarget)(TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TTarget)(TTarget)
  name.vb: MapTo(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TTarget)(TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TTarget>
    nameWithType: MapperExtensions.MapTo<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TTarget)
    nameWithType: MapperExtensions.MapTo(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  name: Locking(Action)
  nameWithType: LockExtensions.Locking(Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  name: Locking<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(Action<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>)
  nameWithType: LockExtensions.Locking<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(Action<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>(System.Action<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>)
  nameWithType.vb: LockExtensions.Locking(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(Action(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(System.Action(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)))
  name.vb: Locking(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))(Action(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey)))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    nameWithType: LockExtensions.Locking<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    nameWithType: LockExtensions.Locking(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  name: Locking<TResult>(Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Zero.Authorization.SecurityModuleBase{{TSecurityManager},{TFunctionAuthorization},{TFunctionAuthCache},{TDataAuthCache},{TModuleHandler},{TFunction},{TFunctionInputDto},{TEntityInfo},{TEntityInfoInputDto},{TModule},{TModuleInputDto},{TModuleKey},{TModuleFunction},{TModuleRole},{TModuleUser},{TEntityRole},{TEntityRoleInputDto},{TRoleKey},{TUserKey}},{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  name: Locking<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>(Func<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>)
  nameWithType: LockExtensions.Locking<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>(Func<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>(System.Func<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)(Func(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)(System.Func(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult))
  name.vb: Locking(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)(Func(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>
    nameWithType: LockExtensions.Locking<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)
    nameWithType: LockExtensions.Locking(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Zero.Authorization.SecurityModuleBase`19
    name: SecurityModuleBase
    nameWithType: SecurityModuleBase
    fullName: Hybrid.Zero.Authorization.SecurityModuleBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSecurityManager
    nameWithType: TSecurityManager
    fullName: TSecurityManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthorization
    nameWithType: TFunctionAuthorization
    fullName: TFunctionAuthorization
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionAuthCache
    nameWithType: TFunctionAuthCache
    fullName: TFunctionAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDataAuthCache
    nameWithType: TDataAuthCache
    fullName: TDataAuthCache
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleHandler
    nameWithType: TModuleHandler
    fullName: TModuleHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunction
    nameWithType: TFunction
    fullName: TFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TFunctionInputDto
    nameWithType: TFunctionInputDto
    fullName: TFunctionInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfo
    nameWithType: TEntityInfo
    fullName: TEntityInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityInfoInputDto
    nameWithType: TEntityInfoInputDto
    fullName: TEntityInfoInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModule
    nameWithType: TModule
    fullName: TModule
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleInputDto
    nameWithType: TModuleInputDto
    fullName: TModuleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleKey
    nameWithType: TModuleKey
    fullName: TModuleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleFunction
    nameWithType: TModuleFunction
    fullName: TModuleFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleRole
    nameWithType: TModuleRole
    fullName: TModuleRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModuleUser
    nameWithType: TModuleUser
    fullName: TModuleUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRole
    nameWithType: TEntityRole
    fullName: TEntityRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntityRoleInputDto
    nameWithType: TEntityRoleInputDto
    fullName: TEntityRoleInputDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleKey
    nameWithType: TRoleKey
    fullName: TRoleKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserKey
    nameWithType: TUserKey
    fullName: TUserKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey>()
  nameWithType: EntityExtensions.CheckICreatedTime<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey>()
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey>()
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey)()
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey)()
  name.vb: CheckICreatedTime(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey)()
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckICreationAudited<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckIUpdateAudited<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey), TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Core.Modules
  commentId: N:Hybrid.Core.Modules
  name: Hybrid.Core.Modules
  nameWithType: Hybrid.Core.Modules
  fullName: Hybrid.Core.Modules
- uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  isExternal: true
  name: CastTo(Object, Type)
  nameWithType: ObjectExtensions.CastTo(Object, Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object, System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions
  commentId: T:Hybrid.Extensions.ObjectExtensions
  parent: Hybrid.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Hybrid.Extensions.ObjectExtensions
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  isExternal: true
  name: CastTo<T>(Object, T)
  nameWithType: ObjectExtensions.CastTo<T>(Object, T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object, T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object, T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object, T)
  name.vb: CastTo(Of T)(Object, T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<T>(T, T[])
  nameWithType: ObjectExtensions.IsIn<T>(T, T[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>(T, T[])
  nameWithType.vb: ObjectExtensions.IsIn(Of T)(T, T())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)(T, T())
  name.vb: IsIn(Of T)(T, T())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn<T>
    nameWithType: ObjectExtensions.IsIn<T>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn(Of T)
    nameWithType: ObjectExtensions.IsIn(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: ObjectExtensions.ToDynamic(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T>
    nameWithType: ParameterCheckExtensions.Required<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T)
    nameWithType: ParameterCheckExtensions.Required(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions
  commentId: T:Hybrid.Extensions.ParameterCheckExtensions
  parent: Hybrid.Extensions
  name: ParameterCheckExtensions
  nameWithType: ParameterCheckExtensions
  fullName: Hybrid.Extensions.ParameterCheckExtensions
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T, TException>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T, TException>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T, TException)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T, TException)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T, TException>
    nameWithType: ParameterCheckExtensions.Required<T, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T, TException)
    nameWithType: ParameterCheckExtensions.Required(Of T, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  isExternal: true
  name: CheckNotNull<T>(T, String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<T>(T, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>(T, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of T)(T, String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull<T>
    nameWithType: ParameterCheckExtensions.CheckNotNull<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions
  commentId: T:Hybrid.Extensions.TryCatchExtensions
  parent: Hybrid.Extensions
  name: TryCatchExtensions
  nameWithType: TryCatchExtensions
  fullName: Hybrid.Extensions.TryCatchExtensions
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  isExternal: true
  name: TryFinally<T>(T, Action<T>, Action<T>)
  nameWithType: TryCatchExtensions.TryFinally<T>(T, Action<T>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>(T, System.Action<T>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of T)(T, Action(Of T), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)(T, System.Action(Of T), System.Action(Of T))
  name.vb: TryFinally(Of T)(T, Action(Of T), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally<T>
    nameWithType: TryCatchExtensions.TryFinally<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally(Of T)
    nameWithType: TryCatchExtensions.TryFinally(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  isExternal: true
  name: ToJsonString(Object, Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Object, Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Object, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions
  commentId: T:Hybrid.Json.JsonExtensions
  parent: Hybrid.Json
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: Hybrid.Json.JsonExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  isExternal: true
  name: MapTo<TTarget>(Object)
  nameWithType: MapperExtensions.MapTo<TTarget>(Object)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>(System.Object)
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)(Object)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)(System.Object)
  name.vb: MapTo(Of TTarget)(Object)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Mapping.MapperExtensions
  commentId: T:Hybrid.Mapping.MapperExtensions
  parent: Hybrid.Mapping
  name: MapperExtensions
  nameWithType: MapperExtensions
  fullName: Hybrid.Mapping.MapperExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType: MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  name.vb: MapTo(Of TSource, TTarget)(TSource, TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo<TSource, TTarget>
    nameWithType: MapperExtensions.MapTo<TSource, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo(Of TSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TSource, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  isExternal: true
  name: Locking(Object, Action)
  nameWithType: LockExtensions.Locking(Object, Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Object, System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions
  commentId: T:Hybrid.Reflection.LockExtensions
  parent: Hybrid.Reflection
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: Hybrid.Reflection.LockExtensions
- uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  isExternal: true
  name: Locking<T>(T, Action<T>)
  nameWithType: LockExtensions.Locking<T>(T, Action<T>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<T>(T, System.Action<T>)
  nameWithType.vb: LockExtensions.Locking(Of T)(T, Action(Of T))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of T)(T, System.Action(Of T))
  name.vb: Locking(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking<T>
    nameWithType: LockExtensions.Locking<T>
    fullName: Hybrid.Reflection.LockExtensions.Locking<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking(Of T)
    nameWithType: LockExtensions.Locking(Of T)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  isExternal: true
  name: Locking<TResult>(Object, Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Object, Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Object, System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Object, Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Object, System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Object, Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  isExternal: true
  name: Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  nameWithType: LockExtensions.Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>(TSource, System.Func<TSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)(TSource, System.Func(Of TSource, TResult))
  name.vb: Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking<TSource, TResult>
    nameWithType: LockExtensions.Locking<TSource, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking(Of TSource, TResult)
    nameWithType: LockExtensions.Locking(Of TSource, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  name.vb: CheckICreatedTime(Of TEntity, TKey)(TEntity)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime<TEntity, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime(Of TEntity, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions
  commentId: T:Hybrid.Domain.Entities.EntityExtensions
  parent: Hybrid.Domain.Entities
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: Hybrid.Domain.Entities.EntityExtensions
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions
  commentId: N:Hybrid.Extensions
  name: Hybrid.Extensions
  nameWithType: Hybrid.Extensions
  fullName: Hybrid.Extensions
- uid: Hybrid.Json
  commentId: N:Hybrid.Json
  name: Hybrid.Json
  nameWithType: Hybrid.Json
  fullName: Hybrid.Json
- uid: Hybrid.Mapping
  commentId: N:Hybrid.Mapping
  name: Hybrid.Mapping
  nameWithType: Hybrid.Mapping
  fullName: Hybrid.Mapping
- uid: Hybrid.Reflection
  commentId: N:Hybrid.Reflection
  name: Hybrid.Reflection
  nameWithType: Hybrid.Reflection
  fullName: Hybrid.Reflection
- uid: Hybrid.Domain.Entities
  commentId: N:Hybrid.Domain.Entities
  name: Hybrid.Domain.Entities
  nameWithType: Hybrid.Domain.Entities
  fullName: Hybrid.Domain.Entities
- uid: Hybrid.Core.Modules.HybridModule.Level
  commentId: P:Hybrid.Core.Modules.HybridModule.Level
  parent: Hybrid.Core.Modules.HybridModule
  name: Level
  nameWithType: HybridModule.Level
  fullName: Hybrid.Core.Modules.HybridModule.Level
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.Level*
  commentId: Overload:Hybrid.Zero.Authorization.SecurityModuleBase`19.Level
  name: Level
  nameWithType: SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>.Level
  fullName: Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>.Level
  nameWithType.vb: SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey).Level
  fullName.vb: Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey).Level
- uid: Hybrid.Core.Modules.ModuleLevel
  commentId: T:Hybrid.Core.Modules.ModuleLevel
  parent: Hybrid.Core.Modules
  name: ModuleLevel
  nameWithType: ModuleLevel
  fullName: Hybrid.Core.Modules.ModuleLevel
- uid: Hybrid.Core.Modules.HybridModule.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Hybrid.Core.Modules.HybridModule.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  parent: Hybrid.Core.Modules.HybridModule
  isExternal: true
  name: AddServices(IServiceCollection)
  nameWithType: HybridModule.AddServices(IServiceCollection)
  fullName: Hybrid.Core.Modules.HybridModule.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  spec.csharp:
  - uid: Hybrid.Core.Modules.HybridModule.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: AddServices
    nameWithType: HybridModule.AddServices
    fullName: Hybrid.Core.Modules.HybridModule.AddServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Core.Modules.HybridModule.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
    name: AddServices
    nameWithType: HybridModule.AddServices
    fullName: Hybrid.Core.Modules.HybridModule.AddServices
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.AddServices*
  commentId: Overload:Hybrid.Zero.Authorization.SecurityModuleBase`19.AddServices
  name: AddServices
  nameWithType: SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>.AddServices
  fullName: Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>.AddServices
  nameWithType.vb: SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey).AddServices
  fullName.vb: Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey).AddServices
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Hybrid.Core.Modules.HybridModule.UseModule(System.IServiceProvider)
  commentId: M:Hybrid.Core.Modules.HybridModule.UseModule(System.IServiceProvider)
  parent: Hybrid.Core.Modules.HybridModule
  isExternal: true
  name: UseModule(IServiceProvider)
  nameWithType: HybridModule.UseModule(IServiceProvider)
  fullName: Hybrid.Core.Modules.HybridModule.UseModule(System.IServiceProvider)
  spec.csharp:
  - uid: Hybrid.Core.Modules.HybridModule.UseModule(System.IServiceProvider)
    name: UseModule
    nameWithType: HybridModule.UseModule
    fullName: Hybrid.Core.Modules.HybridModule.UseModule
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Core.Modules.HybridModule.UseModule(System.IServiceProvider)
    name: UseModule
    nameWithType: HybridModule.UseModule
    fullName: Hybrid.Core.Modules.HybridModule.UseModule
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Zero.Authorization.SecurityModuleBase`19.UseModule*
  commentId: Overload:Hybrid.Zero.Authorization.SecurityModuleBase`19.UseModule
  name: UseModule
  nameWithType: SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>.UseModule
  fullName: Hybrid.Zero.Authorization.SecurityModuleBase<TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey>.UseModule
  nameWithType.vb: SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey).UseModule
  fullName.vb: Hybrid.Zero.Authorization.SecurityModuleBase(Of TSecurityManager, TFunctionAuthorization, TFunctionAuthCache, TDataAuthCache, TModuleHandler, TFunction, TFunctionInputDto, TEntityInfo, TEntityInfoInputDto, TModule, TModuleInputDto, TModuleKey, TModuleFunction, TModuleRole, TModuleUser, TEntityRole, TEntityRoleInputDto, TRoleKey, TUserKey).UseModule
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
