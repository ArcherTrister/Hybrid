### YamlMime:ManagedReference
items:
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  commentId: T:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  id: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  parent: Hybrid.Quartz.Dashboard.Models.Dtos
  children:
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.#ctor(Quartz.IDailyTimeIntervalTrigger,Quartz.ICalendar)
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatInterval
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatIntervalUnit
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimesTriggered
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimeZone
  langs:
  - csharp
  - vb
  name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  type: Class
  source:
    remote:
      path: src/Hybrid.Quartz/Dashboard/Models/Dtos/TriggerDetailDto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: DailyTimeIntervalTriggerDetailDto
    path: ../src/Hybrid.Quartz/Dashboard/Models/Dtos/TriggerDetailDto.cs
    startLine: 103
  assemblies:
  - Hybrid.Quartz
  namespace: Hybrid.Quartz.Dashboard.Models.Dtos
  syntax:
    content: 'public class DailyTimeIntervalTriggerDetailDto : TriggerDetailDto'
    content.vb: >-
      Public Class DailyTimeIntervalTriggerDetailDto
          Inherits TriggerDetailDto
  inheritance:
  - System.Object
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto
  inheritedMembers:
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Name
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Group
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.TriggerType
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Description
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.CalendarName
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Priority
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.StartTimeUtc
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.EndTimeUtc
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.NextFireTimes
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Create(Quartz.ITrigger,Quartz.ICalendar)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto[])
  - System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto,System.Boolean},System.String)
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto,System.Boolean},System.String)
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto},System.Action{System.Exception},System.Action{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto})
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto},System.Action{System.Exception})
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto})
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto,{TResult}},System.Action{System.Exception})
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto},System.Action{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto})
  - System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  - System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto,{TResult}})
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.#ctor(Quartz.IDailyTimeIntervalTrigger,Quartz.ICalendar)
  commentId: M:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.#ctor(Quartz.IDailyTimeIntervalTrigger,Quartz.ICalendar)
  id: '#ctor(Quartz.IDailyTimeIntervalTrigger,Quartz.ICalendar)'
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  langs:
  - csharp
  - vb
  name: DailyTimeIntervalTriggerDetailDto(IDailyTimeIntervalTrigger, ICalendar)
  nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.DailyTimeIntervalTriggerDetailDto(IDailyTimeIntervalTrigger, ICalendar)
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.DailyTimeIntervalTriggerDetailDto(Quartz.IDailyTimeIntervalTrigger, Quartz.ICalendar)
  type: Constructor
  source:
    remote:
      path: src/Hybrid.Quartz/Dashboard/Models/Dtos/TriggerDetailDto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: .ctor
    path: ../src/Hybrid.Quartz/Dashboard/Models/Dtos/TriggerDetailDto.cs
    startLine: 105
  assemblies:
  - Hybrid.Quartz
  namespace: Hybrid.Quartz.Dashboard.Models.Dtos
  syntax:
    content: public DailyTimeIntervalTriggerDetailDto(IDailyTimeIntervalTrigger trigger, ICalendar calendar)
    parameters:
    - id: trigger
      type: Quartz.IDailyTimeIntervalTrigger
    - id: calendar
      type: Quartz.ICalendar
    content.vb: Public Sub New(trigger As IDailyTimeIntervalTrigger, calendar As ICalendar)
  overload: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimeZone
  commentId: P:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimeZone
  id: TimeZone
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  langs:
  - csharp
  - vb
  name: TimeZone
  nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimeZone
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimeZone
  type: Property
  source:
    remote:
      path: src/Hybrid.Quartz/Dashboard/Models/Dtos/TriggerDetailDto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: TimeZone
    path: ../src/Hybrid.Quartz/Dashboard/Models/Dtos/TriggerDetailDto.cs
    startLine: 113
  assemblies:
  - Hybrid.Quartz
  namespace: Hybrid.Quartz.Dashboard.Models.Dtos
  syntax:
    content: public TimeZoneDto TimeZone { get; }
    parameters: []
    return:
      type: Hybrid.Quartz.Dashboard.Models.Dtos.TimeZoneDto
    content.vb: Public ReadOnly Property TimeZone As TimeZoneDto
  overload: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimeZone*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatIntervalUnit
  commentId: P:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatIntervalUnit
  id: RepeatIntervalUnit
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  langs:
  - csharp
  - vb
  name: RepeatIntervalUnit
  nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatIntervalUnit
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatIntervalUnit
  type: Property
  source:
    remote:
      path: src/Hybrid.Quartz/Dashboard/Models/Dtos/TriggerDetailDto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: RepeatIntervalUnit
    path: ../src/Hybrid.Quartz/Dashboard/Models/Dtos/TriggerDetailDto.cs
    startLine: 114
  assemblies:
  - Hybrid.Quartz
  namespace: Hybrid.Quartz.Dashboard.Models.Dtos
  syntax:
    content: public IntervalUnit RepeatIntervalUnit { get; }
    parameters: []
    return:
      type: Quartz.IntervalUnit
    content.vb: Public ReadOnly Property RepeatIntervalUnit As IntervalUnit
  overload: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatIntervalUnit*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimesTriggered
  commentId: P:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimesTriggered
  id: TimesTriggered
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  langs:
  - csharp
  - vb
  name: TimesTriggered
  nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimesTriggered
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimesTriggered
  type: Property
  source:
    remote:
      path: src/Hybrid.Quartz/Dashboard/Models/Dtos/TriggerDetailDto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: TimesTriggered
    path: ../src/Hybrid.Quartz/Dashboard/Models/Dtos/TriggerDetailDto.cs
    startLine: 115
  assemblies:
  - Hybrid.Quartz
  namespace: Hybrid.Quartz.Dashboard.Models.Dtos
  syntax:
    content: public int TimesTriggered { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TimesTriggered As Integer
  overload: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimesTriggered*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatInterval
  commentId: P:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatInterval
  id: RepeatInterval
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  langs:
  - csharp
  - vb
  name: RepeatInterval
  nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatInterval
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatInterval
  type: Property
  source:
    remote:
      path: src/Hybrid.Quartz/Dashboard/Models/Dtos/TriggerDetailDto.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: RepeatInterval
    path: ../src/Hybrid.Quartz/Dashboard/Models/Dtos/TriggerDetailDto.cs
    startLine: 116
  assemblies:
  - Hybrid.Quartz
  namespace: Hybrid.Quartz.Dashboard.Models.Dtos
  syntax:
    content: public int RepeatInterval { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property RepeatInterval As Integer
  overload: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatInterval*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Hybrid.Quartz.Dashboard.Models.Dtos
  commentId: N:Hybrid.Quartz.Dashboard.Models.Dtos
  name: Hybrid.Quartz.Dashboard.Models.Dtos
  nameWithType: Hybrid.Quartz.Dashboard.Models.Dtos
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto
  commentId: T:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto
  parent: Hybrid.Quartz.Dashboard.Models.Dtos
  name: TriggerDetailDto
  nameWithType: TriggerDetailDto
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Name
  commentId: P:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Name
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto
  name: Name
  nameWithType: TriggerDetailDto.Name
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Name
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Group
  commentId: P:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Group
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto
  name: Group
  nameWithType: TriggerDetailDto.Group
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Group
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.TriggerType
  commentId: P:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.TriggerType
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto
  name: TriggerType
  nameWithType: TriggerDetailDto.TriggerType
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.TriggerType
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Description
  commentId: P:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Description
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto
  name: Description
  nameWithType: TriggerDetailDto.Description
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Description
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.CalendarName
  commentId: P:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.CalendarName
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto
  name: CalendarName
  nameWithType: TriggerDetailDto.CalendarName
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.CalendarName
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Priority
  commentId: P:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Priority
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto
  name: Priority
  nameWithType: TriggerDetailDto.Priority
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Priority
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.StartTimeUtc
  commentId: P:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.StartTimeUtc
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto
  name: StartTimeUtc
  nameWithType: TriggerDetailDto.StartTimeUtc
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.StartTimeUtc
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.EndTimeUtc
  commentId: P:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.EndTimeUtc
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto
  name: EndTimeUtc
  nameWithType: TriggerDetailDto.EndTimeUtc
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.EndTimeUtc
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.NextFireTimes
  commentId: P:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.NextFireTimes
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto
  name: NextFireTimes
  nameWithType: TriggerDetailDto.NextFireTimes
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.NextFireTimes
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Create(Quartz.ITrigger,Quartz.ICalendar)
  commentId: M:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Create(Quartz.ITrigger,Quartz.ICalendar)
  parent: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto
  isExternal: true
  name: Create(ITrigger, ICalendar)
  nameWithType: TriggerDetailDto.Create(ITrigger, ICalendar)
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Create(Quartz.ITrigger, Quartz.ICalendar)
  spec.csharp:
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Create(Quartz.ITrigger,Quartz.ICalendar)
    name: Create
    nameWithType: TriggerDetailDto.Create
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Quartz.ITrigger
    name: ITrigger
    nameWithType: ITrigger
    fullName: Quartz.ITrigger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Quartz.ICalendar
    name: ICalendar
    nameWithType: ICalendar
    fullName: Quartz.ICalendar
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Create(Quartz.ITrigger,Quartz.ICalendar)
    name: Create
    nameWithType: TriggerDetailDto.Create
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Quartz.ITrigger
    name: ITrigger
    nameWithType: ITrigger
    fullName: Quartz.ITrigger
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Quartz.ICalendar
    name: ICalendar
    nameWithType: ICalendar
    fullName: Quartz.ICalendar
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  name: CastTo(Type)
  nameWithType: ObjectExtensions.CastTo(Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  name: CastTo<T>(T)
  nameWithType: ObjectExtensions.CastTo<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(T)
  name.vb: CastTo(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(TriggerDetailDto.DailyTimeIntervalTriggerDetailDto[])
  nameWithType: ObjectExtensions.IsIn<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(TriggerDetailDto.DailyTimeIntervalTriggerDetailDto[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto[])
  nameWithType.vb: ObjectExtensions.IsIn(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(TriggerDetailDto.DailyTimeIntervalTriggerDetailDto())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto())
  name.vb: IsIn(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(TriggerDetailDto.DailyTimeIntervalTriggerDetailDto())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    nameWithType: ObjectExtensions.IsIn<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    nameWithType: ObjectExtensions.IsIn(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: ObjectExtensions.ToDynamic()
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>()
  nameWithType: ObjectExtensions.DeepClone<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>()
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)()
  name.vb: DeepClone(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    nameWithType: ObjectExtensions.DeepClone<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    nameWithType: ObjectExtensions.DeepClone(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(Func<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(Func<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(System.Func<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(Func(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(System.Func(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, System.Boolean), System.String)
  name.vb: Required(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(Func(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    nameWithType: ParameterCheckExtensions.Required<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    nameWithType: ParameterCheckExtensions.Required(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TException>(Func<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TException>(Func<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TException>(System.Func<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TException)(Func(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TException)(System.Func(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, System.Boolean), System.String)
  name.vb: Required(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TException)(Func(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TException>
    nameWithType: ParameterCheckExtensions.Required<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TException)
    nameWithType: ParameterCheckExtensions.Required(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  name: CheckNotNull<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(System.String)
  name.vb: CheckNotNull(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    nameWithType: ParameterCheckExtensions.CheckNotNull<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto},System.Action{System.Exception},System.Action{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(Action<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>, Action<Exception>, Action<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>)
  nameWithType: TryCatchExtensions.TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(Action<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>, Action<Exception>, Action<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(System.Action<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>, System.Action<System.Exception>, System.Action<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(Action(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto), Action(Of Exception), Action(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(System.Action(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto), System.Action(Of System.Exception), System.Action(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto))
  name.vb: TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(Action(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto), Action(Of Exception), Action(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    nameWithType: TryCatchExtensions.TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    nameWithType: TryCatchExtensions.TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  name: TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(Action<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(Action<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(System.Action<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(Action(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(System.Action(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto), System.Action(Of System.Exception))
  name.vb: TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(Action(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    nameWithType: TryCatchExtensions.TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    nameWithType: TryCatchExtensions.TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>(Func<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>, Action<Exception>, Action<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>)
  nameWithType: TryCatchExtensions.TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>(Func<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>, Action<Exception>, Action<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>(System.Func<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>, System.Action<System.Exception>, System.Action<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)(Func(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult), Action(Of Exception), Action(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)(System.Func(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult), System.Action(Of System.Exception), System.Action(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto))
  name.vb: TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)(Func(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult), Action(Of Exception), Action(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>
    nameWithType: TryCatchExtensions.TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto,{TResult}},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  name: TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>(Func<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>(Func<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>(System.Func<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)(Func(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)(System.Func(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)(Func(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>
    nameWithType: TryCatchExtensions.TryCatch<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto},System.Action{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  name: TryFinally<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(Action<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>, Action<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>)
  nameWithType: TryCatchExtensions.TryFinally<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(Action<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>, Action<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(System.Action<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>, System.Action<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(Action(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto), Action(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(System.Action(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto), System.Action(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto))
  name.vb: TryFinally(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(Action(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto), Action(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    nameWithType: TryCatchExtensions.TryFinally<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    nameWithType: TryCatchExtensions.TryFinally(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  parent: Hybrid.Json.JsonExtensions
  definition: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  name: ToJsonString(Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  name: MapTo<TTarget>()
  nameWithType: MapperExtensions.MapTo<TTarget>()
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>()
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)()
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)()
  name.vb: MapTo(Of TTarget)()
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TTarget>(TTarget)
  nameWithType: MapperExtensions.MapTo<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TTarget>(TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TTarget>(TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TTarget)(TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TTarget)(TTarget)
  name.vb: MapTo(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TTarget)(TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TTarget>
    nameWithType: MapperExtensions.MapTo<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  name: Locking(Action)
  nameWithType: LockExtensions.Locking(Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  name: Locking<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(Action<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>)
  nameWithType: LockExtensions.Locking<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(Action<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>(System.Action<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>)
  nameWithType.vb: LockExtensions.Locking(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(Action(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(System.Action(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto))
  name.vb: Locking(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)(Action(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    nameWithType: LockExtensions.Locking<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    nameWithType: LockExtensions.Locking(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  name: Locking<TResult>(Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto,{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  name: Locking<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>(Func<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>)
  nameWithType: LockExtensions.Locking<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>(Func<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>(System.Func<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)(Func(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)(System.Func(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult))
  name.vb: Locking(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)(Func(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>
    nameWithType: LockExtensions.Locking<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)
    nameWithType: LockExtensions.Locking(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    name: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
    fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey>()
  nameWithType: EntityExtensions.CheckICreatedTime<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey>()
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey>()
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey)()
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey)()
  name.vb: CheckICreatedTime(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey)()
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckICreationAudited<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckIUpdateAudited<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  isExternal: true
  name: CastTo(Object, Type)
  nameWithType: ObjectExtensions.CastTo(Object, Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object, System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions
  commentId: T:Hybrid.Extensions.ObjectExtensions
  parent: Hybrid.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Hybrid.Extensions.ObjectExtensions
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  isExternal: true
  name: CastTo<T>(Object, T)
  nameWithType: ObjectExtensions.CastTo<T>(Object, T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object, T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object, T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object, T)
  name.vb: CastTo(Of T)(Object, T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<T>(T, T[])
  nameWithType: ObjectExtensions.IsIn<T>(T, T[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>(T, T[])
  nameWithType.vb: ObjectExtensions.IsIn(Of T)(T, T())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)(T, T())
  name.vb: IsIn(Of T)(T, T())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn<T>
    nameWithType: ObjectExtensions.IsIn<T>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn(Of T)
    nameWithType: ObjectExtensions.IsIn(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: ObjectExtensions.ToDynamic(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T>
    nameWithType: ParameterCheckExtensions.Required<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T)
    nameWithType: ParameterCheckExtensions.Required(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions
  commentId: T:Hybrid.Extensions.ParameterCheckExtensions
  parent: Hybrid.Extensions
  name: ParameterCheckExtensions
  nameWithType: ParameterCheckExtensions
  fullName: Hybrid.Extensions.ParameterCheckExtensions
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T, TException>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T, TException>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T, TException)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T, TException)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T, TException>
    nameWithType: ParameterCheckExtensions.Required<T, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T, TException)
    nameWithType: ParameterCheckExtensions.Required(Of T, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  isExternal: true
  name: CheckNotNull<T>(T, String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<T>(T, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>(T, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of T)(T, String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull<T>
    nameWithType: ParameterCheckExtensions.CheckNotNull<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions
  commentId: T:Hybrid.Extensions.TryCatchExtensions
  parent: Hybrid.Extensions
  name: TryCatchExtensions
  nameWithType: TryCatchExtensions
  fullName: Hybrid.Extensions.TryCatchExtensions
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  isExternal: true
  name: TryFinally<T>(T, Action<T>, Action<T>)
  nameWithType: TryCatchExtensions.TryFinally<T>(T, Action<T>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>(T, System.Action<T>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of T)(T, Action(Of T), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)(T, System.Action(Of T), System.Action(Of T))
  name.vb: TryFinally(Of T)(T, Action(Of T), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally<T>
    nameWithType: TryCatchExtensions.TryFinally<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally(Of T)
    nameWithType: TryCatchExtensions.TryFinally(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  isExternal: true
  name: ToJsonString(Object, Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Object, Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Object, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions
  commentId: T:Hybrid.Json.JsonExtensions
  parent: Hybrid.Json
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: Hybrid.Json.JsonExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  isExternal: true
  name: MapTo<TTarget>(Object)
  nameWithType: MapperExtensions.MapTo<TTarget>(Object)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>(System.Object)
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)(Object)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)(System.Object)
  name.vb: MapTo(Of TTarget)(Object)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Mapping.MapperExtensions
  commentId: T:Hybrid.Mapping.MapperExtensions
  parent: Hybrid.Mapping
  name: MapperExtensions
  nameWithType: MapperExtensions
  fullName: Hybrid.Mapping.MapperExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType: MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  name.vb: MapTo(Of TSource, TTarget)(TSource, TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo<TSource, TTarget>
    nameWithType: MapperExtensions.MapTo<TSource, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo(Of TSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TSource, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  isExternal: true
  name: Locking(Object, Action)
  nameWithType: LockExtensions.Locking(Object, Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Object, System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions
  commentId: T:Hybrid.Reflection.LockExtensions
  parent: Hybrid.Reflection
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: Hybrid.Reflection.LockExtensions
- uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  isExternal: true
  name: Locking<T>(T, Action<T>)
  nameWithType: LockExtensions.Locking<T>(T, Action<T>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<T>(T, System.Action<T>)
  nameWithType.vb: LockExtensions.Locking(Of T)(T, Action(Of T))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of T)(T, System.Action(Of T))
  name.vb: Locking(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking<T>
    nameWithType: LockExtensions.Locking<T>
    fullName: Hybrid.Reflection.LockExtensions.Locking<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking(Of T)
    nameWithType: LockExtensions.Locking(Of T)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  isExternal: true
  name: Locking<TResult>(Object, Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Object, Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Object, System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Object, Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Object, System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Object, Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  isExternal: true
  name: Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  nameWithType: LockExtensions.Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>(TSource, System.Func<TSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)(TSource, System.Func(Of TSource, TResult))
  name.vb: Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking<TSource, TResult>
    nameWithType: LockExtensions.Locking<TSource, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking(Of TSource, TResult)
    nameWithType: LockExtensions.Locking(Of TSource, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  name.vb: CheckICreatedTime(Of TEntity, TKey)(TEntity)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime<TEntity, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime(Of TEntity, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions
  commentId: T:Hybrid.Domain.Entities.EntityExtensions
  parent: Hybrid.Domain.Entities
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: Hybrid.Domain.Entities.EntityExtensions
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions
  commentId: N:Hybrid.Extensions
  name: Hybrid.Extensions
  nameWithType: Hybrid.Extensions
  fullName: Hybrid.Extensions
- uid: Hybrid.Json
  commentId: N:Hybrid.Json
  name: Hybrid.Json
  nameWithType: Hybrid.Json
  fullName: Hybrid.Json
- uid: Hybrid.Mapping
  commentId: N:Hybrid.Mapping
  name: Hybrid.Mapping
  nameWithType: Hybrid.Mapping
  fullName: Hybrid.Mapping
- uid: Hybrid.Reflection
  commentId: N:Hybrid.Reflection
  name: Hybrid.Reflection
  nameWithType: Hybrid.Reflection
  fullName: Hybrid.Reflection
- uid: Hybrid.Domain.Entities
  commentId: N:Hybrid.Domain.Entities
  name: Hybrid.Domain.Entities
  nameWithType: Hybrid.Domain.Entities
  fullName: Hybrid.Domain.Entities
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.#ctor*
  commentId: Overload:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.#ctor
  name: DailyTimeIntervalTriggerDetailDto
  nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.DailyTimeIntervalTriggerDetailDto
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.DailyTimeIntervalTriggerDetailDto
- uid: Quartz.IDailyTimeIntervalTrigger
  commentId: T:Quartz.IDailyTimeIntervalTrigger
  parent: Quartz
  isExternal: true
  name: IDailyTimeIntervalTrigger
  nameWithType: IDailyTimeIntervalTrigger
  fullName: Quartz.IDailyTimeIntervalTrigger
- uid: Quartz.ICalendar
  commentId: T:Quartz.ICalendar
  parent: Quartz
  isExternal: true
  name: ICalendar
  nameWithType: ICalendar
  fullName: Quartz.ICalendar
- uid: Quartz
  commentId: N:Quartz
  isExternal: true
  name: Quartz
  nameWithType: Quartz
  fullName: Quartz
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimeZone*
  commentId: Overload:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimeZone
  name: TimeZone
  nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimeZone
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimeZone
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TimeZoneDto
  commentId: T:Hybrid.Quartz.Dashboard.Models.Dtos.TimeZoneDto
  parent: Hybrid.Quartz.Dashboard.Models.Dtos
  name: TimeZoneDto
  nameWithType: TimeZoneDto
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TimeZoneDto
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatIntervalUnit*
  commentId: Overload:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatIntervalUnit
  name: RepeatIntervalUnit
  nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatIntervalUnit
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatIntervalUnit
- uid: Quartz.IntervalUnit
  commentId: T:Quartz.IntervalUnit
  parent: Quartz
  isExternal: true
  name: IntervalUnit
  nameWithType: IntervalUnit
  fullName: Quartz.IntervalUnit
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimesTriggered*
  commentId: Overload:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimesTriggered
  name: TimesTriggered
  nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimesTriggered
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.TimesTriggered
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatInterval*
  commentId: Overload:Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatInterval
  name: RepeatInterval
  nameWithType: TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatInterval
  fullName: Hybrid.Quartz.Dashboard.Models.Dtos.TriggerDetailDto.DailyTimeIntervalTriggerDetailDto.RepeatInterval
