### YamlMime:ManagedReference
items:
- uid: Hybrid.Reflection.AssemblyExtensions
  commentId: T:Hybrid.Reflection.AssemblyExtensions
  id: AssemblyExtensions
  parent: Hybrid.Reflection
  children:
  - Hybrid.Reflection.AssemblyExtensions.GetCliVersion
  - Hybrid.Reflection.AssemblyExtensions.GetFileVersion(System.Reflection.Assembly)
  - Hybrid.Reflection.AssemblyExtensions.GetProductVersion(System.Reflection.Assembly)
  langs:
  - csharp
  - vb
  name: AssemblyExtensions
  nameWithType: AssemblyExtensions
  fullName: Hybrid.Reflection.AssemblyExtensions
  type: Class
  source:
    remote:
      path: src/Hybrid/Reflection/AssemblyExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: AssemblyExtensions
    path: ../src/Hybrid/Reflection/AssemblyExtensions.cs
    startLine: 22
  assemblies:
  - Hybrid
  namespace: Hybrid.Reflection
  summary: "\n程序集扩展操作类\n"
  example: []
  syntax:
    content: public static class AssemblyExtensions
    content.vb: Public Module AssemblyExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Reflection.AssemblyExtensions.GetFileVersion(System.Reflection.Assembly)
  commentId: M:Hybrid.Reflection.AssemblyExtensions.GetFileVersion(System.Reflection.Assembly)
  id: GetFileVersion(System.Reflection.Assembly)
  isExtensionMethod: true
  parent: Hybrid.Reflection.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: GetFileVersion(Assembly)
  nameWithType: AssemblyExtensions.GetFileVersion(Assembly)
  fullName: Hybrid.Reflection.AssemblyExtensions.GetFileVersion(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/Hybrid/Reflection/AssemblyExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetFileVersion
    path: ../src/Hybrid/Reflection/AssemblyExtensions.cs
    startLine: 27
  assemblies:
  - Hybrid
  namespace: Hybrid.Reflection
  summary: "\n获取程序集的文件版本\n"
  example: []
  syntax:
    content: public static string GetFileVersion(this Assembly assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetFileVersion(assembly As Assembly) As String
  overload: Hybrid.Reflection.AssemblyExtensions.GetFileVersion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Reflection.AssemblyExtensions.GetProductVersion(System.Reflection.Assembly)
  commentId: M:Hybrid.Reflection.AssemblyExtensions.GetProductVersion(System.Reflection.Assembly)
  id: GetProductVersion(System.Reflection.Assembly)
  isExtensionMethod: true
  parent: Hybrid.Reflection.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: GetProductVersion(Assembly)
  nameWithType: AssemblyExtensions.GetProductVersion(Assembly)
  fullName: Hybrid.Reflection.AssemblyExtensions.GetProductVersion(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: src/Hybrid/Reflection/AssemblyExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetProductVersion
    path: ../src/Hybrid/Reflection/AssemblyExtensions.cs
    startLine: 37
  assemblies:
  - Hybrid
  namespace: Hybrid.Reflection
  summary: "\n获取程序集的产品版本\n"
  example: []
  syntax:
    content: public static string GetProductVersion(this Assembly assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetProductVersion(assembly As Assembly) As String
  overload: Hybrid.Reflection.AssemblyExtensions.GetProductVersion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Reflection.AssemblyExtensions.GetCliVersion
  commentId: M:Hybrid.Reflection.AssemblyExtensions.GetCliVersion
  id: GetCliVersion
  parent: Hybrid.Reflection.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: GetCliVersion()
  nameWithType: AssemblyExtensions.GetCliVersion()
  fullName: Hybrid.Reflection.AssemblyExtensions.GetCliVersion()
  type: Method
  source:
    remote:
      path: src/Hybrid/Reflection/AssemblyExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetCliVersion
    path: ../src/Hybrid/Reflection/AssemblyExtensions.cs
    startLine: 47
  assemblies:
  - Hybrid
  namespace: Hybrid.Reflection
  summary: "\n获取CLI版本号\n"
  example: []
  syntax:
    content: public static string GetCliVersion()
    return:
      type: System.String
    content.vb: Public Shared Function GetCliVersion As String
  overload: Hybrid.Reflection.AssemblyExtensions.GetCliVersion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Hybrid.Reflection
  commentId: N:Hybrid.Reflection
  name: Hybrid.Reflection
  nameWithType: Hybrid.Reflection
  fullName: Hybrid.Reflection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Reflection.AssemblyExtensions.GetFileVersion*
  commentId: Overload:Hybrid.Reflection.AssemblyExtensions.GetFileVersion
  name: GetFileVersion
  nameWithType: AssemblyExtensions.GetFileVersion
  fullName: Hybrid.Reflection.AssemblyExtensions.GetFileVersion
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Hybrid.Reflection.AssemblyExtensions.GetProductVersion*
  commentId: Overload:Hybrid.Reflection.AssemblyExtensions.GetProductVersion
  name: GetProductVersion
  nameWithType: AssemblyExtensions.GetProductVersion
  fullName: Hybrid.Reflection.AssemblyExtensions.GetProductVersion
- uid: Hybrid.Reflection.AssemblyExtensions.GetCliVersion*
  commentId: Overload:Hybrid.Reflection.AssemblyExtensions.GetCliVersion
  name: GetCliVersion
  nameWithType: AssemblyExtensions.GetCliVersion
  fullName: Hybrid.Reflection.AssemblyExtensions.GetCliVersion
