### YamlMime:ManagedReference
items:
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  commentId: T:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  id: ResourceFileLocalizationSource
  parent: Hybrid.Localization.Sources.Resource
  children:
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.#ctor(System.String,System.Resources.ResourceManager)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetAllStrings(System.Boolean)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetAllStrings(System.Globalization.CultureInfo,System.Boolean)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetString(System.String)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetString(System.String,System.Globalization.CultureInfo)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetStringOrNull(System.String,System.Boolean)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetStringOrNull(System.String,System.Globalization.CultureInfo,System.Boolean)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Initialize(Hybrid.Localization.Configuration.ILocalizationConfiguration,System.IServiceProvider)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Name
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ResourceManager
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ReturnGivenNameOrThrowException(System.String,System.Globalization.CultureInfo)
  langs:
  - csharp
  - vb
  name: ResourceFileLocalizationSource
  nameWithType: ResourceFileLocalizationSource
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  type: Class
  source:
    remote:
      path: src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ResourceFileLocalizationSource
    path: ../src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
    startLine: 19
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources.Resource
  summary: "\nThis class is used to simplify to create a localization source that\nuses resource a file.\n"
  example: []
  syntax:
    content: 'public class ResourceFileLocalizationSource : ILocalizationSource'
    content.vb: >-
      Public Class ResourceFileLocalizationSource

          Implements ILocalizationSource
  inheritance:
  - System.Object
  implements:
  - Hybrid.Localization.Sources.ILocalizationSource
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Entity.EntityExtensions.CheckICreatedTime``2
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  - System.Object.OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
  - System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1
  - System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1({T})
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.ObjectExtensions.IsIn``1(Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource[])
  - System.Object.OSharp.Extensions.ObjectExtensions.ToDynamic
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.ObjectExtensions.DeepClone``1
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,System.Boolean},System.String)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,System.Boolean},System.String)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource},System.Action{System.Exception},System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource},System.Action{System.Exception})
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,{TResult}},System.Action{System.Exception})
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource},System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  - System.Object.OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  - System.Object.OSharp.Mapping.MapperExtensions.MapTo``1
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Mapping.MapperExtensions.MapTo``2({TTarget})
  - System.Object.OSharp.Reflection.LockExtensions.Locking(System.Action)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  - System.Object.OSharp.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,{TResult}})
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource[])
  - System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,System.Boolean},System.String)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,System.Boolean},System.String)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource},System.Action{System.Exception},System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource},System.Action{System.Exception})
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,{TResult}},System.Action{System.Exception})
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource},System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  - System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  - System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,{TResult}})
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Localization.Sources.ILocalizationSource.Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(System.String,System.Object[])
  - Hybrid.Localization.Sources.ILocalizationSource.Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(System.String,System.Globalization.CultureInfo,System.Object[])
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Name
  commentId: P:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Name
  id: Name
  parent: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ResourceFileLocalizationSource.Name
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Name
  type: Property
  source:
    remote:
      path: src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Name
    path: ../src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
    startLine: 24
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources.Resource
  summary: "\nUnique Name of the source.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Name*
  implements:
  - Hybrid.Localization.Sources.ILocalizationSource.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ResourceManager
  commentId: P:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ResourceManager
  id: ResourceManager
  parent: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  langs:
  - csharp
  - vb
  name: ResourceManager
  nameWithType: ResourceFileLocalizationSource.ResourceManager
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ResourceManager
  type: Property
  source:
    remote:
      path: src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ResourceManager
    path: ../src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
    startLine: 29
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources.Resource
  summary: "\nReference to the <xref href=\"Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ResourceManager\" data-throw-if-not-resolved=\"false\"></xref> object related to this localization source.\n"
  example: []
  syntax:
    content: public ResourceManager ResourceManager { get; }
    parameters: []
    return:
      type: System.Resources.ResourceManager
    content.vb: Public ReadOnly Property ResourceManager As ResourceManager
  overload: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ResourceManager*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.#ctor(System.String,System.Resources.ResourceManager)
  commentId: M:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.#ctor(System.String,System.Resources.ResourceManager)
  id: '#ctor(System.String,System.Resources.ResourceManager)'
  parent: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  langs:
  - csharp
  - vb
  name: ResourceFileLocalizationSource(String, ResourceManager)
  nameWithType: ResourceFileLocalizationSource.ResourceFileLocalizationSource(String, ResourceManager)
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ResourceFileLocalizationSource(System.String, System.Resources.ResourceManager)
  type: Constructor
  source:
    remote:
      path: src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: .ctor
    path: ../src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
    startLine: 37
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources.Resource
  example: []
  syntax:
    content: public ResourceFileLocalizationSource(string name, ResourceManager resourceManager)
    parameters:
    - id: name
      type: System.String
      description: Unique Name of the source
    - id: resourceManager
      type: System.Resources.ResourceManager
      description: Reference to the <xref href="Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ResourceManager" data-throw-if-not-resolved="false"></xref> object related to this localization source
    content.vb: Public Sub New(name As String, resourceManager As ResourceManager)
  overload: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Initialize(Hybrid.Localization.Configuration.ILocalizationConfiguration,System.IServiceProvider)
  commentId: M:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Initialize(Hybrid.Localization.Configuration.ILocalizationConfiguration,System.IServiceProvider)
  id: Initialize(Hybrid.Localization.Configuration.ILocalizationConfiguration,System.IServiceProvider)
  parent: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  langs:
  - csharp
  - vb
  name: Initialize(ILocalizationConfiguration, IServiceProvider)
  nameWithType: ResourceFileLocalizationSource.Initialize(ILocalizationConfiguration, IServiceProvider)
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Initialize(Hybrid.Localization.Configuration.ILocalizationConfiguration, System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Initialize
    path: ../src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
    startLine: 46
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources.Resource
  summary: "\nThis method is called by Hybrid before first usage.\n"
  example: []
  syntax:
    content: public virtual void Initialize(ILocalizationConfiguration configuration, IServiceProvider provider)
    parameters:
    - id: configuration
      type: Hybrid.Localization.Configuration.ILocalizationConfiguration
    - id: provider
      type: System.IServiceProvider
    content.vb: Public Overridable Sub Initialize(configuration As ILocalizationConfiguration, provider As IServiceProvider)
  overload: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Initialize*
  implements:
  - Hybrid.Localization.Sources.ILocalizationSource.Initialize(Hybrid.Localization.Configuration.ILocalizationConfiguration,System.IServiceProvider)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetString(System.String)
  commentId: M:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetString(System.String)
  id: GetString(System.String)
  parent: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  langs:
  - csharp
  - vb
  name: GetString(String)
  nameWithType: ResourceFileLocalizationSource.GetString(String)
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetString(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetString
    path: ../src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
    startLine: 52
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources.Resource
  syntax:
    content: public virtual string GetString(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
    content.vb: Public Overridable Function GetString(name As String) As String
  overload: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetString*
  implements:
  - Hybrid.Localization.Sources.ILocalizationSource.GetString(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetString(System.String,System.Globalization.CultureInfo)
  commentId: M:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetString(System.String,System.Globalization.CultureInfo)
  id: GetString(System.String,System.Globalization.CultureInfo)
  parent: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  langs:
  - csharp
  - vb
  name: GetString(String, CultureInfo)
  nameWithType: ResourceFileLocalizationSource.GetString(String, CultureInfo)
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetString(System.String, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetString
    path: ../src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
    startLine: 58
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources.Resource
  syntax:
    content: public virtual string GetString(string name, CultureInfo culture)
    parameters:
    - id: name
      type: System.String
    - id: culture
      type: System.Globalization.CultureInfo
    return:
      type: System.String
    content.vb: Public Overridable Function GetString(name As String, culture As CultureInfo) As String
  overload: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetString*
  implements:
  - Hybrid.Localization.Sources.ILocalizationSource.GetString(System.String,System.Globalization.CultureInfo)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetStringOrNull(System.String,System.Boolean)
  commentId: M:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetStringOrNull(System.String,System.Boolean)
  id: GetStringOrNull(System.String,System.Boolean)
  parent: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  langs:
  - csharp
  - vb
  name: GetStringOrNull(String, Boolean)
  nameWithType: ResourceFileLocalizationSource.GetStringOrNull(String, Boolean)
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetStringOrNull(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetStringOrNull
    path: ../src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
    startLine: 64
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources.Resource
  syntax:
    content: public string GetStringOrNull(string name, bool tryDefaults = true)
    parameters:
    - id: name
      type: System.String
    - id: tryDefaults
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Function GetStringOrNull(name As String, tryDefaults As Boolean = True) As String
  overload: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetStringOrNull*
  implements:
  - Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull(System.String,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetStringOrNull(System.String,System.Globalization.CultureInfo,System.Boolean)
  commentId: M:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetStringOrNull(System.String,System.Globalization.CultureInfo,System.Boolean)
  id: GetStringOrNull(System.String,System.Globalization.CultureInfo,System.Boolean)
  parent: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  langs:
  - csharp
  - vb
  name: GetStringOrNull(String, CultureInfo, Boolean)
  nameWithType: ResourceFileLocalizationSource.GetStringOrNull(String, CultureInfo, Boolean)
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetStringOrNull(System.String, System.Globalization.CultureInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetStringOrNull
    path: ../src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
    startLine: 70
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources.Resource
  syntax:
    content: public string GetStringOrNull(string name, CultureInfo culture, bool tryDefaults = true)
    parameters:
    - id: name
      type: System.String
    - id: culture
      type: System.Globalization.CultureInfo
    - id: tryDefaults
      type: System.Boolean
    return:
      type: System.String
    content.vb: Public Function GetStringOrNull(name As String, culture As CultureInfo, tryDefaults As Boolean = True) As String
  overload: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetStringOrNull*
  implements:
  - Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull(System.String,System.Globalization.CultureInfo,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetAllStrings(System.Boolean)
  commentId: M:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetAllStrings(System.Boolean)
  id: GetAllStrings(System.Boolean)
  parent: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  langs:
  - csharp
  - vb
  name: GetAllStrings(Boolean)
  nameWithType: ResourceFileLocalizationSource.GetAllStrings(Boolean)
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetAllStrings(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetAllStrings
    path: ../src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
    startLine: 79
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources.Resource
  summary: "\nGets all strings in current language.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<LocalizedString> GetAllStrings(bool includeDefaults = true)
    parameters:
    - id: includeDefaults
      type: System.Boolean
    return:
      type: System.Collections.Generic.IReadOnlyList{Hybrid.Localization.LocalizedString}
    content.vb: Public Overridable Function GetAllStrings(includeDefaults As Boolean = True) As IReadOnlyList(Of LocalizedString)
  overload: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetAllStrings*
  implements:
  - Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings(System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetAllStrings(System.Globalization.CultureInfo,System.Boolean)
  commentId: M:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetAllStrings(System.Globalization.CultureInfo,System.Boolean)
  id: GetAllStrings(System.Globalization.CultureInfo,System.Boolean)
  parent: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  langs:
  - csharp
  - vb
  name: GetAllStrings(CultureInfo, Boolean)
  nameWithType: ResourceFileLocalizationSource.GetAllStrings(CultureInfo, Boolean)
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetAllStrings(System.Globalization.CultureInfo, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetAllStrings
    path: ../src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
    startLine: 87
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources.Resource
  summary: "\nGets all strings in specified culture.\n"
  example: []
  syntax:
    content: public virtual IReadOnlyList<LocalizedString> GetAllStrings(CultureInfo culture, bool includeDefaults = true)
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
    - id: includeDefaults
      type: System.Boolean
    return:
      type: System.Collections.Generic.IReadOnlyList{Hybrid.Localization.LocalizedString}
    content.vb: Public Overridable Function GetAllStrings(culture As CultureInfo, includeDefaults As Boolean = True) As IReadOnlyList(Of LocalizedString)
  overload: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetAllStrings*
  implements:
  - Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings(System.Globalization.CultureInfo,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ReturnGivenNameOrThrowException(System.String,System.Globalization.CultureInfo)
  commentId: M:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ReturnGivenNameOrThrowException(System.String,System.Globalization.CultureInfo)
  id: ReturnGivenNameOrThrowException(System.String,System.Globalization.CultureInfo)
  parent: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  langs:
  - csharp
  - vb
  name: ReturnGivenNameOrThrowException(String, CultureInfo)
  nameWithType: ResourceFileLocalizationSource.ReturnGivenNameOrThrowException(String, CultureInfo)
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ReturnGivenNameOrThrowException(System.String, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ReturnGivenNameOrThrowException
    path: ../src/Hybrid/Localization/Sources/Resource/ResourceFileLocalizationSource.cs
    startLine: 96
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources.Resource
  syntax:
    content: protected virtual string ReturnGivenNameOrThrowException(string name, CultureInfo culture)
    parameters:
    - id: name
      type: System.String
    - id: culture
      type: System.Globalization.CultureInfo
    return:
      type: System.String
    content.vb: Protected Overridable Function ReturnGivenNameOrThrowException(name As String, culture As CultureInfo) As String
  overload: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ReturnGivenNameOrThrowException*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Hybrid.Localization.Sources.Resource
  commentId: N:Hybrid.Localization.Sources.Resource
  name: Hybrid.Localization.Sources.Resource
  nameWithType: Hybrid.Localization.Sources.Resource
  fullName: Hybrid.Localization.Sources.Resource
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hybrid.Localization.Sources.ILocalizationSource
  commentId: T:Hybrid.Localization.Sources.ILocalizationSource
  parent: Hybrid.Localization.Sources
  name: ILocalizationSource
  nameWithType: ILocalizationSource
  fullName: Hybrid.Localization.Sources.ILocalizationSource
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Entity.EntityExtensions.CheckICreatedTime``2
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  parent: OSharp.Entity.EntityExtensions
  definition: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<ResourceFileLocalizationSource, TKey>()
  nameWithType: EntityExtensions.CheckICreatedTime<ResourceFileLocalizationSource, TKey>()
  fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey>()
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of ResourceFileLocalizationSource, TKey)()
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey)()
  name.vb: CheckICreatedTime(Of ResourceFileLocalizationSource, TKey)()
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime<ResourceFileLocalizationSource, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<ResourceFileLocalizationSource, TKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime(Of ResourceFileLocalizationSource, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of ResourceFileLocalizationSource, TKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: OSharp.Entity.EntityExtensions
  definition: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckICreationAudited<ResourceFileLocalizationSource, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<ResourceFileLocalizationSource, TKey, TUserKey>(IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)(IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<ResourceFileLocalizationSource, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<ResourceFileLocalizationSource, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: OSharp.Entity.EntityExtensions
  definition: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckIUpdateAudited<ResourceFileLocalizationSource, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<ResourceFileLocalizationSource, TKey, TUserKey>(IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)(IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<ResourceFileLocalizationSource, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<ResourceFileLocalizationSource, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  name: CastTo(Type)
  nameWithType: ObjectExtensions.CastTo(Type)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1({T})
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  name: CastTo<T>(T)
  nameWithType: ObjectExtensions.CastTo<T>(T)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>(T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(T)
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)(T)
  name.vb: CastTo(Of T)(T)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.ObjectExtensions.IsIn``1(Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource[])
  commentId: M:OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<ResourceFileLocalizationSource>(ResourceFileLocalizationSource[])
  nameWithType: ObjectExtensions.IsIn<ResourceFileLocalizationSource>(ResourceFileLocalizationSource[])
  fullName: OSharp.Extensions.ObjectExtensions.IsIn<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>(Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource[])
  nameWithType.vb: ObjectExtensions.IsIn(Of ResourceFileLocalizationSource)(ResourceFileLocalizationSource())
  fullName.vb: OSharp.Extensions.ObjectExtensions.IsIn(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)(Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource())
  name.vb: IsIn(Of ResourceFileLocalizationSource)(ResourceFileLocalizationSource())
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn<ResourceFileLocalizationSource>
    nameWithType: ObjectExtensions.IsIn<ResourceFileLocalizationSource>
    fullName: OSharp.Extensions.ObjectExtensions.IsIn<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn(Of ResourceFileLocalizationSource)
    nameWithType: ObjectExtensions.IsIn(Of ResourceFileLocalizationSource)
    fullName: OSharp.Extensions.ObjectExtensions.IsIn(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.ToDynamic
  commentId: M:OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: ObjectExtensions.ToDynamic()
  fullName: OSharp.Extensions.ObjectExtensions.ToDynamic()
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.ObjectExtensions.DeepClone``1
  commentId: M:OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<ResourceFileLocalizationSource>()
  nameWithType: ObjectExtensions.DeepClone<ResourceFileLocalizationSource>()
  fullName: OSharp.Extensions.ObjectExtensions.DeepClone<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of ResourceFileLocalizationSource)()
  fullName.vb: OSharp.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)()
  name.vb: DeepClone(Of ResourceFileLocalizationSource)()
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone<ResourceFileLocalizationSource>
    nameWithType: ObjectExtensions.DeepClone<ResourceFileLocalizationSource>
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone(Of ResourceFileLocalizationSource)
    nameWithType: ObjectExtensions.DeepClone(Of ResourceFileLocalizationSource)
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  parent: OSharp.Extensions.ParameterCheckExtensions
  definition: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<ResourceFileLocalizationSource>(Func<ResourceFileLocalizationSource, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<ResourceFileLocalizationSource>(Func<ResourceFileLocalizationSource, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>(System.Func<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of ResourceFileLocalizationSource)(Func(Of ResourceFileLocalizationSource, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)(System.Func(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, System.Boolean), System.String)
  name.vb: Required(Of ResourceFileLocalizationSource)(Func(Of ResourceFileLocalizationSource, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required<ResourceFileLocalizationSource>
    nameWithType: ParameterCheckExtensions.Required<ResourceFileLocalizationSource>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required(Of ResourceFileLocalizationSource)
    nameWithType: ParameterCheckExtensions.Required(Of ResourceFileLocalizationSource)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  parent: OSharp.Extensions.ParameterCheckExtensions
  definition: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<ResourceFileLocalizationSource, TException>(Func<ResourceFileLocalizationSource, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<ResourceFileLocalizationSource, TException>(Func<ResourceFileLocalizationSource, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TException>(System.Func<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of ResourceFileLocalizationSource, TException)(Func(Of ResourceFileLocalizationSource, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TException)(System.Func(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, System.Boolean), System.String)
  name.vb: Required(Of ResourceFileLocalizationSource, TException)(Func(Of ResourceFileLocalizationSource, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required<ResourceFileLocalizationSource, TException>
    nameWithType: ParameterCheckExtensions.Required<ResourceFileLocalizationSource, TException>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required(Of ResourceFileLocalizationSource, TException)
    nameWithType: ParameterCheckExtensions.Required(Of ResourceFileLocalizationSource, TException)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  parent: OSharp.Extensions.ParameterCheckExtensions
  definition: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  name: CheckNotNull<ResourceFileLocalizationSource>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<ResourceFileLocalizationSource>(String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of ResourceFileLocalizationSource)(String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)(System.String)
  name.vb: CheckNotNull(Of ResourceFileLocalizationSource)(String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull<ResourceFileLocalizationSource>
    nameWithType: ParameterCheckExtensions.CheckNotNull<ResourceFileLocalizationSource>
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull(Of ResourceFileLocalizationSource)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of ResourceFileLocalizationSource)
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource},System.Action{System.Exception},System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>, Action<Exception>, Action<ResourceFileLocalizationSource>)
  nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>, Action<Exception>, Action<ResourceFileLocalizationSource>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>(System.Action<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>, System.Action<System.Exception>, System.Action<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource), Action(Of Exception), Action(Of ResourceFileLocalizationSource))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)(System.Action(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource), System.Action(Of System.Exception), System.Action(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource))
  name.vb: TryCatch(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource), Action(Of Exception), Action(Of ResourceFileLocalizationSource))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<ResourceFileLocalizationSource>
    nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of ResourceFileLocalizationSource)
    nameWithType: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  name: TryCatch<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>(System.Action<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)(System.Action(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource), System.Action(Of System.Exception))
  name.vb: TryCatch(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch<ResourceFileLocalizationSource>
    nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of ResourceFileLocalizationSource)
    nameWithType: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<ResourceFileLocalizationSource, TResult>(Func<ResourceFileLocalizationSource, TResult>, Action<Exception>, Action<ResourceFileLocalizationSource>)
  nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource, TResult>(Func<ResourceFileLocalizationSource, TResult>, Action<Exception>, Action<ResourceFileLocalizationSource>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>(System.Func<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>, System.Action<System.Exception>, System.Action<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource, TResult)(Func(Of ResourceFileLocalizationSource, TResult), Action(Of Exception), Action(Of ResourceFileLocalizationSource))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult)(System.Func(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult), System.Action(Of System.Exception), System.Action(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource))
  name.vb: TryCatch(Of ResourceFileLocalizationSource, TResult)(Func(Of ResourceFileLocalizationSource, TResult), Action(Of Exception), Action(Of ResourceFileLocalizationSource))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<ResourceFileLocalizationSource, TResult>
    nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of ResourceFileLocalizationSource, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,{TResult}},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  name: TryCatch<ResourceFileLocalizationSource, TResult>(Func<ResourceFileLocalizationSource, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource, TResult>(Func<ResourceFileLocalizationSource, TResult>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>(System.Func<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource, TResult)(Func(Of ResourceFileLocalizationSource, TResult), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult)(System.Func(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of ResourceFileLocalizationSource, TResult)(Func(Of ResourceFileLocalizationSource, TResult), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<ResourceFileLocalizationSource, TResult>
    nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of ResourceFileLocalizationSource, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource},System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  name: TryFinally<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>, Action<ResourceFileLocalizationSource>)
  nameWithType: TryCatchExtensions.TryFinally<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>, Action<ResourceFileLocalizationSource>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>(System.Action<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>, System.Action<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource), Action(Of ResourceFileLocalizationSource))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)(System.Action(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource), System.Action(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource))
  name.vb: TryFinally(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource), Action(Of ResourceFileLocalizationSource))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally<ResourceFileLocalizationSource>
    nameWithType: TryCatchExtensions.TryFinally<ResourceFileLocalizationSource>
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally(Of ResourceFileLocalizationSource)
    nameWithType: TryCatchExtensions.TryFinally(Of ResourceFileLocalizationSource)
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  commentId: M:OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  parent: OSharp.Json.JsonExtensions
  definition: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  name: ToJsonString(Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Boolean, Boolean)
  fullName: OSharp.Json.JsonExtensions.ToJsonString(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Mapping.MapperExtensions.MapTo``1
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  parent: OSharp.Mapping.MapperExtensions
  definition: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  name: MapTo<TTarget>()
  nameWithType: MapperExtensions.MapTo<TTarget>()
  fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>()
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)()
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)()
  name.vb: MapTo(Of TTarget)()
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Mapping.MapperExtensions.MapTo``2({TTarget})
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  parent: OSharp.Mapping.MapperExtensions
  definition: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<ResourceFileLocalizationSource, TTarget>(TTarget)
  nameWithType: MapperExtensions.MapTo<ResourceFileLocalizationSource, TTarget>(TTarget)
  fullName: OSharp.Mapping.MapperExtensions.MapTo<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TTarget>(TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of ResourceFileLocalizationSource, TTarget)(TTarget)
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TTarget)(TTarget)
  name.vb: MapTo(Of ResourceFileLocalizationSource, TTarget)(TTarget)
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo<ResourceFileLocalizationSource, TTarget>
    nameWithType: MapperExtensions.MapTo<ResourceFileLocalizationSource, TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo(Of ResourceFileLocalizationSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of ResourceFileLocalizationSource, TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Reflection.LockExtensions.Locking(System.Action)
  commentId: M:OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  name: Locking(Action)
  nameWithType: LockExtensions.Locking(Action)
  fullName: OSharp.Reflection.LockExtensions.Locking(System.Action)
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  name: Locking<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>)
  nameWithType: LockExtensions.Locking<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>)
  fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>(System.Action<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>)
  nameWithType.vb: LockExtensions.Locking(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)(System.Action(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource))
  name.vb: Locking(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking<ResourceFileLocalizationSource>
    nameWithType: LockExtensions.Locking<ResourceFileLocalizationSource>
    fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking(Of ResourceFileLocalizationSource)
    nameWithType: LockExtensions.Locking(Of ResourceFileLocalizationSource)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  name: Locking<TResult>(Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Func<TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<TResult>(System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Func(Of TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of TResult)(System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.OSharp.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,{TResult}})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  name: Locking<ResourceFileLocalizationSource, TResult>(Func<ResourceFileLocalizationSource, TResult>)
  nameWithType: LockExtensions.Locking<ResourceFileLocalizationSource, TResult>(Func<ResourceFileLocalizationSource, TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>(System.Func<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of ResourceFileLocalizationSource, TResult)(Func(Of ResourceFileLocalizationSource, TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult)(System.Func(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult))
  name.vb: Locking(Of ResourceFileLocalizationSource, TResult)(Func(Of ResourceFileLocalizationSource, TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking<ResourceFileLocalizationSource, TResult>
    nameWithType: LockExtensions.Locking<ResourceFileLocalizationSource, TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking(Of ResourceFileLocalizationSource, TResult)
    nameWithType: LockExtensions.Locking(Of ResourceFileLocalizationSource, TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  name: CastTo(Type)
  nameWithType: ObjectExtensions.CastTo(Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  name: CastTo<T>(T)
  nameWithType: ObjectExtensions.CastTo<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(T)
  name.vb: CastTo(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<ResourceFileLocalizationSource>(ResourceFileLocalizationSource[])
  nameWithType: ObjectExtensions.IsIn<ResourceFileLocalizationSource>(ResourceFileLocalizationSource[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>(Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource[])
  nameWithType.vb: ObjectExtensions.IsIn(Of ResourceFileLocalizationSource)(ResourceFileLocalizationSource())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)(Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource())
  name.vb: IsIn(Of ResourceFileLocalizationSource)(ResourceFileLocalizationSource())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn<ResourceFileLocalizationSource>
    nameWithType: ObjectExtensions.IsIn<ResourceFileLocalizationSource>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn(Of ResourceFileLocalizationSource)
    nameWithType: ObjectExtensions.IsIn(Of ResourceFileLocalizationSource)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: ObjectExtensions.ToDynamic()
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<ResourceFileLocalizationSource>()
  nameWithType: ObjectExtensions.DeepClone<ResourceFileLocalizationSource>()
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of ResourceFileLocalizationSource)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)()
  name.vb: DeepClone(Of ResourceFileLocalizationSource)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone<ResourceFileLocalizationSource>
    nameWithType: ObjectExtensions.DeepClone<ResourceFileLocalizationSource>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone(Of ResourceFileLocalizationSource)
    nameWithType: ObjectExtensions.DeepClone(Of ResourceFileLocalizationSource)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<ResourceFileLocalizationSource>(Func<ResourceFileLocalizationSource, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<ResourceFileLocalizationSource>(Func<ResourceFileLocalizationSource, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>(System.Func<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of ResourceFileLocalizationSource)(Func(Of ResourceFileLocalizationSource, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)(System.Func(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, System.Boolean), System.String)
  name.vb: Required(Of ResourceFileLocalizationSource)(Func(Of ResourceFileLocalizationSource, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required<ResourceFileLocalizationSource>
    nameWithType: ParameterCheckExtensions.Required<ResourceFileLocalizationSource>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required(Of ResourceFileLocalizationSource)
    nameWithType: ParameterCheckExtensions.Required(Of ResourceFileLocalizationSource)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<ResourceFileLocalizationSource, TException>(Func<ResourceFileLocalizationSource, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<ResourceFileLocalizationSource, TException>(Func<ResourceFileLocalizationSource, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TException>(System.Func<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of ResourceFileLocalizationSource, TException)(Func(Of ResourceFileLocalizationSource, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TException)(System.Func(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, System.Boolean), System.String)
  name.vb: Required(Of ResourceFileLocalizationSource, TException)(Func(Of ResourceFileLocalizationSource, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required<ResourceFileLocalizationSource, TException>
    nameWithType: ParameterCheckExtensions.Required<ResourceFileLocalizationSource, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required(Of ResourceFileLocalizationSource, TException)
    nameWithType: ParameterCheckExtensions.Required(Of ResourceFileLocalizationSource, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  name: CheckNotNull<ResourceFileLocalizationSource>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<ResourceFileLocalizationSource>(String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of ResourceFileLocalizationSource)(String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)(System.String)
  name.vb: CheckNotNull(Of ResourceFileLocalizationSource)(String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull<ResourceFileLocalizationSource>
    nameWithType: ParameterCheckExtensions.CheckNotNull<ResourceFileLocalizationSource>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull(Of ResourceFileLocalizationSource)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of ResourceFileLocalizationSource)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource},System.Action{System.Exception},System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>, Action<Exception>, Action<ResourceFileLocalizationSource>)
  nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>, Action<Exception>, Action<ResourceFileLocalizationSource>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>(System.Action<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>, System.Action<System.Exception>, System.Action<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource), Action(Of Exception), Action(Of ResourceFileLocalizationSource))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)(System.Action(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource), System.Action(Of System.Exception), System.Action(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource))
  name.vb: TryCatch(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource), Action(Of Exception), Action(Of ResourceFileLocalizationSource))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<ResourceFileLocalizationSource>
    nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of ResourceFileLocalizationSource)
    nameWithType: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  name: TryCatch<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>(System.Action<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)(System.Action(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource), System.Action(Of System.Exception))
  name.vb: TryCatch(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch<ResourceFileLocalizationSource>
    nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of ResourceFileLocalizationSource)
    nameWithType: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<ResourceFileLocalizationSource, TResult>(Func<ResourceFileLocalizationSource, TResult>, Action<Exception>, Action<ResourceFileLocalizationSource>)
  nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource, TResult>(Func<ResourceFileLocalizationSource, TResult>, Action<Exception>, Action<ResourceFileLocalizationSource>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>(System.Func<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>, System.Action<System.Exception>, System.Action<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource, TResult)(Func(Of ResourceFileLocalizationSource, TResult), Action(Of Exception), Action(Of ResourceFileLocalizationSource))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult)(System.Func(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult), System.Action(Of System.Exception), System.Action(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource))
  name.vb: TryCatch(Of ResourceFileLocalizationSource, TResult)(Func(Of ResourceFileLocalizationSource, TResult), Action(Of Exception), Action(Of ResourceFileLocalizationSource))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<ResourceFileLocalizationSource, TResult>
    nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of ResourceFileLocalizationSource, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,{TResult}},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  name: TryCatch<ResourceFileLocalizationSource, TResult>(Func<ResourceFileLocalizationSource, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource, TResult>(Func<ResourceFileLocalizationSource, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>(System.Func<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource, TResult)(Func(Of ResourceFileLocalizationSource, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult)(System.Func(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of ResourceFileLocalizationSource, TResult)(Func(Of ResourceFileLocalizationSource, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<ResourceFileLocalizationSource, TResult>
    nameWithType: TryCatchExtensions.TryCatch<ResourceFileLocalizationSource, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of ResourceFileLocalizationSource, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of ResourceFileLocalizationSource, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource},System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  name: TryFinally<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>, Action<ResourceFileLocalizationSource>)
  nameWithType: TryCatchExtensions.TryFinally<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>, Action<ResourceFileLocalizationSource>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>(System.Action<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>, System.Action<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource), Action(Of ResourceFileLocalizationSource))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)(System.Action(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource), System.Action(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource))
  name.vb: TryFinally(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource), Action(Of ResourceFileLocalizationSource))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally<ResourceFileLocalizationSource>
    nameWithType: TryCatchExtensions.TryFinally<ResourceFileLocalizationSource>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally(Of ResourceFileLocalizationSource)
    nameWithType: TryCatchExtensions.TryFinally(Of ResourceFileLocalizationSource)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  parent: Hybrid.Json.JsonExtensions
  definition: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  name: ToJsonString(Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  name: MapTo<TTarget>()
  nameWithType: MapperExtensions.MapTo<TTarget>()
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>()
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)()
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)()
  name.vb: MapTo(Of TTarget)()
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<ResourceFileLocalizationSource, TTarget>(TTarget)
  nameWithType: MapperExtensions.MapTo<ResourceFileLocalizationSource, TTarget>(TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TTarget>(TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of ResourceFileLocalizationSource, TTarget)(TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TTarget)(TTarget)
  name.vb: MapTo(Of ResourceFileLocalizationSource, TTarget)(TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo<ResourceFileLocalizationSource, TTarget>
    nameWithType: MapperExtensions.MapTo<ResourceFileLocalizationSource, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo(Of ResourceFileLocalizationSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of ResourceFileLocalizationSource, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  name: Locking(Action)
  nameWithType: LockExtensions.Locking(Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  name: Locking<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>)
  nameWithType: LockExtensions.Locking<ResourceFileLocalizationSource>(Action<ResourceFileLocalizationSource>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>(System.Action<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>)
  nameWithType.vb: LockExtensions.Locking(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)(System.Action(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource))
  name.vb: Locking(Of ResourceFileLocalizationSource)(Action(Of ResourceFileLocalizationSource))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking<ResourceFileLocalizationSource>
    nameWithType: LockExtensions.Locking<ResourceFileLocalizationSource>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking(Of ResourceFileLocalizationSource)
    nameWithType: LockExtensions.Locking(Of ResourceFileLocalizationSource)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  name: Locking<TResult>(Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource,{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  name: Locking<ResourceFileLocalizationSource, TResult>(Func<ResourceFileLocalizationSource, TResult>)
  nameWithType: LockExtensions.Locking<ResourceFileLocalizationSource, TResult>(Func<ResourceFileLocalizationSource, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>(System.Func<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of ResourceFileLocalizationSource, TResult)(Func(Of ResourceFileLocalizationSource, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult)(System.Func(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult))
  name.vb: Locking(Of ResourceFileLocalizationSource, TResult)(Func(Of ResourceFileLocalizationSource, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking<ResourceFileLocalizationSource, TResult>
    nameWithType: LockExtensions.Locking<ResourceFileLocalizationSource, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking(Of ResourceFileLocalizationSource, TResult)
    nameWithType: LockExtensions.Locking(Of ResourceFileLocalizationSource, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
    name: ResourceFileLocalizationSource
    nameWithType: ResourceFileLocalizationSource
    fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<ResourceFileLocalizationSource, TKey>()
  nameWithType: EntityExtensions.CheckICreatedTime<ResourceFileLocalizationSource, TKey>()
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey>()
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of ResourceFileLocalizationSource, TKey)()
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey)()
  name.vb: CheckICreatedTime(Of ResourceFileLocalizationSource, TKey)()
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime<ResourceFileLocalizationSource, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<ResourceFileLocalizationSource, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime(Of ResourceFileLocalizationSource, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of ResourceFileLocalizationSource, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckICreationAudited<ResourceFileLocalizationSource, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<ResourceFileLocalizationSource, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<ResourceFileLocalizationSource, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<ResourceFileLocalizationSource, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckIUpdateAudited<ResourceFileLocalizationSource, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<ResourceFileLocalizationSource, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<ResourceFileLocalizationSource, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<ResourceFileLocalizationSource, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of ResourceFileLocalizationSource, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.ILocalizationSource.Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(System.String,System.Object[])
  commentId: M:Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Object[])
  parent: Hybrid.Localization.Sources.LocalizationSourceExtensions
  definition: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Object[])
  name: GetString(String, Object[])
  nameWithType: LocalizationSourceExtensions.GetString(String, Object[])
  fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(System.String, System.Object[])
  nameWithType.vb: LocalizationSourceExtensions.GetString(String, Object())
  fullName.vb: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(System.String, System.Object())
  name.vb: GetString(String, Object())
  spec.csharp:
  - uid: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(System.String,System.Object[])
    name: GetString
    nameWithType: LocalizationSourceExtensions.GetString
    fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(System.String,System.Object[])
    name: GetString
    nameWithType: LocalizationSourceExtensions.GetString
    fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.ILocalizationSource.Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(System.String,System.Globalization.CultureInfo,System.Object[])
  commentId: M:Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Globalization.CultureInfo,System.Object[])
  parent: Hybrid.Localization.Sources.LocalizationSourceExtensions
  definition: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Globalization.CultureInfo,System.Object[])
  name: GetString(String, CultureInfo, Object[])
  nameWithType: LocalizationSourceExtensions.GetString(String, CultureInfo, Object[])
  fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(System.String, System.Globalization.CultureInfo, System.Object[])
  nameWithType.vb: LocalizationSourceExtensions.GetString(String, CultureInfo, Object())
  fullName.vb: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(System.String, System.Globalization.CultureInfo, System.Object())
  name.vb: GetString(String, CultureInfo, Object())
  spec.csharp:
  - uid: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(System.String,System.Globalization.CultureInfo,System.Object[])
    name: GetString
    nameWithType: LocalizationSourceExtensions.GetString
    fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(System.String,System.Globalization.CultureInfo,System.Object[])
    name: GetString
    nameWithType: LocalizationSourceExtensions.GetString
    fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Localization.Sources
  commentId: N:Hybrid.Localization.Sources
  name: Hybrid.Localization.Sources
  nameWithType: Hybrid.Localization.Sources
  fullName: Hybrid.Localization.Sources
- uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  name.vb: CheckICreatedTime(Of TEntity, TKey)(TEntity)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime<TEntity, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime(Of TEntity, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Entity.EntityExtensions
  commentId: T:OSharp.Entity.EntityExtensions
  parent: OSharp.Entity
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: OSharp.Entity.EntityExtensions
- uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  isExternal: true
  name: CastTo(Object, Type)
  nameWithType: ObjectExtensions.CastTo(Object, Type)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo(System.Object, System.Type)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions
  commentId: T:OSharp.Extensions.ObjectExtensions
  parent: OSharp.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: OSharp.Extensions.ObjectExtensions
- uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  isExternal: true
  name: CastTo<T>(Object, T)
  nameWithType: ObjectExtensions.CastTo<T>(Object, T)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>(System.Object, T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object, T)
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)(System.Object, T)
  name.vb: CastTo(Of T)(Object, T)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  commentId: M:OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<T>(T, T[])
  nameWithType: ObjectExtensions.IsIn<T>(T, T[])
  fullName: OSharp.Extensions.ObjectExtensions.IsIn<T>(T, T[])
  nameWithType.vb: ObjectExtensions.IsIn(Of T)(T, T())
  fullName.vb: OSharp.Extensions.ObjectExtensions.IsIn(Of T)(T, T())
  name.vb: IsIn(Of T)(T, T())
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn<T>
    nameWithType: ObjectExtensions.IsIn<T>
    fullName: OSharp.Extensions.ObjectExtensions.IsIn<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn(Of T)
    nameWithType: ObjectExtensions.IsIn(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.IsIn(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  commentId: M:OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: ObjectExtensions.ToDynamic(Object)
  fullName: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  commentId: M:OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: OSharp.Extensions.ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: OSharp.Extensions.ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T>(T, Func<T, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T)(T, Func(Of T, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of T)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T>
    nameWithType: ParameterCheckExtensions.Required<T>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T)
    nameWithType: ParameterCheckExtensions.Required(Of T)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ParameterCheckExtensions
  commentId: T:OSharp.Extensions.ParameterCheckExtensions
  parent: OSharp.Extensions
  name: ParameterCheckExtensions
  nameWithType: ParameterCheckExtensions
  fullName: OSharp.Extensions.ParameterCheckExtensions
- uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T, TException>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T, TException>(T, Func<T, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T, TException>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T, TException)(T, Func(Of T, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of T, TException)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T, TException)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T, TException>
    nameWithType: ParameterCheckExtensions.Required<T, TException>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T, TException>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T, TException)
    nameWithType: ParameterCheckExtensions.Required(Of T, TException)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of T, TException)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  isExternal: true
  name: CheckNotNull<T>(T, String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<T>(T, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<T>(T, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of T)(T, String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull<T>
    nameWithType: ParameterCheckExtensions.CheckNotNull<T>
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of T)
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions
  commentId: T:OSharp.Extensions.TryCatchExtensions
  parent: OSharp.Extensions
  name: TryCatchExtensions
  nameWithType: TryCatchExtensions
  fullName: OSharp.Extensions.TryCatchExtensions
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  isExternal: true
  name: TryFinally<T>(T, Action<T>, Action<T>)
  nameWithType: TryCatchExtensions.TryFinally<T>(T, Action<T>, Action<T>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<T>(T, System.Action<T>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of T)(T, Action(Of T), Action(Of T))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryFinally(Of T)(T, System.Action(Of T), System.Action(Of T))
  name.vb: TryFinally(Of T)(T, Action(Of T), Action(Of T))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally<T>
    nameWithType: TryCatchExtensions.TryFinally<T>
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally(Of T)
    nameWithType: TryCatchExtensions.TryFinally(Of T)
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  commentId: M:OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  isExternal: true
  name: ToJsonString(Object, Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Object, Boolean, Boolean)
  fullName: OSharp.Json.JsonExtensions.ToJsonString(System.Object, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Json.JsonExtensions
  commentId: T:OSharp.Json.JsonExtensions
  parent: OSharp.Json
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: OSharp.Json.JsonExtensions
- uid: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  isExternal: true
  name: MapTo<TTarget>(Object)
  nameWithType: MapperExtensions.MapTo<TTarget>(Object)
  fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>(System.Object)
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)(Object)
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)(System.Object)
  name.vb: MapTo(Of TTarget)(Object)
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Mapping.MapperExtensions
  commentId: T:OSharp.Mapping.MapperExtensions
  parent: OSharp.Mapping
  name: MapperExtensions
  nameWithType: MapperExtensions
  fullName: OSharp.Mapping.MapperExtensions
- uid: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType: MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  fullName: OSharp.Mapping.MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  name.vb: MapTo(Of TSource, TTarget)(TSource, TTarget)
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo<TSource, TTarget>
    nameWithType: MapperExtensions.MapTo<TSource, TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<TSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo(Of TSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TSource, TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  commentId: M:OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  isExternal: true
  name: Locking(Object, Action)
  nameWithType: LockExtensions.Locking(Object, Action)
  fullName: OSharp.Reflection.LockExtensions.Locking(System.Object, System.Action)
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions
  commentId: T:OSharp.Reflection.LockExtensions
  parent: OSharp.Reflection
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: OSharp.Reflection.LockExtensions
- uid: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  isExternal: true
  name: Locking<T>(T, Action<T>)
  nameWithType: LockExtensions.Locking<T>(T, Action<T>)
  fullName: OSharp.Reflection.LockExtensions.Locking<T>(T, System.Action<T>)
  nameWithType.vb: LockExtensions.Locking(Of T)(T, Action(Of T))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of T)(T, System.Action(Of T))
  name.vb: Locking(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking<T>
    nameWithType: LockExtensions.Locking<T>
    fullName: OSharp.Reflection.LockExtensions.Locking<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking(Of T)
    nameWithType: LockExtensions.Locking(Of T)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  isExternal: true
  name: Locking<TResult>(Object, Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Object, Func<TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<TResult>(System.Object, System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Object, Func(Of TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of TResult)(System.Object, System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Object, Func(Of TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  isExternal: true
  name: Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  nameWithType: LockExtensions.Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<TSource, TResult>(TSource, System.Func<TSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of TSource, TResult)(TSource, System.Func(Of TSource, TResult))
  name.vb: Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking<TSource, TResult>
    nameWithType: LockExtensions.Locking<TSource, TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking(Of TSource, TResult)
    nameWithType: LockExtensions.Locking(Of TSource, TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  isExternal: true
  name: CastTo(Object, Type)
  nameWithType: ObjectExtensions.CastTo(Object, Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object, System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions
  commentId: T:Hybrid.Extensions.ObjectExtensions
  parent: Hybrid.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Hybrid.Extensions.ObjectExtensions
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  isExternal: true
  name: CastTo<T>(Object, T)
  nameWithType: ObjectExtensions.CastTo<T>(Object, T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object, T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object, T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object, T)
  name.vb: CastTo(Of T)(Object, T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<T>(T, T[])
  nameWithType: ObjectExtensions.IsIn<T>(T, T[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>(T, T[])
  nameWithType.vb: ObjectExtensions.IsIn(Of T)(T, T())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)(T, T())
  name.vb: IsIn(Of T)(T, T())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn<T>
    nameWithType: ObjectExtensions.IsIn<T>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn(Of T)
    nameWithType: ObjectExtensions.IsIn(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: ObjectExtensions.ToDynamic(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T>
    nameWithType: ParameterCheckExtensions.Required<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T)
    nameWithType: ParameterCheckExtensions.Required(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions
  commentId: T:Hybrid.Extensions.ParameterCheckExtensions
  parent: Hybrid.Extensions
  name: ParameterCheckExtensions
  nameWithType: ParameterCheckExtensions
  fullName: Hybrid.Extensions.ParameterCheckExtensions
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T, TException>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T, TException>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T, TException)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T, TException)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T, TException>
    nameWithType: ParameterCheckExtensions.Required<T, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T, TException)
    nameWithType: ParameterCheckExtensions.Required(Of T, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  isExternal: true
  name: CheckNotNull<T>(T, String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<T>(T, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>(T, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of T)(T, String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull<T>
    nameWithType: ParameterCheckExtensions.CheckNotNull<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions
  commentId: T:Hybrid.Extensions.TryCatchExtensions
  parent: Hybrid.Extensions
  name: TryCatchExtensions
  nameWithType: TryCatchExtensions
  fullName: Hybrid.Extensions.TryCatchExtensions
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  isExternal: true
  name: TryFinally<T>(T, Action<T>, Action<T>)
  nameWithType: TryCatchExtensions.TryFinally<T>(T, Action<T>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>(T, System.Action<T>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of T)(T, Action(Of T), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)(T, System.Action(Of T), System.Action(Of T))
  name.vb: TryFinally(Of T)(T, Action(Of T), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally<T>
    nameWithType: TryCatchExtensions.TryFinally<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally(Of T)
    nameWithType: TryCatchExtensions.TryFinally(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  isExternal: true
  name: ToJsonString(Object, Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Object, Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Object, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions
  commentId: T:Hybrid.Json.JsonExtensions
  parent: Hybrid.Json
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: Hybrid.Json.JsonExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  isExternal: true
  name: MapTo<TTarget>(Object)
  nameWithType: MapperExtensions.MapTo<TTarget>(Object)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>(System.Object)
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)(Object)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)(System.Object)
  name.vb: MapTo(Of TTarget)(Object)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Mapping.MapperExtensions
  commentId: T:Hybrid.Mapping.MapperExtensions
  parent: Hybrid.Mapping
  name: MapperExtensions
  nameWithType: MapperExtensions
  fullName: Hybrid.Mapping.MapperExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType: MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  name.vb: MapTo(Of TSource, TTarget)(TSource, TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo<TSource, TTarget>
    nameWithType: MapperExtensions.MapTo<TSource, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo(Of TSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TSource, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  isExternal: true
  name: Locking(Object, Action)
  nameWithType: LockExtensions.Locking(Object, Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Object, System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions
  commentId: T:Hybrid.Reflection.LockExtensions
  parent: Hybrid.Reflection
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: Hybrid.Reflection.LockExtensions
- uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  isExternal: true
  name: Locking<T>(T, Action<T>)
  nameWithType: LockExtensions.Locking<T>(T, Action<T>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<T>(T, System.Action<T>)
  nameWithType.vb: LockExtensions.Locking(Of T)(T, Action(Of T))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of T)(T, System.Action(Of T))
  name.vb: Locking(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking<T>
    nameWithType: LockExtensions.Locking<T>
    fullName: Hybrid.Reflection.LockExtensions.Locking<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking(Of T)
    nameWithType: LockExtensions.Locking(Of T)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  isExternal: true
  name: Locking<TResult>(Object, Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Object, Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Object, System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Object, Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Object, System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Object, Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  isExternal: true
  name: Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  nameWithType: LockExtensions.Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>(TSource, System.Func<TSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)(TSource, System.Func(Of TSource, TResult))
  name.vb: Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking<TSource, TResult>
    nameWithType: LockExtensions.Locking<TSource, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking(Of TSource, TResult)
    nameWithType: LockExtensions.Locking(Of TSource, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  name.vb: CheckICreatedTime(Of TEntity, TKey)(TEntity)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime<TEntity, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime(Of TEntity, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions
  commentId: T:Hybrid.Domain.Entities.EntityExtensions
  parent: Hybrid.Domain.Entities
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: Hybrid.Domain.Entities.EntityExtensions
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Object[])
  commentId: M:Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Object[])
  isExternal: true
  name: GetString(ILocalizationSource, String, Object[])
  nameWithType: LocalizationSourceExtensions.GetString(ILocalizationSource, String, Object[])
  fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource, System.String, System.Object[])
  nameWithType.vb: LocalizationSourceExtensions.GetString(ILocalizationSource, String, Object())
  fullName.vb: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource, System.String, System.Object())
  name.vb: GetString(ILocalizationSource, String, Object())
  spec.csharp:
  - uid: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Object[])
    name: GetString
    nameWithType: LocalizationSourceExtensions.GetString
    fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Localization.Sources.ILocalizationSource
    name: ILocalizationSource
    nameWithType: ILocalizationSource
    fullName: Hybrid.Localization.Sources.ILocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Object[])
    name: GetString
    nameWithType: LocalizationSourceExtensions.GetString
    fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Localization.Sources.ILocalizationSource
    name: ILocalizationSource
    nameWithType: ILocalizationSource
    fullName: Hybrid.Localization.Sources.ILocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.LocalizationSourceExtensions
  commentId: T:Hybrid.Localization.Sources.LocalizationSourceExtensions
  parent: Hybrid.Localization.Sources
  name: LocalizationSourceExtensions
  nameWithType: LocalizationSourceExtensions
  fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions
- uid: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Globalization.CultureInfo,System.Object[])
  commentId: M:Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Globalization.CultureInfo,System.Object[])
  isExternal: true
  name: GetString(ILocalizationSource, String, CultureInfo, Object[])
  nameWithType: LocalizationSourceExtensions.GetString(ILocalizationSource, String, CultureInfo, Object[])
  fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource, System.String, System.Globalization.CultureInfo, System.Object[])
  nameWithType.vb: LocalizationSourceExtensions.GetString(ILocalizationSource, String, CultureInfo, Object())
  fullName.vb: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource, System.String, System.Globalization.CultureInfo, System.Object())
  name.vb: GetString(ILocalizationSource, String, CultureInfo, Object())
  spec.csharp:
  - uid: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Globalization.CultureInfo,System.Object[])
    name: GetString
    nameWithType: LocalizationSourceExtensions.GetString
    fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Localization.Sources.ILocalizationSource
    name: ILocalizationSource
    nameWithType: ILocalizationSource
    fullName: Hybrid.Localization.Sources.ILocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Globalization.CultureInfo,System.Object[])
    name: GetString
    nameWithType: LocalizationSourceExtensions.GetString
    fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Localization.Sources.ILocalizationSource
    name: ILocalizationSource
    nameWithType: ILocalizationSource
    fullName: Hybrid.Localization.Sources.ILocalizationSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Entity
  commentId: N:OSharp.Entity
  name: OSharp.Entity
  nameWithType: OSharp.Entity
  fullName: OSharp.Entity
- uid: OSharp.Extensions
  commentId: N:OSharp.Extensions
  name: OSharp.Extensions
  nameWithType: OSharp.Extensions
  fullName: OSharp.Extensions
- uid: OSharp.Json
  commentId: N:OSharp.Json
  name: OSharp.Json
  nameWithType: OSharp.Json
  fullName: OSharp.Json
- uid: OSharp.Mapping
  commentId: N:OSharp.Mapping
  name: OSharp.Mapping
  nameWithType: OSharp.Mapping
  fullName: OSharp.Mapping
- uid: OSharp.Reflection
  commentId: N:OSharp.Reflection
  name: OSharp.Reflection
  nameWithType: OSharp.Reflection
  fullName: OSharp.Reflection
- uid: Hybrid.Extensions
  commentId: N:Hybrid.Extensions
  name: Hybrid.Extensions
  nameWithType: Hybrid.Extensions
  fullName: Hybrid.Extensions
- uid: Hybrid.Json
  commentId: N:Hybrid.Json
  name: Hybrid.Json
  nameWithType: Hybrid.Json
  fullName: Hybrid.Json
- uid: Hybrid.Mapping
  commentId: N:Hybrid.Mapping
  name: Hybrid.Mapping
  nameWithType: Hybrid.Mapping
  fullName: Hybrid.Mapping
- uid: Hybrid.Reflection
  commentId: N:Hybrid.Reflection
  name: Hybrid.Reflection
  nameWithType: Hybrid.Reflection
  fullName: Hybrid.Reflection
- uid: Hybrid.Domain.Entities
  commentId: N:Hybrid.Domain.Entities
  name: Hybrid.Domain.Entities
  nameWithType: Hybrid.Domain.Entities
  fullName: Hybrid.Domain.Entities
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Name*
  commentId: Overload:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Name
  name: Name
  nameWithType: ResourceFileLocalizationSource.Name
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Name
- uid: Hybrid.Localization.Sources.ILocalizationSource.Name
  commentId: P:Hybrid.Localization.Sources.ILocalizationSource.Name
  parent: Hybrid.Localization.Sources.ILocalizationSource
  name: Name
  nameWithType: ILocalizationSource.Name
  fullName: Hybrid.Localization.Sources.ILocalizationSource.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ResourceManager
  commentId: P:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ResourceManager
  isExternal: true
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ResourceManager*
  commentId: Overload:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ResourceManager
  name: ResourceManager
  nameWithType: ResourceFileLocalizationSource.ResourceManager
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ResourceManager
- uid: System.Resources.ResourceManager
  commentId: T:System.Resources.ResourceManager
  parent: System.Resources
  isExternal: true
  name: ResourceManager
  nameWithType: ResourceManager
  fullName: System.Resources.ResourceManager
- uid: System.Resources
  commentId: N:System.Resources
  isExternal: true
  name: System.Resources
  nameWithType: System.Resources
  fullName: System.Resources
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.#ctor*
  commentId: Overload:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.#ctor
  name: ResourceFileLocalizationSource
  nameWithType: ResourceFileLocalizationSource.ResourceFileLocalizationSource
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ResourceFileLocalizationSource
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Initialize*
  commentId: Overload:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Initialize
  name: Initialize
  nameWithType: ResourceFileLocalizationSource.Initialize
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.Initialize
- uid: Hybrid.Localization.Sources.ILocalizationSource.Initialize(Hybrid.Localization.Configuration.ILocalizationConfiguration,System.IServiceProvider)
  commentId: M:Hybrid.Localization.Sources.ILocalizationSource.Initialize(Hybrid.Localization.Configuration.ILocalizationConfiguration,System.IServiceProvider)
  parent: Hybrid.Localization.Sources.ILocalizationSource
  isExternal: true
  name: Initialize(ILocalizationConfiguration, IServiceProvider)
  nameWithType: ILocalizationSource.Initialize(ILocalizationConfiguration, IServiceProvider)
  fullName: Hybrid.Localization.Sources.ILocalizationSource.Initialize(Hybrid.Localization.Configuration.ILocalizationConfiguration, System.IServiceProvider)
  spec.csharp:
  - uid: Hybrid.Localization.Sources.ILocalizationSource.Initialize(Hybrid.Localization.Configuration.ILocalizationConfiguration,System.IServiceProvider)
    name: Initialize
    nameWithType: ILocalizationSource.Initialize
    fullName: Hybrid.Localization.Sources.ILocalizationSource.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Localization.Configuration.ILocalizationConfiguration
    name: ILocalizationConfiguration
    nameWithType: ILocalizationConfiguration
    fullName: Hybrid.Localization.Configuration.ILocalizationConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Sources.ILocalizationSource.Initialize(Hybrid.Localization.Configuration.ILocalizationConfiguration,System.IServiceProvider)
    name: Initialize
    nameWithType: ILocalizationSource.Initialize
    fullName: Hybrid.Localization.Sources.ILocalizationSource.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Localization.Configuration.ILocalizationConfiguration
    name: ILocalizationConfiguration
    nameWithType: ILocalizationConfiguration
    fullName: Hybrid.Localization.Configuration.ILocalizationConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Configuration.ILocalizationConfiguration
  commentId: T:Hybrid.Localization.Configuration.ILocalizationConfiguration
  parent: Hybrid.Localization.Configuration
  name: ILocalizationConfiguration
  nameWithType: ILocalizationConfiguration
  fullName: Hybrid.Localization.Configuration.ILocalizationConfiguration
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Hybrid.Localization.Configuration
  commentId: N:Hybrid.Localization.Configuration
  name: Hybrid.Localization.Configuration
  nameWithType: Hybrid.Localization.Configuration
  fullName: Hybrid.Localization.Configuration
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetString*
  commentId: Overload:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetString
  name: GetString
  nameWithType: ResourceFileLocalizationSource.GetString
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetString
- uid: Hybrid.Localization.Sources.ILocalizationSource.GetString(System.String)
  commentId: M:Hybrid.Localization.Sources.ILocalizationSource.GetString(System.String)
  parent: Hybrid.Localization.Sources.ILocalizationSource
  isExternal: true
  name: GetString(String)
  nameWithType: ILocalizationSource.GetString(String)
  fullName: Hybrid.Localization.Sources.ILocalizationSource.GetString(System.String)
  spec.csharp:
  - uid: Hybrid.Localization.Sources.ILocalizationSource.GetString(System.String)
    name: GetString
    nameWithType: ILocalizationSource.GetString
    fullName: Hybrid.Localization.Sources.ILocalizationSource.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Sources.ILocalizationSource.GetString(System.String)
    name: GetString
    nameWithType: ILocalizationSource.GetString
    fullName: Hybrid.Localization.Sources.ILocalizationSource.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.ILocalizationSource.GetString(System.String,System.Globalization.CultureInfo)
  commentId: M:Hybrid.Localization.Sources.ILocalizationSource.GetString(System.String,System.Globalization.CultureInfo)
  parent: Hybrid.Localization.Sources.ILocalizationSource
  isExternal: true
  name: GetString(String, CultureInfo)
  nameWithType: ILocalizationSource.GetString(String, CultureInfo)
  fullName: Hybrid.Localization.Sources.ILocalizationSource.GetString(System.String, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Hybrid.Localization.Sources.ILocalizationSource.GetString(System.String,System.Globalization.CultureInfo)
    name: GetString
    nameWithType: ILocalizationSource.GetString
    fullName: Hybrid.Localization.Sources.ILocalizationSource.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Sources.ILocalizationSource.GetString(System.String,System.Globalization.CultureInfo)
    name: GetString
    nameWithType: ILocalizationSource.GetString
    fullName: Hybrid.Localization.Sources.ILocalizationSource.GetString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetStringOrNull*
  commentId: Overload:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetStringOrNull
  name: GetStringOrNull
  nameWithType: ResourceFileLocalizationSource.GetStringOrNull
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetStringOrNull
- uid: Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull(System.String,System.Boolean)
  commentId: M:Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull(System.String,System.Boolean)
  parent: Hybrid.Localization.Sources.ILocalizationSource
  isExternal: true
  name: GetStringOrNull(String, Boolean)
  nameWithType: ILocalizationSource.GetStringOrNull(String, Boolean)
  fullName: Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull(System.String, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull(System.String,System.Boolean)
    name: GetStringOrNull
    nameWithType: ILocalizationSource.GetStringOrNull
    fullName: Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull(System.String,System.Boolean)
    name: GetStringOrNull
    nameWithType: ILocalizationSource.GetStringOrNull
    fullName: Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull(System.String,System.Globalization.CultureInfo,System.Boolean)
  commentId: M:Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull(System.String,System.Globalization.CultureInfo,System.Boolean)
  parent: Hybrid.Localization.Sources.ILocalizationSource
  isExternal: true
  name: GetStringOrNull(String, CultureInfo, Boolean)
  nameWithType: ILocalizationSource.GetStringOrNull(String, CultureInfo, Boolean)
  fullName: Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull(System.String, System.Globalization.CultureInfo, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull(System.String,System.Globalization.CultureInfo,System.Boolean)
    name: GetStringOrNull
    nameWithType: ILocalizationSource.GetStringOrNull
    fullName: Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull(System.String,System.Globalization.CultureInfo,System.Boolean)
    name: GetStringOrNull
    nameWithType: ILocalizationSource.GetStringOrNull
    fullName: Hybrid.Localization.Sources.ILocalizationSource.GetStringOrNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetAllStrings*
  commentId: Overload:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetAllStrings
  name: GetAllStrings
  nameWithType: ResourceFileLocalizationSource.GetAllStrings
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.GetAllStrings
- uid: Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings(System.Boolean)
  commentId: M:Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings(System.Boolean)
  parent: Hybrid.Localization.Sources.ILocalizationSource
  isExternal: true
  name: GetAllStrings(Boolean)
  nameWithType: ILocalizationSource.GetAllStrings(Boolean)
  fullName: Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings(System.Boolean)
  spec.csharp:
  - uid: Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings(System.Boolean)
    name: GetAllStrings
    nameWithType: ILocalizationSource.GetAllStrings
    fullName: Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings(System.Boolean)
    name: GetAllStrings
    nameWithType: ILocalizationSource.GetAllStrings
    fullName: Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{Hybrid.Localization.LocalizedString}
  commentId: T:System.Collections.Generic.IReadOnlyList{Hybrid.Localization.LocalizedString}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<LocalizedString>
  nameWithType: IReadOnlyList<LocalizedString>
  fullName: System.Collections.Generic.IReadOnlyList<Hybrid.Localization.LocalizedString>
  nameWithType.vb: IReadOnlyList(Of LocalizedString)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Hybrid.Localization.LocalizedString)
  name.vb: IReadOnlyList(Of LocalizedString)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings(System.Globalization.CultureInfo,System.Boolean)
  commentId: M:Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings(System.Globalization.CultureInfo,System.Boolean)
  parent: Hybrid.Localization.Sources.ILocalizationSource
  isExternal: true
  name: GetAllStrings(CultureInfo, Boolean)
  nameWithType: ILocalizationSource.GetAllStrings(CultureInfo, Boolean)
  fullName: Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings(System.Globalization.CultureInfo, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings(System.Globalization.CultureInfo,System.Boolean)
    name: GetAllStrings
    nameWithType: ILocalizationSource.GetAllStrings
    fullName: Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings(System.Globalization.CultureInfo,System.Boolean)
    name: GetAllStrings
    nameWithType: ILocalizationSource.GetAllStrings
    fullName: Hybrid.Localization.Sources.ILocalizationSource.GetAllStrings
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ReturnGivenNameOrThrowException*
  commentId: Overload:Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ReturnGivenNameOrThrowException
  name: ReturnGivenNameOrThrowException
  nameWithType: ResourceFileLocalizationSource.ReturnGivenNameOrThrowException
  fullName: Hybrid.Localization.Sources.Resource.ResourceFileLocalizationSource.ReturnGivenNameOrThrowException
