### YamlMime:ManagedReference
items:
- uid: Hybrid.Localization.LocalizationManagerExtensions
  commentId: T:Hybrid.Localization.LocalizationManagerExtensions
  id: LocalizationManagerExtensions
  parent: Hybrid.Localization
  children:
  - Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager,Hybrid.Localization.LocalizableString)
  - Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager,Hybrid.Localization.LocalizableString,System.Globalization.CultureInfo)
  - Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager,System.String,System.String)
  - Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager,System.String,System.String,System.Globalization.CultureInfo)
  langs:
  - csharp
  - vb
  name: LocalizationManagerExtensions
  nameWithType: LocalizationManagerExtensions
  fullName: Hybrid.Localization.LocalizationManagerExtensions
  type: Class
  source:
    remote:
      path: src/Hybrid/Localization/LocalizationManagerExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: LocalizationManagerExtensions
    path: ../src/Hybrid/Localization/LocalizationManagerExtensions.cs
    startLine: 4
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization
  syntax:
    content: public static class LocalizationManagerExtensions
    content.vb: Public Module LocalizationManagerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager,Hybrid.Localization.LocalizableString)
  commentId: M:Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager,Hybrid.Localization.LocalizableString)
  id: GetString(Hybrid.Localization.ILocalizationManager,Hybrid.Localization.LocalizableString)
  isExtensionMethod: true
  parent: Hybrid.Localization.LocalizationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetString(ILocalizationManager, LocalizableString)
  nameWithType: LocalizationManagerExtensions.GetString(ILocalizationManager, LocalizableString)
  fullName: Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager, Hybrid.Localization.LocalizableString)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/LocalizationManagerExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetString
    path: ../src/Hybrid/Localization/LocalizationManagerExtensions.cs
    startLine: 10
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization
  summary: "\nGets a localized string in current language.\n"
  example: []
  syntax:
    content: public static string GetString(this ILocalizationManager localizationManager, LocalizableString localizableString)
    parameters:
    - id: localizationManager
      type: Hybrid.Localization.ILocalizationManager
    - id: localizableString
      type: Hybrid.Localization.LocalizableString
    return:
      type: System.String
      description: Localized string
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetString(localizationManager As ILocalizationManager, localizableString As LocalizableString) As String
  overload: Hybrid.Localization.LocalizationManagerExtensions.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager,Hybrid.Localization.LocalizableString,System.Globalization.CultureInfo)
  commentId: M:Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager,Hybrid.Localization.LocalizableString,System.Globalization.CultureInfo)
  id: GetString(Hybrid.Localization.ILocalizationManager,Hybrid.Localization.LocalizableString,System.Globalization.CultureInfo)
  isExtensionMethod: true
  parent: Hybrid.Localization.LocalizationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetString(ILocalizationManager, LocalizableString, CultureInfo)
  nameWithType: LocalizationManagerExtensions.GetString(ILocalizationManager, LocalizableString, CultureInfo)
  fullName: Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager, Hybrid.Localization.LocalizableString, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/LocalizationManagerExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetString
    path: ../src/Hybrid/Localization/LocalizationManagerExtensions.cs
    startLine: 19
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization
  summary: "\nGets a localized string in specified language.\n"
  example: []
  syntax:
    content: public static string GetString(this ILocalizationManager localizationManager, LocalizableString localizableString, CultureInfo culture)
    parameters:
    - id: localizationManager
      type: Hybrid.Localization.ILocalizationManager
    - id: localizableString
      type: Hybrid.Localization.LocalizableString
    - id: culture
      type: System.Globalization.CultureInfo
    return:
      type: System.String
      description: Localized string
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetString(localizationManager As ILocalizationManager, localizableString As LocalizableString, culture As CultureInfo) As String
  overload: Hybrid.Localization.LocalizationManagerExtensions.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager,System.String,System.String)
  commentId: M:Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager,System.String,System.String)
  id: GetString(Hybrid.Localization.ILocalizationManager,System.String,System.String)
  isExtensionMethod: true
  parent: Hybrid.Localization.LocalizationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetString(ILocalizationManager, String, String)
  nameWithType: LocalizationManagerExtensions.GetString(ILocalizationManager, String, String)
  fullName: Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/LocalizationManagerExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetString
    path: ../src/Hybrid/Localization/LocalizationManagerExtensions.cs
    startLine: 31
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization
  summary: "\nGets a localized string in current language.\n"
  example: []
  syntax:
    content: public static string GetString(this ILocalizationManager localizationManager, string sourceName, string name)
    parameters:
    - id: localizationManager
      type: Hybrid.Localization.ILocalizationManager
      description: Localization manager instance
    - id: sourceName
      type: System.String
      description: Name of the localization source
    - id: name
      type: System.String
      description: Key name to get localized string
    return:
      type: System.String
      description: Localized string
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetString(localizationManager As ILocalizationManager, sourceName As String, name As String) As String
  overload: Hybrid.Localization.LocalizationManagerExtensions.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager,System.String,System.String,System.Globalization.CultureInfo)
  commentId: M:Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager,System.String,System.String,System.Globalization.CultureInfo)
  id: GetString(Hybrid.Localization.ILocalizationManager,System.String,System.String,System.Globalization.CultureInfo)
  isExtensionMethod: true
  parent: Hybrid.Localization.LocalizationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetString(ILocalizationManager, String, String, CultureInfo)
  nameWithType: LocalizationManagerExtensions.GetString(ILocalizationManager, String, String, CultureInfo)
  fullName: Hybrid.Localization.LocalizationManagerExtensions.GetString(Hybrid.Localization.ILocalizationManager, System.String, System.String, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/LocalizationManagerExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetString
    path: ../src/Hybrid/Localization/LocalizationManagerExtensions.cs
    startLine: 44
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization
  summary: "\nGets a localized string in specified language.\n"
  example: []
  syntax:
    content: public static string GetString(this ILocalizationManager localizationManager, string sourceName, string name, CultureInfo culture)
    parameters:
    - id: localizationManager
      type: Hybrid.Localization.ILocalizationManager
      description: Localization manager instance
    - id: sourceName
      type: System.String
      description: Name of the localization source
    - id: name
      type: System.String
      description: Key name to get localized string
    - id: culture
      type: System.Globalization.CultureInfo
      description: culture
    return:
      type: System.String
      description: Localized string
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetString(localizationManager As ILocalizationManager, sourceName As String, name As String, culture As CultureInfo) As String
  overload: Hybrid.Localization.LocalizationManagerExtensions.GetString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Hybrid.Localization
  commentId: N:Hybrid.Localization
  name: Hybrid.Localization
  nameWithType: Hybrid.Localization
  fullName: Hybrid.Localization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Localization.LocalizationManagerExtensions.GetString*
  commentId: Overload:Hybrid.Localization.LocalizationManagerExtensions.GetString
  name: GetString
  nameWithType: LocalizationManagerExtensions.GetString
  fullName: Hybrid.Localization.LocalizationManagerExtensions.GetString
- uid: Hybrid.Localization.ILocalizationManager
  commentId: T:Hybrid.Localization.ILocalizationManager
  parent: Hybrid.Localization
  name: ILocalizationManager
  nameWithType: ILocalizationManager
  fullName: Hybrid.Localization.ILocalizationManager
- uid: Hybrid.Localization.LocalizableString
  commentId: T:Hybrid.Localization.LocalizableString
  parent: Hybrid.Localization
  name: LocalizableString
  nameWithType: LocalizableString
  fullName: Hybrid.Localization.LocalizableString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
