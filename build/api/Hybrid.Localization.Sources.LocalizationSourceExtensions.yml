### YamlMime:ManagedReference
items:
- uid: Hybrid.Localization.Sources.LocalizationSourceExtensions
  commentId: T:Hybrid.Localization.Sources.LocalizationSourceExtensions
  id: LocalizationSourceExtensions
  parent: Hybrid.Localization.Sources
  children:
  - Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Globalization.CultureInfo,System.Object[])
  - Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Object[])
  langs:
  - csharp
  - vb
  name: LocalizationSourceExtensions
  nameWithType: LocalizationSourceExtensions
  fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions
  type: Class
  source:
    remote:
      path: src/Hybrid/Localization/Sources/LocalizationSourceExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: LocalizationSourceExtensions
    path: ../src/Hybrid/Localization/Sources/LocalizationSourceExtensions.cs
    startLine: 8
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources
  summary: "\nExtension methods for <xref href=\"Hybrid.Localization.Sources.ILocalizationSource\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class LocalizationSourceExtensions
    content.vb: Public Module LocalizationSourceExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Object[])
  commentId: M:Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Object[])
  id: GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Object[])
  isExtensionMethod: true
  parent: Hybrid.Localization.Sources.LocalizationSourceExtensions
  langs:
  - csharp
  - vb
  name: GetString(ILocalizationSource, String, Object[])
  nameWithType: LocalizationSourceExtensions.GetString(ILocalizationSource, String, Object[])
  fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource, System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/Sources/LocalizationSourceExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetString
    path: ../src/Hybrid/Localization/Sources/LocalizationSourceExtensions.cs
    startLine: 17
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources
  summary: "\nGet a localized string by formatting string.\n"
  example: []
  syntax:
    content: public static string GetString(this ILocalizationSource source, string name, params object[] args)
    parameters:
    - id: source
      type: Hybrid.Localization.Sources.ILocalizationSource
      description: Localization source
    - id: name
      type: System.String
      description: Key name
    - id: args
      type: System.Object[]
      description: Format arguments
    return:
      type: System.String
      description: Formatted and localized string
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetString(source As ILocalizationSource, name As String, ParamArray args As Object()) As String
  overload: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString*
  nameWithType.vb: LocalizationSourceExtensions.GetString(ILocalizationSource, String, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource, System.String, System.Object())
  name.vb: GetString(ILocalizationSource, String, Object())
- uid: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Globalization.CultureInfo,System.Object[])
  commentId: M:Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Globalization.CultureInfo,System.Object[])
  id: GetString(Hybrid.Localization.Sources.ILocalizationSource,System.String,System.Globalization.CultureInfo,System.Object[])
  isExtensionMethod: true
  parent: Hybrid.Localization.Sources.LocalizationSourceExtensions
  langs:
  - csharp
  - vb
  name: GetString(ILocalizationSource, String, CultureInfo, Object[])
  nameWithType: LocalizationSourceExtensions.GetString(ILocalizationSource, String, CultureInfo, Object[])
  fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource, System.String, System.Globalization.CultureInfo, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/Sources/LocalizationSourceExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetString
    path: ../src/Hybrid/Localization/Sources/LocalizationSourceExtensions.cs
    startLine: 35
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Sources
  summary: "\nGet a localized string in given language by formatting string.\n"
  example: []
  syntax:
    content: public static string GetString(this ILocalizationSource source, string name, CultureInfo culture, params object[] args)
    parameters:
    - id: source
      type: Hybrid.Localization.Sources.ILocalizationSource
      description: Localization source
    - id: name
      type: System.String
      description: Key name
    - id: culture
      type: System.Globalization.CultureInfo
      description: Culture
    - id: args
      type: System.Object[]
      description: Format arguments
    return:
      type: System.String
      description: Formatted and localized string
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetString(source As ILocalizationSource, name As String, culture As CultureInfo, ParamArray args As Object()) As String
  overload: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString*
  nameWithType.vb: LocalizationSourceExtensions.GetString(ILocalizationSource, String, CultureInfo, Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString(Hybrid.Localization.Sources.ILocalizationSource, System.String, System.Globalization.CultureInfo, System.Object())
  name.vb: GetString(ILocalizationSource, String, CultureInfo, Object())
references:
- uid: Hybrid.Localization.Sources.ILocalizationSource
  commentId: T:Hybrid.Localization.Sources.ILocalizationSource
  parent: Hybrid.Localization.Sources
  name: ILocalizationSource
  nameWithType: ILocalizationSource
  fullName: Hybrid.Localization.Sources.ILocalizationSource
- uid: Hybrid.Localization.Sources
  commentId: N:Hybrid.Localization.Sources
  name: Hybrid.Localization.Sources
  nameWithType: Hybrid.Localization.Sources
  fullName: Hybrid.Localization.Sources
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString*
  commentId: Overload:Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString
  name: GetString
  nameWithType: LocalizationSourceExtensions.GetString
  fullName: Hybrid.Localization.Sources.LocalizationSourceExtensions.GetString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
