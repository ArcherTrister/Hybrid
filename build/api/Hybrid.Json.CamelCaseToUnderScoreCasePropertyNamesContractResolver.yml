### YamlMime:ManagedReference
items:
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  commentId: T:Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  id: CamelCaseToUnderScoreCasePropertyNamesContractResolver
  parent: Hybrid.Json
  children:
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.ResolvePropertyName(System.String)
  langs:
  - csharp
  - vb
  name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
  nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
  fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  type: Class
  source:
    remote:
      path: src/Hybrid/Json/CamelCaseToUnderScoreCasePropertyNamesContractResolver.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    path: ../src/Hybrid/Json/CamelCaseToUnderScoreCasePropertyNamesContractResolver.cs
    startLine: 9
  assemblies:
  - Hybrid
  namespace: Hybrid.Json
  summary: "\n驼峰转下划线(+大写)\n"
  example: []
  syntax:
    content: 'public class CamelCaseToUnderScoreCasePropertyNamesContractResolver : DefaultContractResolver, IContractResolver'
    content.vb: >-
      Public Class CamelCaseToUnderScoreCasePropertyNamesContractResolver

          Inherits DefaultContractResolver

          Implements IContractResolver
  inheritance:
  - System.Object
  - Newtonsoft.Json.Serialization.DefaultContractResolver
  implements:
  - Newtonsoft.Json.Serialization.IContractResolver
  inheritedMembers:
  - Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(System.String)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)
  - Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration
  - Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags
  - Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers
  - Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface
  - Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute
  - Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreIsSpecifiedMembers
  - Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreShouldSerializeMembers
  - Newtonsoft.Json.Serialization.DefaultContractResolver.NamingStrategy
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Entity.EntityExtensions.CheckICreatedTime``2
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  - System.Object.OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
  - System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1
  - System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1({T})
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.ObjectExtensions.IsIn``1(Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver[])
  - System.Object.OSharp.Extensions.ObjectExtensions.ToDynamic
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.ObjectExtensions.DeepClone``1
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,System.Boolean},System.String)
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,System.Boolean},System.String)
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver},System.Action{System.Exception},System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver},System.Action{System.Exception})
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,{TResult}},System.Action{System.Exception})
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver},System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  - System.Object.OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  - System.Object.OSharp.Mapping.MapperExtensions.MapTo``1
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Mapping.MapperExtensions.MapTo``2({TTarget})
  - System.Object.OSharp.Reflection.LockExtensions.Locking(System.Action)
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  - System.Object.OSharp.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,{TResult}})
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver[])
  - System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,System.Boolean},System.String)
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,System.Boolean},System.String)
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver},System.Action{System.Exception},System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver},System.Action{System.Exception})
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,{TResult}},System.Action{System.Exception})
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver},System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  - System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  - System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,{TResult}})
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.ResolvePropertyName(System.String)
  commentId: M:Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.ResolvePropertyName(System.String)
  id: ResolvePropertyName(System.String)
  parent: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  langs:
  - csharp
  - vb
  name: ResolvePropertyName(String)
  nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver.ResolvePropertyName(String)
  fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.ResolvePropertyName(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Json/CamelCaseToUnderScoreCasePropertyNamesContractResolver.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ResolvePropertyName
    path: ../src/Hybrid/Json/CamelCaseToUnderScoreCasePropertyNamesContractResolver.cs
    startLine: 16
  assemblies:
  - Hybrid
  namespace: Hybrid.Json
  summary: "\n\n"
  example: []
  syntax:
    content: protected override string ResolvePropertyName(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overrides Function ResolvePropertyName(propertyName As String) As String
  overridden: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)
  overload: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.ResolvePropertyName*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Hybrid.Json
  commentId: N:Hybrid.Json
  name: Hybrid.Json
  nameWithType: Hybrid.Json
  fullName: Hybrid.Json
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver
  commentId: T:Newtonsoft.Json.Serialization.DefaultContractResolver
  parent: Newtonsoft.Json.Serialization
  isExternal: true
  name: DefaultContractResolver
  nameWithType: DefaultContractResolver
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver
- uid: Newtonsoft.Json.Serialization.IContractResolver
  commentId: T:Newtonsoft.Json.Serialization.IContractResolver
  parent: Newtonsoft.Json.Serialization
  isExternal: true
  name: IContractResolver
  nameWithType: IContractResolver
  fullName: Newtonsoft.Json.Serialization.IContractResolver
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: ResolveContract(Type)
  nameWithType: DefaultContractResolver.ResolveContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)
    name: ResolveContract
    nameWithType: DefaultContractResolver.ResolveContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)
    name: ResolveContract
    nameWithType: DefaultContractResolver.ResolveContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: GetSerializableMembers(Type)
  nameWithType: DefaultContractResolver.GetSerializableMembers(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)
    name: GetSerializableMembers
    nameWithType: DefaultContractResolver.GetSerializableMembers
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)
    name: GetSerializableMembers
    nameWithType: DefaultContractResolver.GetSerializableMembers
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateObjectContract(Type)
  nameWithType: DefaultContractResolver.CreateObjectContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)
    name: CreateObjectContract
    nameWithType: DefaultContractResolver.CreateObjectContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)
    name: CreateObjectContract
    nameWithType: DefaultContractResolver.CreateObjectContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateConstructorParameters(ConstructorInfo, JsonPropertyCollection)
  nameWithType: DefaultContractResolver.CreateConstructorParameters(ConstructorInfo, JsonPropertyCollection)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)
    name: CreateConstructorParameters
    nameWithType: DefaultContractResolver.CreateConstructorParameters
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.Serialization.JsonPropertyCollection
    name: JsonPropertyCollection
    nameWithType: JsonPropertyCollection
    fullName: Newtonsoft.Json.Serialization.JsonPropertyCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo,Newtonsoft.Json.Serialization.JsonPropertyCollection)
    name: CreateConstructorParameters
    nameWithType: DefaultContractResolver.CreateConstructorParameters
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: System.Reflection.ConstructorInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.Serialization.JsonPropertyCollection
    name: JsonPropertyCollection
    nameWithType: JsonPropertyCollection
    fullName: Newtonsoft.Json.Serialization.JsonPropertyCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreatePropertyFromConstructorParameter(JsonProperty, ParameterInfo)
  nameWithType: DefaultContractResolver.CreatePropertyFromConstructorParameter(JsonProperty, ParameterInfo)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)
    name: CreatePropertyFromConstructorParameter
    nameWithType: DefaultContractResolver.CreatePropertyFromConstructorParameter
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Serialization.JsonProperty
    name: JsonProperty
    nameWithType: JsonProperty
    fullName: Newtonsoft.Json.Serialization.JsonProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty,System.Reflection.ParameterInfo)
    name: CreatePropertyFromConstructorParameter
    nameWithType: DefaultContractResolver.CreatePropertyFromConstructorParameter
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Serialization.JsonProperty
    name: JsonProperty
    nameWithType: JsonProperty
    fullName: Newtonsoft.Json.Serialization.JsonProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: ResolveContractConverter(Type)
  nameWithType: DefaultContractResolver.ResolveContractConverter(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)
    name: ResolveContractConverter
    nameWithType: DefaultContractResolver.ResolveContractConverter
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)
    name: ResolveContractConverter
    nameWithType: DefaultContractResolver.ResolveContractConverter
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateDictionaryContract(Type)
  nameWithType: DefaultContractResolver.CreateDictionaryContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)
    name: CreateDictionaryContract
    nameWithType: DefaultContractResolver.CreateDictionaryContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)
    name: CreateDictionaryContract
    nameWithType: DefaultContractResolver.CreateDictionaryContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateArrayContract(Type)
  nameWithType: DefaultContractResolver.CreateArrayContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)
    name: CreateArrayContract
    nameWithType: DefaultContractResolver.CreateArrayContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)
    name: CreateArrayContract
    nameWithType: DefaultContractResolver.CreateArrayContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreatePrimitiveContract(Type)
  nameWithType: DefaultContractResolver.CreatePrimitiveContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)
    name: CreatePrimitiveContract
    nameWithType: DefaultContractResolver.CreatePrimitiveContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)
    name: CreatePrimitiveContract
    nameWithType: DefaultContractResolver.CreatePrimitiveContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateLinqContract(Type)
  nameWithType: DefaultContractResolver.CreateLinqContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)
    name: CreateLinqContract
    nameWithType: DefaultContractResolver.CreateLinqContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)
    name: CreateLinqContract
    nameWithType: DefaultContractResolver.CreateLinqContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateISerializableContract(Type)
  nameWithType: DefaultContractResolver.CreateISerializableContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)
    name: CreateISerializableContract
    nameWithType: DefaultContractResolver.CreateISerializableContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)
    name: CreateISerializableContract
    nameWithType: DefaultContractResolver.CreateISerializableContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateDynamicContract(Type)
  nameWithType: DefaultContractResolver.CreateDynamicContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)
    name: CreateDynamicContract
    nameWithType: DefaultContractResolver.CreateDynamicContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)
    name: CreateDynamicContract
    nameWithType: DefaultContractResolver.CreateDynamicContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateStringContract(Type)
  nameWithType: DefaultContractResolver.CreateStringContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)
    name: CreateStringContract
    nameWithType: DefaultContractResolver.CreateStringContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)
    name: CreateStringContract
    nameWithType: DefaultContractResolver.CreateStringContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateContract(Type)
  nameWithType: DefaultContractResolver.CreateContract(Type)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)
    name: CreateContract
    nameWithType: DefaultContractResolver.CreateContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)
    name: CreateContract
    nameWithType: DefaultContractResolver.CreateContract
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateProperties(Type, MemberSerialization)
  nameWithType: DefaultContractResolver.CreateProperties(Type, MemberSerialization)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)
    name: CreateProperties
    nameWithType: DefaultContractResolver.CreateProperties
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.MemberSerialization
    name: MemberSerialization
    nameWithType: MemberSerialization
    fullName: Newtonsoft.Json.MemberSerialization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)
    name: CreateProperties
    nameWithType: DefaultContractResolver.CreateProperties
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.MemberSerialization
    name: MemberSerialization
    nameWithType: MemberSerialization
    fullName: Newtonsoft.Json.MemberSerialization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateMemberValueProvider(MemberInfo)
  nameWithType: DefaultContractResolver.CreateMemberValueProvider(MemberInfo)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)
    name: CreateMemberValueProvider
    nameWithType: DefaultContractResolver.CreateMemberValueProvider
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)
    name: CreateMemberValueProvider
    nameWithType: DefaultContractResolver.CreateMemberValueProvider
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: CreateProperty(MemberInfo, MemberSerialization)
  nameWithType: DefaultContractResolver.CreateProperty(MemberInfo, MemberSerialization)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)
    name: CreateProperty
    nameWithType: DefaultContractResolver.CreateProperty
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.MemberSerialization
    name: MemberSerialization
    nameWithType: MemberSerialization
    fullName: Newtonsoft.Json.MemberSerialization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)
    name: CreateProperty
    nameWithType: DefaultContractResolver.CreateProperty
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.MemberSerialization
    name: MemberSerialization
    nameWithType: MemberSerialization
    fullName: Newtonsoft.Json.MemberSerialization
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(System.String)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(System.String)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: ResolveExtensionDataName(String)
  nameWithType: DefaultContractResolver.ResolveExtensionDataName(String)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(System.String)
    name: ResolveExtensionDataName
    nameWithType: DefaultContractResolver.ResolveExtensionDataName
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(System.String)
    name: ResolveExtensionDataName
    nameWithType: DefaultContractResolver.ResolveExtensionDataName
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: ResolveDictionaryKey(String)
  nameWithType: DefaultContractResolver.ResolveDictionaryKey(String)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)
    name: ResolveDictionaryKey
    nameWithType: DefaultContractResolver.ResolveDictionaryKey
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(System.String)
    name: ResolveDictionaryKey
    nameWithType: DefaultContractResolver.ResolveDictionaryKey
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: GetResolvedPropertyName(String)
  nameWithType: DefaultContractResolver.GetResolvedPropertyName(String)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)
    name: GetResolvedPropertyName
    nameWithType: DefaultContractResolver.GetResolvedPropertyName
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(System.String)
    name: GetResolvedPropertyName
    nameWithType: DefaultContractResolver.GetResolvedPropertyName
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: DynamicCodeGeneration
  nameWithType: DefaultContractResolver.DynamicCodeGeneration
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.DynamicCodeGeneration
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: DefaultMembersSearchFlags
  nameWithType: DefaultContractResolver.DefaultMembersSearchFlags
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultMembersSearchFlags
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: SerializeCompilerGeneratedMembers
  nameWithType: DefaultContractResolver.SerializeCompilerGeneratedMembers
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.SerializeCompilerGeneratedMembers
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: IgnoreSerializableInterface
  nameWithType: DefaultContractResolver.IgnoreSerializableInterface
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableInterface
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: IgnoreSerializableAttribute
  nameWithType: DefaultContractResolver.IgnoreSerializableAttribute
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreSerializableAttribute
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreIsSpecifiedMembers
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreIsSpecifiedMembers
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: IgnoreIsSpecifiedMembers
  nameWithType: DefaultContractResolver.IgnoreIsSpecifiedMembers
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreIsSpecifiedMembers
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreShouldSerializeMembers
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreShouldSerializeMembers
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: IgnoreShouldSerializeMembers
  nameWithType: DefaultContractResolver.IgnoreShouldSerializeMembers
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.IgnoreShouldSerializeMembers
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.NamingStrategy
  commentId: P:Newtonsoft.Json.Serialization.DefaultContractResolver.NamingStrategy
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: NamingStrategy
  nameWithType: DefaultContractResolver.NamingStrategy
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.NamingStrategy
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Entity.EntityExtensions.CheckICreatedTime``2
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  parent: OSharp.Entity.EntityExtensions
  definition: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey>()
  nameWithType: EntityExtensions.CheckICreatedTime<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey>()
  fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey>()
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey)()
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey)()
  name.vb: CheckICreatedTime(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey)()
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: OSharp.Entity.EntityExtensions
  definition: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckICreationAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>(IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)(IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: OSharp.Entity.EntityExtensions
  definition: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckIUpdateAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>(IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)(IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  name: CastTo(Type)
  nameWithType: ObjectExtensions.CastTo(Type)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1({T})
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  name: CastTo<T>(T)
  nameWithType: ObjectExtensions.CastTo<T>(T)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>(T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(T)
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)(T)
  name.vb: CastTo(Of T)(T)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.ObjectExtensions.IsIn``1(Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver[])
  commentId: M:OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(CamelCaseToUnderScoreCasePropertyNamesContractResolver[])
  nameWithType: ObjectExtensions.IsIn<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(CamelCaseToUnderScoreCasePropertyNamesContractResolver[])
  fullName: OSharp.Extensions.ObjectExtensions.IsIn<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver[])
  nameWithType.vb: ObjectExtensions.IsIn(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(CamelCaseToUnderScoreCasePropertyNamesContractResolver())
  fullName.vb: OSharp.Extensions.ObjectExtensions.IsIn(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver())
  name.vb: IsIn(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(CamelCaseToUnderScoreCasePropertyNamesContractResolver())
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: ObjectExtensions.IsIn<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: OSharp.Extensions.ObjectExtensions.IsIn<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: ObjectExtensions.IsIn(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: OSharp.Extensions.ObjectExtensions.IsIn(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.ToDynamic
  commentId: M:OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: ObjectExtensions.ToDynamic()
  fullName: OSharp.Extensions.ObjectExtensions.ToDynamic()
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.ObjectExtensions.DeepClone``1
  commentId: M:OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<CamelCaseToUnderScoreCasePropertyNamesContractResolver>()
  nameWithType: ObjectExtensions.DeepClone<CamelCaseToUnderScoreCasePropertyNamesContractResolver>()
  fullName: OSharp.Extensions.ObjectExtensions.DeepClone<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)()
  fullName.vb: OSharp.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)()
  name.vb: DeepClone(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)()
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: ObjectExtensions.DeepClone<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: ObjectExtensions.DeepClone(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  parent: OSharp.Extensions.ParameterCheckExtensions
  definition: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>(System.Func<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)(System.Func(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, System.Boolean), System.String)
  name.vb: Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: ParameterCheckExtensions.Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: ParameterCheckExtensions.Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  parent: OSharp.Extensions.ParameterCheckExtensions
  definition: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException>(System.Func<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException)(System.Func(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, System.Boolean), System.String)
  name.vb: Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException>
    nameWithType: ParameterCheckExtensions.Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException)
    nameWithType: ParameterCheckExtensions.Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  parent: OSharp.Extensions.ParameterCheckExtensions
  definition: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  name: CheckNotNull<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)(System.String)
  name.vb: CheckNotNull(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: ParameterCheckExtensions.CheckNotNull<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver},System.Action{System.Exception},System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>, Action<Exception>, Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>, Action<Exception>, Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>(System.Action<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>, System.Action<System.Exception>, System.Action<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver), Action(Of Exception), Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)(System.Action(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver), System.Action(Of System.Exception), System.Action(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  name.vb: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver), Action(Of Exception), Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>(System.Action<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)(System.Action(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver), System.Action(Of System.Exception))
  name.vb: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>, Action<Exception>, Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>, Action<Exception>, Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(System.Func<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>, System.Action<System.Exception>, System.Action<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult), Action(Of Exception), Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(System.Func(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult), System.Action(Of System.Exception), System.Action(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  name.vb: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult), Action(Of Exception), Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
    nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,{TResult}},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(System.Func<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(System.Func(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
    nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver},System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  name: TryFinally<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>, Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType: TryCatchExtensions.TryFinally<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>, Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>(System.Action<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>, System.Action<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver), Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)(System.Action(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver), System.Action(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  name.vb: TryFinally(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver), Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: TryCatchExtensions.TryFinally<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: TryCatchExtensions.TryFinally(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  commentId: M:OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  parent: OSharp.Json.JsonExtensions
  definition: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  name: ToJsonString(Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Boolean, Boolean)
  fullName: OSharp.Json.JsonExtensions.ToJsonString(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Mapping.MapperExtensions.MapTo``1
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  parent: OSharp.Mapping.MapperExtensions
  definition: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  name: MapTo<TTarget>()
  nameWithType: MapperExtensions.MapTo<TTarget>()
  fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>()
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)()
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)()
  name.vb: MapTo(Of TTarget)()
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Mapping.MapperExtensions.MapTo``2({TTarget})
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  parent: OSharp.Mapping.MapperExtensions
  definition: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget>(TTarget)
  nameWithType: MapperExtensions.MapTo<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget>(TTarget)
  fullName: OSharp.Mapping.MapperExtensions.MapTo<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget>(TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget)(TTarget)
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget)(TTarget)
  name.vb: MapTo(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget)(TTarget)
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget>
    nameWithType: MapperExtensions.MapTo<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget)
    nameWithType: MapperExtensions.MapTo(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Reflection.LockExtensions.Locking(System.Action)
  commentId: M:OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  name: Locking(Action)
  nameWithType: LockExtensions.Locking(Action)
  fullName: OSharp.Reflection.LockExtensions.Locking(System.Action)
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  name: Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType: LockExtensions.Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>(System.Action<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType.vb: LockExtensions.Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)(System.Action(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  name.vb: Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: LockExtensions.Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: LockExtensions.Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  name: Locking<TResult>(Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Func<TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<TResult>(System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Func(Of TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of TResult)(System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.OSharp.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,{TResult}})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  name: Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>)
  nameWithType: LockExtensions.Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(System.Func<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(System.Func(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult))
  name.vb: Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
    nameWithType: LockExtensions.Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
    nameWithType: LockExtensions.Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  name: CastTo(Type)
  nameWithType: ObjectExtensions.CastTo(Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  name: CastTo<T>(T)
  nameWithType: ObjectExtensions.CastTo<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(T)
  name.vb: CastTo(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(CamelCaseToUnderScoreCasePropertyNamesContractResolver[])
  nameWithType: ObjectExtensions.IsIn<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(CamelCaseToUnderScoreCasePropertyNamesContractResolver[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver[])
  nameWithType.vb: ObjectExtensions.IsIn(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(CamelCaseToUnderScoreCasePropertyNamesContractResolver())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver())
  name.vb: IsIn(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(CamelCaseToUnderScoreCasePropertyNamesContractResolver())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: ObjectExtensions.IsIn<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: ObjectExtensions.IsIn(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: ObjectExtensions.ToDynamic()
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<CamelCaseToUnderScoreCasePropertyNamesContractResolver>()
  nameWithType: ObjectExtensions.DeepClone<CamelCaseToUnderScoreCasePropertyNamesContractResolver>()
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)()
  name.vb: DeepClone(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: ObjectExtensions.DeepClone<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: ObjectExtensions.DeepClone(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>(System.Func<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)(System.Func(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, System.Boolean), System.String)
  name.vb: Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: ParameterCheckExtensions.Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: ParameterCheckExtensions.Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException>(System.Func<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException)(System.Func(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, System.Boolean), System.String)
  name.vb: Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException>
    nameWithType: ParameterCheckExtensions.Required<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException)
    nameWithType: ParameterCheckExtensions.Required(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  name: CheckNotNull<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)(System.String)
  name.vb: CheckNotNull(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: ParameterCheckExtensions.CheckNotNull<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver},System.Action{System.Exception},System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>, Action<Exception>, Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>, Action<Exception>, Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>(System.Action<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>, System.Action<System.Exception>, System.Action<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver), Action(Of Exception), Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)(System.Action(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver), System.Action(Of System.Exception), System.Action(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  name.vb: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver), Action(Of Exception), Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>(System.Action<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)(System.Action(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver), System.Action(Of System.Exception))
  name.vb: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>, Action<Exception>, Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>, Action<Exception>, Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(System.Func<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>, System.Action<System.Exception>, System.Action<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult), Action(Of Exception), Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(System.Func(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult), System.Action(Of System.Exception), System.Action(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  name.vb: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult), Action(Of Exception), Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
    nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,{TResult}},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(System.Func<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(System.Func(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
    nameWithType: TryCatchExtensions.TryCatch<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver},System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  name: TryFinally<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>, Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType: TryCatchExtensions.TryFinally<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>, Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>(System.Action<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>, System.Action<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver), Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)(System.Action(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver), System.Action(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  name.vb: TryFinally(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver), Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: TryCatchExtensions.TryFinally<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: TryCatchExtensions.TryFinally(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  parent: Hybrid.Json.JsonExtensions
  definition: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  name: ToJsonString(Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  name: MapTo<TTarget>()
  nameWithType: MapperExtensions.MapTo<TTarget>()
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>()
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)()
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)()
  name.vb: MapTo(Of TTarget)()
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget>(TTarget)
  nameWithType: MapperExtensions.MapTo<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget>(TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget>(TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget)(TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget)(TTarget)
  name.vb: MapTo(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget)(TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget>
    nameWithType: MapperExtensions.MapTo<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget)
    nameWithType: MapperExtensions.MapTo(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  name: Locking(Action)
  nameWithType: LockExtensions.Locking(Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  name: Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType: LockExtensions.Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver>(Action<CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>(System.Action<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>)
  nameWithType.vb: LockExtensions.Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)(System.Action(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  name.vb: Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)(Action(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    nameWithType: LockExtensions.Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    nameWithType: LockExtensions.Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  name: Locking<TResult>(Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver,{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  name: Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>)
  nameWithType: LockExtensions.Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(Func<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>(System.Func<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(System.Func(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult))
  name.vb: Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)(Func(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
    nameWithType: LockExtensions.Locking<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
    nameWithType: LockExtensions.Locking(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
    name: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver
    fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey>()
  nameWithType: EntityExtensions.CheckICreatedTime<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey>()
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey>()
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey)()
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey)()
  name.vb: CheckICreatedTime(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey)()
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckICreationAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckIUpdateAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Newtonsoft.Json.Serialization
  commentId: N:Newtonsoft.Json.Serialization
  isExternal: true
  name: Newtonsoft.Json.Serialization
  nameWithType: Newtonsoft.Json.Serialization
  fullName: Newtonsoft.Json.Serialization
- uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  name.vb: CheckICreatedTime(Of TEntity, TKey)(TEntity)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime<TEntity, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime(Of TEntity, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Entity.EntityExtensions
  commentId: T:OSharp.Entity.EntityExtensions
  parent: OSharp.Entity
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: OSharp.Entity.EntityExtensions
- uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  isExternal: true
  name: CastTo(Object, Type)
  nameWithType: ObjectExtensions.CastTo(Object, Type)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo(System.Object, System.Type)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions
  commentId: T:OSharp.Extensions.ObjectExtensions
  parent: OSharp.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: OSharp.Extensions.ObjectExtensions
- uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  isExternal: true
  name: CastTo<T>(Object, T)
  nameWithType: ObjectExtensions.CastTo<T>(Object, T)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>(System.Object, T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object, T)
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)(System.Object, T)
  name.vb: CastTo(Of T)(Object, T)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  commentId: M:OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<T>(T, T[])
  nameWithType: ObjectExtensions.IsIn<T>(T, T[])
  fullName: OSharp.Extensions.ObjectExtensions.IsIn<T>(T, T[])
  nameWithType.vb: ObjectExtensions.IsIn(Of T)(T, T())
  fullName.vb: OSharp.Extensions.ObjectExtensions.IsIn(Of T)(T, T())
  name.vb: IsIn(Of T)(T, T())
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn<T>
    nameWithType: ObjectExtensions.IsIn<T>
    fullName: OSharp.Extensions.ObjectExtensions.IsIn<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn(Of T)
    nameWithType: ObjectExtensions.IsIn(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.IsIn(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  commentId: M:OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: ObjectExtensions.ToDynamic(Object)
  fullName: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  commentId: M:OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: OSharp.Extensions.ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: OSharp.Extensions.ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T>(T, Func<T, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T)(T, Func(Of T, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of T)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T>
    nameWithType: ParameterCheckExtensions.Required<T>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T)
    nameWithType: ParameterCheckExtensions.Required(Of T)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ParameterCheckExtensions
  commentId: T:OSharp.Extensions.ParameterCheckExtensions
  parent: OSharp.Extensions
  name: ParameterCheckExtensions
  nameWithType: ParameterCheckExtensions
  fullName: OSharp.Extensions.ParameterCheckExtensions
- uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T, TException>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T, TException>(T, Func<T, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T, TException>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T, TException)(T, Func(Of T, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of T, TException)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T, TException)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T, TException>
    nameWithType: ParameterCheckExtensions.Required<T, TException>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T, TException>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T, TException)
    nameWithType: ParameterCheckExtensions.Required(Of T, TException)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of T, TException)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  isExternal: true
  name: CheckNotNull<T>(T, String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<T>(T, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<T>(T, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of T)(T, String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull<T>
    nameWithType: ParameterCheckExtensions.CheckNotNull<T>
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of T)
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions
  commentId: T:OSharp.Extensions.TryCatchExtensions
  parent: OSharp.Extensions
  name: TryCatchExtensions
  nameWithType: TryCatchExtensions
  fullName: OSharp.Extensions.TryCatchExtensions
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  isExternal: true
  name: TryFinally<T>(T, Action<T>, Action<T>)
  nameWithType: TryCatchExtensions.TryFinally<T>(T, Action<T>, Action<T>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<T>(T, System.Action<T>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of T)(T, Action(Of T), Action(Of T))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryFinally(Of T)(T, System.Action(Of T), System.Action(Of T))
  name.vb: TryFinally(Of T)(T, Action(Of T), Action(Of T))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally<T>
    nameWithType: TryCatchExtensions.TryFinally<T>
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally(Of T)
    nameWithType: TryCatchExtensions.TryFinally(Of T)
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  commentId: M:OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  isExternal: true
  name: ToJsonString(Object, Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Object, Boolean, Boolean)
  fullName: OSharp.Json.JsonExtensions.ToJsonString(System.Object, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Json.JsonExtensions
  commentId: T:OSharp.Json.JsonExtensions
  parent: OSharp.Json
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: OSharp.Json.JsonExtensions
- uid: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  isExternal: true
  name: MapTo<TTarget>(Object)
  nameWithType: MapperExtensions.MapTo<TTarget>(Object)
  fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>(System.Object)
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)(Object)
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)(System.Object)
  name.vb: MapTo(Of TTarget)(Object)
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Mapping.MapperExtensions
  commentId: T:OSharp.Mapping.MapperExtensions
  parent: OSharp.Mapping
  name: MapperExtensions
  nameWithType: MapperExtensions
  fullName: OSharp.Mapping.MapperExtensions
- uid: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType: MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  fullName: OSharp.Mapping.MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  name.vb: MapTo(Of TSource, TTarget)(TSource, TTarget)
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo<TSource, TTarget>
    nameWithType: MapperExtensions.MapTo<TSource, TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<TSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo(Of TSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TSource, TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  commentId: M:OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  isExternal: true
  name: Locking(Object, Action)
  nameWithType: LockExtensions.Locking(Object, Action)
  fullName: OSharp.Reflection.LockExtensions.Locking(System.Object, System.Action)
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions
  commentId: T:OSharp.Reflection.LockExtensions
  parent: OSharp.Reflection
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: OSharp.Reflection.LockExtensions
- uid: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  isExternal: true
  name: Locking<T>(T, Action<T>)
  nameWithType: LockExtensions.Locking<T>(T, Action<T>)
  fullName: OSharp.Reflection.LockExtensions.Locking<T>(T, System.Action<T>)
  nameWithType.vb: LockExtensions.Locking(Of T)(T, Action(Of T))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of T)(T, System.Action(Of T))
  name.vb: Locking(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking<T>
    nameWithType: LockExtensions.Locking<T>
    fullName: OSharp.Reflection.LockExtensions.Locking<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking(Of T)
    nameWithType: LockExtensions.Locking(Of T)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  isExternal: true
  name: Locking<TResult>(Object, Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Object, Func<TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<TResult>(System.Object, System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Object, Func(Of TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of TResult)(System.Object, System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Object, Func(Of TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  isExternal: true
  name: Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  nameWithType: LockExtensions.Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<TSource, TResult>(TSource, System.Func<TSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of TSource, TResult)(TSource, System.Func(Of TSource, TResult))
  name.vb: Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking<TSource, TResult>
    nameWithType: LockExtensions.Locking<TSource, TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking(Of TSource, TResult)
    nameWithType: LockExtensions.Locking(Of TSource, TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  isExternal: true
  name: CastTo(Object, Type)
  nameWithType: ObjectExtensions.CastTo(Object, Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object, System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions
  commentId: T:Hybrid.Extensions.ObjectExtensions
  parent: Hybrid.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Hybrid.Extensions.ObjectExtensions
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  isExternal: true
  name: CastTo<T>(Object, T)
  nameWithType: ObjectExtensions.CastTo<T>(Object, T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object, T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object, T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object, T)
  name.vb: CastTo(Of T)(Object, T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<T>(T, T[])
  nameWithType: ObjectExtensions.IsIn<T>(T, T[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>(T, T[])
  nameWithType.vb: ObjectExtensions.IsIn(Of T)(T, T())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)(T, T())
  name.vb: IsIn(Of T)(T, T())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn<T>
    nameWithType: ObjectExtensions.IsIn<T>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn(Of T)
    nameWithType: ObjectExtensions.IsIn(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: ObjectExtensions.ToDynamic(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T>
    nameWithType: ParameterCheckExtensions.Required<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T)
    nameWithType: ParameterCheckExtensions.Required(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions
  commentId: T:Hybrid.Extensions.ParameterCheckExtensions
  parent: Hybrid.Extensions
  name: ParameterCheckExtensions
  nameWithType: ParameterCheckExtensions
  fullName: Hybrid.Extensions.ParameterCheckExtensions
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T, TException>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T, TException>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T, TException)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T, TException)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T, TException>
    nameWithType: ParameterCheckExtensions.Required<T, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T, TException)
    nameWithType: ParameterCheckExtensions.Required(Of T, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  isExternal: true
  name: CheckNotNull<T>(T, String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<T>(T, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>(T, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of T)(T, String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull<T>
    nameWithType: ParameterCheckExtensions.CheckNotNull<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions
  commentId: T:Hybrid.Extensions.TryCatchExtensions
  parent: Hybrid.Extensions
  name: TryCatchExtensions
  nameWithType: TryCatchExtensions
  fullName: Hybrid.Extensions.TryCatchExtensions
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  isExternal: true
  name: TryFinally<T>(T, Action<T>, Action<T>)
  nameWithType: TryCatchExtensions.TryFinally<T>(T, Action<T>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>(T, System.Action<T>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of T)(T, Action(Of T), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)(T, System.Action(Of T), System.Action(Of T))
  name.vb: TryFinally(Of T)(T, Action(Of T), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally<T>
    nameWithType: TryCatchExtensions.TryFinally<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally(Of T)
    nameWithType: TryCatchExtensions.TryFinally(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  isExternal: true
  name: ToJsonString(Object, Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Object, Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Object, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions
  commentId: T:Hybrid.Json.JsonExtensions
  parent: Hybrid.Json
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: Hybrid.Json.JsonExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  isExternal: true
  name: MapTo<TTarget>(Object)
  nameWithType: MapperExtensions.MapTo<TTarget>(Object)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>(System.Object)
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)(Object)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)(System.Object)
  name.vb: MapTo(Of TTarget)(Object)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Mapping.MapperExtensions
  commentId: T:Hybrid.Mapping.MapperExtensions
  parent: Hybrid.Mapping
  name: MapperExtensions
  nameWithType: MapperExtensions
  fullName: Hybrid.Mapping.MapperExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType: MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  name.vb: MapTo(Of TSource, TTarget)(TSource, TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo<TSource, TTarget>
    nameWithType: MapperExtensions.MapTo<TSource, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo(Of TSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TSource, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  isExternal: true
  name: Locking(Object, Action)
  nameWithType: LockExtensions.Locking(Object, Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Object, System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions
  commentId: T:Hybrid.Reflection.LockExtensions
  parent: Hybrid.Reflection
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: Hybrid.Reflection.LockExtensions
- uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  isExternal: true
  name: Locking<T>(T, Action<T>)
  nameWithType: LockExtensions.Locking<T>(T, Action<T>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<T>(T, System.Action<T>)
  nameWithType.vb: LockExtensions.Locking(Of T)(T, Action(Of T))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of T)(T, System.Action(Of T))
  name.vb: Locking(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking<T>
    nameWithType: LockExtensions.Locking<T>
    fullName: Hybrid.Reflection.LockExtensions.Locking<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking(Of T)
    nameWithType: LockExtensions.Locking(Of T)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  isExternal: true
  name: Locking<TResult>(Object, Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Object, Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Object, System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Object, Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Object, System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Object, Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  isExternal: true
  name: Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  nameWithType: LockExtensions.Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>(TSource, System.Func<TSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)(TSource, System.Func(Of TSource, TResult))
  name.vb: Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking<TSource, TResult>
    nameWithType: LockExtensions.Locking<TSource, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking(Of TSource, TResult)
    nameWithType: LockExtensions.Locking(Of TSource, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  name.vb: CheckICreatedTime(Of TEntity, TKey)(TEntity)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime<TEntity, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime(Of TEntity, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions
  commentId: T:Hybrid.Domain.Entities.EntityExtensions
  parent: Hybrid.Domain.Entities
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: Hybrid.Domain.Entities.EntityExtensions
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Entity
  commentId: N:OSharp.Entity
  name: OSharp.Entity
  nameWithType: OSharp.Entity
  fullName: OSharp.Entity
- uid: OSharp.Extensions
  commentId: N:OSharp.Extensions
  name: OSharp.Extensions
  nameWithType: OSharp.Extensions
  fullName: OSharp.Extensions
- uid: OSharp.Json
  commentId: N:OSharp.Json
  name: OSharp.Json
  nameWithType: OSharp.Json
  fullName: OSharp.Json
- uid: OSharp.Mapping
  commentId: N:OSharp.Mapping
  name: OSharp.Mapping
  nameWithType: OSharp.Mapping
  fullName: OSharp.Mapping
- uid: OSharp.Reflection
  commentId: N:OSharp.Reflection
  name: OSharp.Reflection
  nameWithType: OSharp.Reflection
  fullName: OSharp.Reflection
- uid: Hybrid.Extensions
  commentId: N:Hybrid.Extensions
  name: Hybrid.Extensions
  nameWithType: Hybrid.Extensions
  fullName: Hybrid.Extensions
- uid: Hybrid.Mapping
  commentId: N:Hybrid.Mapping
  name: Hybrid.Mapping
  nameWithType: Hybrid.Mapping
  fullName: Hybrid.Mapping
- uid: Hybrid.Reflection
  commentId: N:Hybrid.Reflection
  name: Hybrid.Reflection
  nameWithType: Hybrid.Reflection
  fullName: Hybrid.Reflection
- uid: Hybrid.Domain.Entities
  commentId: N:Hybrid.Domain.Entities
  name: Hybrid.Domain.Entities
  nameWithType: Hybrid.Domain.Entities
  fullName: Hybrid.Domain.Entities
- uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)
  commentId: M:Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)
  parent: Newtonsoft.Json.Serialization.DefaultContractResolver
  isExternal: true
  name: ResolvePropertyName(String)
  nameWithType: DefaultContractResolver.ResolvePropertyName(String)
  fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)
  spec.csharp:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)
    name: ResolvePropertyName
    nameWithType: DefaultContractResolver.ResolvePropertyName
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(System.String)
    name: ResolvePropertyName
    nameWithType: DefaultContractResolver.ResolvePropertyName
    fullName: Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.ResolvePropertyName*
  commentId: Overload:Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.ResolvePropertyName
  name: ResolvePropertyName
  nameWithType: CamelCaseToUnderScoreCasePropertyNamesContractResolver.ResolvePropertyName
  fullName: Hybrid.Json.CamelCaseToUnderScoreCasePropertyNamesContractResolver.ResolvePropertyName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
