### YamlMime:ManagedReference
items:
- uid: Hybrid.Zero.IdentityServer4.Quickstart.Extensions
  commentId: T:Hybrid.Zero.IdentityServer4.Quickstart.Extensions
  id: Extensions
  parent: Hybrid.Zero.IdentityServer4.Quickstart
  children:
  - Hybrid.Zero.IdentityServer4.Quickstart.Extensions.IsPkceClientAsync(IdentityServer4.Stores.IClientStore,System.String)
  - Hybrid.Zero.IdentityServer4.Quickstart.Extensions.LoadingPage(Microsoft.AspNetCore.Mvc.Controller,System.String,System.String)
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: Extensions
  fullName: Hybrid.Zero.IdentityServer4.Quickstart.Extensions
  type: Class
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/Quickstart/Controllers/Extensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: Extensions
    path: ../src/Hybrid.Zero.IdentityServer4/Quickstart/Controllers/Extensions.cs
    startLine: 17
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4.Quickstart
  syntax:
    content: public static class Extensions
    content.vb: Public Module Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Zero.IdentityServer4.Quickstart.Extensions.IsPkceClientAsync(IdentityServer4.Stores.IClientStore,System.String)
  commentId: M:Hybrid.Zero.IdentityServer4.Quickstart.Extensions.IsPkceClientAsync(IdentityServer4.Stores.IClientStore,System.String)
  id: IsPkceClientAsync(IdentityServer4.Stores.IClientStore,System.String)
  isExtensionMethod: true
  parent: Hybrid.Zero.IdentityServer4.Quickstart.Extensions
  langs:
  - csharp
  - vb
  name: IsPkceClientAsync(IClientStore, String)
  nameWithType: Extensions.IsPkceClientAsync(IClientStore, String)
  fullName: Hybrid.Zero.IdentityServer4.Quickstart.Extensions.IsPkceClientAsync(IdentityServer4.Stores.IClientStore, System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/Quickstart/Controllers/Extensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: IsPkceClientAsync
    path: ../src/Hybrid.Zero.IdentityServer4/Quickstart/Controllers/Extensions.cs
    startLine: 25
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4.Quickstart
  summary: "\nDetermines whether the client is configured to use PKCE.\n"
  example: []
  syntax:
    content: public static Task<bool> IsPkceClientAsync(this IClientStore store, string client_id)
    parameters:
    - id: store
      type: IdentityServer4.Stores.IClientStore
      description: The store.
    - id: client_id
      type: System.String
      description: The client identifier.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsPkceClientAsync(store As IClientStore, client_id As String) As Task(Of Boolean)
  overload: Hybrid.Zero.IdentityServer4.Quickstart.Extensions.IsPkceClientAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Zero.IdentityServer4.Quickstart.Extensions.LoadingPage(Microsoft.AspNetCore.Mvc.Controller,System.String,System.String)
  commentId: M:Hybrid.Zero.IdentityServer4.Quickstart.Extensions.LoadingPage(Microsoft.AspNetCore.Mvc.Controller,System.String,System.String)
  id: LoadingPage(Microsoft.AspNetCore.Mvc.Controller,System.String,System.String)
  isExtensionMethod: true
  parent: Hybrid.Zero.IdentityServer4.Quickstart.Extensions
  langs:
  - csharp
  - vb
  name: LoadingPage(Controller, String, String)
  nameWithType: Extensions.LoadingPage(Controller, String, String)
  fullName: Hybrid.Zero.IdentityServer4.Quickstart.Extensions.LoadingPage(Microsoft.AspNetCore.Mvc.Controller, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid.Zero.IdentityServer4/Quickstart/Controllers/Extensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: LoadingPage
    path: ../src/Hybrid.Zero.IdentityServer4/Quickstart/Controllers/Extensions.cs
    startLine: 36
  assemblies:
  - Hybrid.Zero.IdentityServer4
  namespace: Hybrid.Zero.IdentityServer4.Quickstart
  syntax:
    content: public static IActionResult LoadingPage(this Controller controller, string viewName, string redirectUri)
    parameters:
    - id: controller
      type: Microsoft.AspNetCore.Mvc.Controller
    - id: viewName
      type: System.String
    - id: redirectUri
      type: System.String
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function LoadingPage(controller As Controller, viewName As String, redirectUri As String) As IActionResult
  overload: Hybrid.Zero.IdentityServer4.Quickstart.Extensions.LoadingPage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Hybrid.Zero.IdentityServer4.Quickstart
  commentId: N:Hybrid.Zero.IdentityServer4.Quickstart
  name: Hybrid.Zero.IdentityServer4.Quickstart
  nameWithType: Hybrid.Zero.IdentityServer4.Quickstart
  fullName: Hybrid.Zero.IdentityServer4.Quickstart
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Zero.IdentityServer4.Quickstart.Extensions.IsPkceClientAsync*
  commentId: Overload:Hybrid.Zero.IdentityServer4.Quickstart.Extensions.IsPkceClientAsync
  name: IsPkceClientAsync
  nameWithType: Extensions.IsPkceClientAsync
  fullName: Hybrid.Zero.IdentityServer4.Quickstart.Extensions.IsPkceClientAsync
- uid: IdentityServer4.Stores.IClientStore
  commentId: T:IdentityServer4.Stores.IClientStore
  parent: IdentityServer4.Stores
  isExternal: true
  name: IClientStore
  nameWithType: IClientStore
  fullName: IdentityServer4.Stores.IClientStore
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IdentityServer4.Stores
  commentId: N:IdentityServer4.Stores
  isExternal: true
  name: IdentityServer4.Stores
  nameWithType: IdentityServer4.Stores
  fullName: IdentityServer4.Stores
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Hybrid.Zero.IdentityServer4.Quickstart.Extensions.LoadingPage*
  commentId: Overload:Hybrid.Zero.IdentityServer4.Quickstart.Extensions.LoadingPage
  name: LoadingPage
  nameWithType: Extensions.LoadingPage
  fullName: Hybrid.Zero.IdentityServer4.Quickstart.Extensions.LoadingPage
- uid: Microsoft.AspNetCore.Mvc.Controller
  commentId: T:Microsoft.AspNetCore.Mvc.Controller
  parent: Microsoft.AspNetCore.Mvc
  isExternal: true
  name: Controller
  nameWithType: Controller
  fullName: Microsoft.AspNetCore.Mvc.Controller
- uid: Microsoft.AspNetCore.Mvc.IActionResult
  commentId: T:Microsoft.AspNetCore.Mvc.IActionResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: true
  name: IActionResult
  nameWithType: IActionResult
  fullName: Microsoft.AspNetCore.Mvc.IActionResult
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: true
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
