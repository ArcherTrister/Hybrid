### YamlMime:ManagedReference
items:
- uid: Hybrid.Domain.Entities.EntityHashExtensions
  commentId: T:Hybrid.Domain.Entities.EntityHashExtensions
  id: EntityHashExtensions
  parent: Hybrid.Domain.Entities
  children:
  - Hybrid.Domain.Entities.EntityHashExtensions.CheckSyncByHash(System.Collections.Generic.IEnumerable{Hybrid.Domain.Entities.IEntityHash},System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)
  - Hybrid.Domain.Entities.EntityHashExtensions.GetHash(Hybrid.Domain.Entities.IEntityHash)
  langs:
  - csharp
  - vb
  name: EntityHashExtensions
  nameWithType: EntityHashExtensions
  fullName: Hybrid.Domain.Entities.EntityHashExtensions
  type: Class
  source:
    remote:
      path: src/Hybrid/Domain/Entities/EntityHashExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: EntityHashExtensions
    path: ../src/Hybrid/Domain/Entities/EntityHashExtensions.cs
    startLine: 27
  assemblies:
  - Hybrid
  namespace: Hybrid.Domain.Entities
  summary: "\n实体Hash扩展方法\n"
  example: []
  syntax:
    content: public static class EntityHashExtensions
    content.vb: Public Module EntityHashExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Domain.Entities.EntityHashExtensions.CheckSyncByHash(System.Collections.Generic.IEnumerable{Hybrid.Domain.Entities.IEntityHash},System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Hybrid.Domain.Entities.EntityHashExtensions.CheckSyncByHash(System.Collections.Generic.IEnumerable{Hybrid.Domain.Entities.IEntityHash},System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)
  id: CheckSyncByHash(System.Collections.Generic.IEnumerable{Hybrid.Domain.Entities.IEntityHash},System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Hybrid.Domain.Entities.EntityHashExtensions
  langs:
  - csharp
  - vb
  name: CheckSyncByHash(IEnumerable<IEntityHash>, IServiceProvider, ILogger)
  nameWithType: EntityHashExtensions.CheckSyncByHash(IEnumerable<IEntityHash>, IServiceProvider, ILogger)
  fullName: Hybrid.Domain.Entities.EntityHashExtensions.CheckSyncByHash(System.Collections.Generic.IEnumerable<Hybrid.Domain.Entities.IEntityHash>, System.IServiceProvider, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Hybrid/Domain/Entities/EntityHashExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: CheckSyncByHash
    path: ../src/Hybrid/Domain/Entities/EntityHashExtensions.cs
    startLine: 32
  assemblies:
  - Hybrid
  namespace: Hybrid.Domain.Entities
  summary: "\n检查指定实体的Hash值，决定是否需要进行数据库同步\n"
  example: []
  syntax:
    content: public static bool CheckSyncByHash(this IEnumerable<IEntityHash> entityHashes, IServiceProvider provider, ILogger logger)
    parameters:
    - id: entityHashes
      type: System.Collections.Generic.IEnumerable{Hybrid.Domain.Entities.IEntityHash}
    - id: provider
      type: System.IServiceProvider
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CheckSyncByHash(entityHashes As IEnumerable(Of IEntityHash), provider As IServiceProvider, logger As ILogger) As Boolean
  overload: Hybrid.Domain.Entities.EntityHashExtensions.CheckSyncByHash*
  nameWithType.vb: EntityHashExtensions.CheckSyncByHash(IEnumerable(Of IEntityHash), IServiceProvider, ILogger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Hybrid.Domain.Entities.EntityHashExtensions.CheckSyncByHash(System.Collections.Generic.IEnumerable(Of Hybrid.Domain.Entities.IEntityHash), System.IServiceProvider, Microsoft.Extensions.Logging.ILogger)
  name.vb: CheckSyncByHash(IEnumerable(Of IEntityHash), IServiceProvider, ILogger)
- uid: Hybrid.Domain.Entities.EntityHashExtensions.GetHash(Hybrid.Domain.Entities.IEntityHash)
  commentId: M:Hybrid.Domain.Entities.EntityHashExtensions.GetHash(Hybrid.Domain.Entities.IEntityHash)
  id: GetHash(Hybrid.Domain.Entities.IEntityHash)
  isExtensionMethod: true
  parent: Hybrid.Domain.Entities.EntityHashExtensions
  langs:
  - csharp
  - vb
  name: GetHash(IEntityHash)
  nameWithType: EntityHashExtensions.GetHash(IEntityHash)
  fullName: Hybrid.Domain.Entities.EntityHashExtensions.GetHash(Hybrid.Domain.Entities.IEntityHash)
  type: Method
  source:
    remote:
      path: src/Hybrid/Domain/Entities/EntityHashExtensions.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: GetHash
    path: ../src/Hybrid/Domain/Entities/EntityHashExtensions.cs
    startLine: 59
  assemblies:
  - Hybrid
  namespace: Hybrid.Domain.Entities
  summary: "\n获取指定实体的Hash值\n"
  example: []
  syntax:
    content: public static string GetHash(this IEntityHash entity)
    parameters:
    - id: entity
      type: Hybrid.Domain.Entities.IEntityHash
      description: 实体对象
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetHash(entity As IEntityHash) As String
  overload: Hybrid.Domain.Entities.EntityHashExtensions.GetHash*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Hybrid.Domain.Entities
  commentId: N:Hybrid.Domain.Entities
  name: Hybrid.Domain.Entities
  nameWithType: Hybrid.Domain.Entities
  fullName: Hybrid.Domain.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Domain.Entities.EntityHashExtensions.CheckSyncByHash*
  commentId: Overload:Hybrid.Domain.Entities.EntityHashExtensions.CheckSyncByHash
  name: CheckSyncByHash
  nameWithType: EntityHashExtensions.CheckSyncByHash
  fullName: Hybrid.Domain.Entities.EntityHashExtensions.CheckSyncByHash
- uid: System.Collections.Generic.IEnumerable{Hybrid.Domain.Entities.IEntityHash}
  commentId: T:System.Collections.Generic.IEnumerable{Hybrid.Domain.Entities.IEntityHash}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IEntityHash>
  nameWithType: IEnumerable<IEntityHash>
  fullName: System.Collections.Generic.IEnumerable<Hybrid.Domain.Entities.IEntityHash>
  nameWithType.vb: IEnumerable(Of IEntityHash)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Hybrid.Domain.Entities.IEntityHash)
  name.vb: IEnumerable(Of IEntityHash)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Domain.Entities.IEntityHash
    name: IEntityHash
    nameWithType: IEntityHash
    fullName: Hybrid.Domain.Entities.IEntityHash
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Domain.Entities.IEntityHash
    name: IEntityHash
    nameWithType: IEntityHash
    fullName: Hybrid.Domain.Entities.IEntityHash
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Hybrid.Domain.Entities.EntityHashExtensions.GetHash*
  commentId: Overload:Hybrid.Domain.Entities.EntityHashExtensions.GetHash
  name: GetHash
  nameWithType: EntityHashExtensions.GetHash
  fullName: Hybrid.Domain.Entities.EntityHashExtensions.GetHash
- uid: Hybrid.Domain.Entities.IEntityHash
  commentId: T:Hybrid.Domain.Entities.IEntityHash
  parent: Hybrid.Domain.Entities
  name: IEntityHash
  nameWithType: IEntityHash
  fullName: Hybrid.Domain.Entities.IEntityHash
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
