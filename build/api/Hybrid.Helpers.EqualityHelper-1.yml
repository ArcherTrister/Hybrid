### YamlMime:ManagedReference
items:
- uid: Hybrid.Helpers.EqualityHelper`1
  commentId: T:Hybrid.Helpers.EqualityHelper`1
  id: EqualityHelper`1
  parent: Hybrid.Helpers
  children:
  - Hybrid.Helpers.EqualityHelper`1.CreateComparer``1(System.Func{`0,``0})
  - Hybrid.Helpers.EqualityHelper`1.CreateComparer``1(System.Func{`0,``0},System.Collections.Generic.IEqualityComparer{``0})
  langs:
  - csharp
  - vb
  name: EqualityHelper<T>
  nameWithType: EqualityHelper<T>
  fullName: Hybrid.Helpers.EqualityHelper<T>
  type: Class
  source:
    remote:
      path: src/Hybrid/Helpers/EqualityHelper.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: EqualityHelper
    path: ../src/Hybrid/Helpers/EqualityHelper.cs
    startLine: 22
  assemblies:
  - Hybrid
  namespace: Hybrid.Helpers
  summary: "\n相等比较辅助类，用于快速创建<xref href=\"System.Collections.Generic.IEqualityComparer%601\" data-throw-if-not-resolved=\"false\"></xref>的实例\n"
  example:
  - "\nvar equalityComparer1 = EqualityHelper[Person].CreateComparer(p => p.ID);\nvar equalityComparer2 = EqualityHelper[Person].CreateComparer(p => p.Name);\nvar equalityComparer3 = EqualityHelper[Person].CreateComparer(p => p.Birthday.Year);\n"
  syntax:
    content: public static class EqualityHelper<T>
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Module EqualityHelper(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: EqualityHelper(Of T)
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
  fullName.vb: Hybrid.Helpers.EqualityHelper(Of T)
  name.vb: EqualityHelper(Of T)
- uid: Hybrid.Helpers.EqualityHelper`1.CreateComparer``1(System.Func{`0,``0})
  commentId: M:Hybrid.Helpers.EqualityHelper`1.CreateComparer``1(System.Func{`0,``0})
  id: CreateComparer``1(System.Func{`0,``0})
  parent: Hybrid.Helpers.EqualityHelper`1
  langs:
  - csharp
  - vb
  name: CreateComparer<TV>(Func<T, TV>)
  nameWithType: EqualityHelper<T>.CreateComparer<TV>(Func<T, TV>)
  fullName: Hybrid.Helpers.EqualityHelper<T>.CreateComparer<TV>(System.Func<T, TV>)
  type: Method
  source:
    remote:
      path: src/Hybrid/Helpers/EqualityHelper.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: CreateComparer
    path: ../src/Hybrid/Helpers/EqualityHelper.cs
    startLine: 27
  assemblies:
  - Hybrid
  namespace: Hybrid.Helpers
  summary: "\n创建指定对比委托<code data-dev-comment-type=\"paramref\" class=\"paramref\">keySelector</code>的实例\n"
  example: []
  syntax:
    content: public static IEqualityComparer<T> CreateComparer<TV>(Func<T, TV> keySelector)
    parameters:
    - id: keySelector
      type: System.Func{{T},{TV}}
    typeParameters:
    - id: TV
    return:
      type: System.Collections.Generic.IEqualityComparer{{T}}
    content.vb: Public Shared Function CreateComparer(Of TV)(keySelector As Func(Of T, TV)) As IEqualityComparer(Of T)
  overload: Hybrid.Helpers.EqualityHelper`1.CreateComparer*
  nameWithType.vb: EqualityHelper(Of T).CreateComparer(Of TV)(Func(Of T, TV))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Hybrid.Helpers.EqualityHelper(Of T).CreateComparer(Of TV)(System.Func(Of T, TV))
  name.vb: CreateComparer(Of TV)(Func(Of T, TV))
- uid: Hybrid.Helpers.EqualityHelper`1.CreateComparer``1(System.Func{`0,``0},System.Collections.Generic.IEqualityComparer{``0})
  commentId: M:Hybrid.Helpers.EqualityHelper`1.CreateComparer``1(System.Func{`0,``0},System.Collections.Generic.IEqualityComparer{``0})
  id: CreateComparer``1(System.Func{`0,``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: Hybrid.Helpers.EqualityHelper`1
  langs:
  - csharp
  - vb
  name: CreateComparer<TV>(Func<T, TV>, IEqualityComparer<TV>)
  nameWithType: EqualityHelper<T>.CreateComparer<TV>(Func<T, TV>, IEqualityComparer<TV>)
  fullName: Hybrid.Helpers.EqualityHelper<T>.CreateComparer<TV>(System.Func<T, TV>, System.Collections.Generic.IEqualityComparer<TV>)
  type: Method
  source:
    remote:
      path: src/Hybrid/Helpers/EqualityHelper.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: CreateComparer
    path: ../src/Hybrid/Helpers/EqualityHelper.cs
    startLine: 35
  assemblies:
  - Hybrid
  namespace: Hybrid.Helpers
  summary: "\n创建指定对比委托<code data-dev-comment-type=\"paramref\" class=\"paramref\">keySelector</code>与结果二次比较器<code data-dev-comment-type=\"paramref\" class=\"paramref\">comparer</code>的实例\n"
  example: []
  syntax:
    content: public static IEqualityComparer<T> CreateComparer<TV>(Func<T, TV> keySelector, IEqualityComparer<TV> comparer)
    parameters:
    - id: keySelector
      type: System.Func{{T},{TV}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TV}}
    typeParameters:
    - id: TV
    return:
      type: System.Collections.Generic.IEqualityComparer{{T}}
    content.vb: Public Shared Function CreateComparer(Of TV)(keySelector As Func(Of T, TV), comparer As IEqualityComparer(Of TV)) As IEqualityComparer(Of T)
  overload: Hybrid.Helpers.EqualityHelper`1.CreateComparer*
  nameWithType.vb: EqualityHelper(Of T).CreateComparer(Of TV)(Func(Of T, TV), IEqualityComparer(Of TV))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Hybrid.Helpers.EqualityHelper(Of T).CreateComparer(Of TV)(System.Func(Of T, TV), System.Collections.Generic.IEqualityComparer(Of TV))
  name.vb: CreateComparer(Of TV)(Func(Of T, TV), IEqualityComparer(Of TV))
references:
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Helpers
  commentId: N:Hybrid.Helpers
  name: Hybrid.Helpers
  nameWithType: Hybrid.Helpers
  fullName: Hybrid.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Helpers.EqualityHelper`1.CreateComparer*
  commentId: Overload:Hybrid.Helpers.EqualityHelper`1.CreateComparer
  name: CreateComparer
  nameWithType: EqualityHelper<T>.CreateComparer
  fullName: Hybrid.Helpers.EqualityHelper<T>.CreateComparer
  nameWithType.vb: EqualityHelper(Of T).CreateComparer
  fullName.vb: Hybrid.Helpers.EqualityHelper(Of T).CreateComparer
- uid: System.Func{{T},{TV}}
  commentId: T:System.Func{`0,``0}
  parent: System
  definition: System.Func`2
  name: Func<T, TV>
  nameWithType: Func<T, TV>
  fullName: System.Func<T, TV>
  nameWithType.vb: Func(Of T, TV)
  fullName.vb: System.Func(Of T, TV)
  name.vb: Func(Of T, TV)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TV
    nameWithType: TV
    fullName: TV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TV
    nameWithType: TV
    fullName: TV
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer{{T}}
  commentId: T:System.Collections.Generic.IEqualityComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEqualityComparer{{TV}}
  commentId: T:System.Collections.Generic.IEqualityComparer{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<TV>
  nameWithType: IEqualityComparer<TV>
  fullName: System.Collections.Generic.IEqualityComparer<TV>
  nameWithType.vb: IEqualityComparer(Of TV)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TV)
  name.vb: IEqualityComparer(Of TV)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TV
    nameWithType: TV
    fullName: TV
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TV
    nameWithType: TV
    fullName: TV
  - name: )
    nameWithType: )
    fullName: )
