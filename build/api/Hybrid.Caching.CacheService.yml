### YamlMime:ManagedReference
items:
- uid: Hybrid.Caching.CacheService
  commentId: T:Hybrid.Caching.CacheService
  id: CacheService
  parent: Hybrid.Caching
  children:
  - Hybrid.Caching.CacheService.#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache)
  - Hybrid.Caching.CacheService.ToCacheArray``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheArray``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheList``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheList``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  - Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  - Hybrid.Caching.CacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,Hybrid.Authorization.Functions.IFunction,System.Object[])
  - Hybrid.Caching.CacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Int32,System.Object[])
  - Hybrid.Caching.CacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  - Hybrid.Caching.CacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  langs:
  - csharp
  - vb
  name: CacheService
  nameWithType: CacheService
  fullName: Hybrid.Caching.CacheService
  type: Class
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: CacheService
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 28
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n缓存服务实现\n"
  example: []
  syntax:
    content: 'public class CacheService : ICacheService'
    content.vb: >-
      Public Class CacheService

          Implements ICacheService
  inheritance:
  - System.Object
  implements:
  - Hybrid.Caching.ICacheService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Hybrid.Caching.CacheService.OSharp.Entity.EntityExtensions.CheckICreatedTime``2
  - Hybrid.Caching.CacheService.OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Caching.CacheService.OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  - System.Object.OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
  - System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1
  - System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1({T})
  - Hybrid.Caching.CacheService.OSharp.Extensions.ObjectExtensions.IsIn``1(Hybrid.Caching.CacheService[])
  - System.Object.OSharp.Extensions.ObjectExtensions.ToDynamic
  - Hybrid.Caching.CacheService.OSharp.Extensions.ObjectExtensions.DeepClone``1
  - Hybrid.Caching.CacheService.OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Caching.CacheService,System.Boolean},System.String)
  - Hybrid.Caching.CacheService.OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Caching.CacheService,System.Boolean},System.String)
  - Hybrid.Caching.CacheService.OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  - Hybrid.Caching.CacheService.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Caching.CacheService},System.Action{System.Exception},System.Action{Hybrid.Caching.CacheService})
  - Hybrid.Caching.CacheService.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Caching.CacheService},System.Action{System.Exception})
  - Hybrid.Caching.CacheService.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Caching.CacheService,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Caching.CacheService})
  - Hybrid.Caching.CacheService.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Caching.CacheService,{TResult}},System.Action{System.Exception})
  - Hybrid.Caching.CacheService.OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Caching.CacheService},System.Action{Hybrid.Caching.CacheService})
  - System.Object.OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  - System.Object.OSharp.Mapping.MapperExtensions.MapTo``1
  - Hybrid.Caching.CacheService.OSharp.Mapping.MapperExtensions.MapTo``2({TTarget})
  - System.Object.OSharp.Reflection.LockExtensions.Locking(System.Action)
  - Hybrid.Caching.CacheService.OSharp.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Caching.CacheService})
  - System.Object.OSharp.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  - Hybrid.Caching.CacheService.OSharp.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Caching.CacheService,{TResult}})
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  - Hybrid.Caching.CacheService.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Caching.CacheService[])
  - System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  - Hybrid.Caching.CacheService.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  - Hybrid.Caching.CacheService.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Caching.CacheService,System.Boolean},System.String)
  - Hybrid.Caching.CacheService.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Caching.CacheService,System.Boolean},System.String)
  - Hybrid.Caching.CacheService.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  - Hybrid.Caching.CacheService.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Caching.CacheService},System.Action{System.Exception},System.Action{Hybrid.Caching.CacheService})
  - Hybrid.Caching.CacheService.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Caching.CacheService},System.Action{System.Exception})
  - Hybrid.Caching.CacheService.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Caching.CacheService,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Caching.CacheService})
  - Hybrid.Caching.CacheService.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Caching.CacheService,{TResult}},System.Action{System.Exception})
  - Hybrid.Caching.CacheService.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Caching.CacheService},System.Action{Hybrid.Caching.CacheService})
  - System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  - System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  - Hybrid.Caching.CacheService.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  - Hybrid.Caching.CacheService.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Caching.CacheService})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  - Hybrid.Caching.CacheService.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Caching.CacheService,{TResult}})
  - Hybrid.Caching.CacheService.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  - Hybrid.Caching.CacheService.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Caching.CacheService.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hybrid.Caching.CacheService.#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache)
  commentId: M:Hybrid.Caching.CacheService.#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache)
  id: '#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache)'
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: CacheService(IDistributedCache)
  nameWithType: CacheService.CacheService(IDistributedCache)
  fullName: Hybrid.Caching.CacheService.CacheService(Microsoft.Extensions.Caching.Distributed.IDistributedCache)
  type: Constructor
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: .ctor
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 35
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n初始化一个<xref href=\"Hybrid.Caching.CacheService\" data-throw-if-not-resolved=\"false\"></xref>类型的新实例\n"
  example: []
  syntax:
    content: public CacheService(IDistributedCache cache)
    parameters:
    - id: cache
      type: Microsoft.Extensions.Caching.Distributed.IDistributedCache
    content.vb: Public Sub New(cache As IDistributedCache)
  overload: Hybrid.Caching.CacheService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Hybrid.Caching.CacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  id: ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToPageCache<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, PageCondition, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: CacheService.ToPageCache<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, PageCondition, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.CacheService.ToPageCache<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, Hybrid.Filter.PageCondition, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToPageCache
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 54
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n查询分页数据结果，如缓存存在，直接返回，否则从数据源查找分页结果，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual PageResult<TResult> ToPageCache<TSource, TResult>(IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate, PageCondition pageCondition, Expression<Func<TSource, TResult>> selector, int cacheSeconds = 60, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 数据源
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}}
      description: 数据筛选表达式
    - id: pageCondition
      type: Hybrid.Filter.PageCondition
      description: 分页条件
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}}
      description: 数据投影表达式
    - id: cacheSeconds
      type: System.Int32
      description: 缓存时间
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 数据源的项数据类型
    - id: TResult
      description: 结果集的项数据类型
    return:
      type: Hybrid.Filter.PageResult{{TResult}}
      description: ''
    content.vb: Public Overridable Function ToPageCache(Of TSource, TResult)(source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean)), pageCondition As PageCondition, selector As Expression(Of Func(Of TSource, TResult)), cacheSeconds As Integer = 60, ParamArray keyParams As Object()) As PageResult(Of TResult)
  overload: Hybrid.Caching.CacheService.ToPageCache*
  implements:
  - Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},System.Int32,System.Object[])
  nameWithType.vb: CacheService.ToPageCache(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), PageCondition, Expression(Of Func(Of TSource, TResult)), Int32, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToPageCache(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), Hybrid.Filter.PageCondition, System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToPageCache(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), PageCondition, Expression(Of Func(Of TSource, TResult)), Int32, Object())
- uid: Hybrid.Caching.CacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  id: ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToPageCache<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, PageCondition, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: CacheService.ToPageCache<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, PageCondition, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.CacheService.ToPageCache<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, Hybrid.Filter.PageCondition, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToPageCache
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 77
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n查询分页数据结果，如缓存存在，直接返回，否则从数据源查找分页结果，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual PageResult<TResult> ToPageCache<TSource, TResult>(IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate, PageCondition pageCondition, Expression<Func<TSource, TResult>> selector, IFunction function, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 数据源
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}}
      description: 数据筛选表达式
    - id: pageCondition
      type: Hybrid.Filter.PageCondition
      description: 分页条件
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}}
      description: 数据投影表达式
    - id: function
      type: Hybrid.Authorization.Functions.IFunction
      description: 当前功能信息
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 数据源的项数据类型
    - id: TResult
      description: 结果集的项数据类型
    return:
      type: Hybrid.Filter.PageResult{{TResult}}
      description: ''
    content.vb: Public Overridable Function ToPageCache(Of TSource, TResult)(source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean)), pageCondition As PageCondition, selector As Expression(Of Func(Of TSource, TResult)), function As IFunction, ParamArray keyParams As Object()) As PageResult(Of TResult)
  overload: Hybrid.Caching.CacheService.ToPageCache*
  implements:
  - Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  nameWithType.vb: CacheService.ToPageCache(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), PageCondition, Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToPageCache(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), Hybrid.Filter.PageCondition, System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToPageCache(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), PageCondition, Expression(Of Func(Of TSource, TResult)), IFunction, Object())
- uid: Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  id: ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: CacheService.ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheList<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheList
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 99
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的列表，如缓存存在，直接返回，否则从数据源查询，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual List<TResult> ToCacheList<TSource, TResult>(IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate, Expression<Func<TSource, TResult>> selector, int cacheSeconds = 60, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 数据源
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}}
      description: 数据查询表达式
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}}
      description: 数据筛选表达式
    - id: cacheSeconds
      type: System.Int32
      description: 缓存时间：秒
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 数据源的项数据类型
    - id: TResult
      description: 结果集的项数据类型
    return:
      type: System.Collections.Generic.List{{TResult}}
      description: ''
    content.vb: Public Overridable Function ToCacheList(Of TSource, TResult)(source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean)), selector As Expression(Of Func(Of TSource, TResult)), cacheSeconds As Integer = 60, ParamArray keyParams As Object()) As List(Of TResult)
  overload: Hybrid.Caching.CacheService.ToCacheList*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},System.Int32,System.Object[])
  nameWithType.vb: CacheService.ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheList(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), Int32, Object())
- uid: Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  id: ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: CacheService.ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheArray<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheArray
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 119
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的数组，如缓存存在，直接返回，否则从数据源查询，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual TResult[] ToCacheArray<TSource, TResult>(IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate, Expression<Func<TSource, TResult>> selector, int cacheSeconds = 60, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 数据源
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}}
      description: 数据查询表达式
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}}
      description: 数据筛选表达式
    - id: cacheSeconds
      type: System.Int32
      description: 缓存时间：秒
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 数据源的项数据类型
    - id: TResult
      description: 结果集的项数据类型
    return:
      type: '{TResult}[]'
      description: ''
    content.vb: Public Overridable Function ToCacheArray(Of TSource, TResult)(source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean)), selector As Expression(Of Func(Of TSource, TResult)), cacheSeconds As Integer = 60, ParamArray keyParams As Object()) As TResult()
  overload: Hybrid.Caching.CacheService.ToCacheArray*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},System.Int32,System.Object[])
  nameWithType.vb: CacheService.ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheArray(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), Int32, Object())
- uid: Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  id: ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: CacheService.ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheList<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheList
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 139
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的列表，如缓存存在，直接返回，否则从数据源查询，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual List<TResult> ToCacheList<TSource, TResult>(IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate, Expression<Func<TSource, TResult>> selector, IFunction function, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 数据源
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}}
      description: 数据查询表达式
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}}
      description: 数据筛选表达式
    - id: function
      type: Hybrid.Authorization.Functions.IFunction
      description: 缓存策略相关功能
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 数据源的项数据类型
    - id: TResult
      description: 结果集的项数据类型
    return:
      type: System.Collections.Generic.List{{TResult}}
      description: ''
    content.vb: Public Overridable Function ToCacheList(Of TSource, TResult)(source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean)), selector As Expression(Of Func(Of TSource, TResult)), function As IFunction, ParamArray keyParams As Object()) As List(Of TResult)
  overload: Hybrid.Caching.CacheService.ToCacheList*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  nameWithType.vb: CacheService.ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheList(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
- uid: Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  id: ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: CacheService.ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheArray<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheArray
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 159
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的数组，如缓存存在，直接返回，否则从数据源查询，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual TResult[] ToCacheArray<TSource, TResult>(IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate, Expression<Func<TSource, TResult>> selector, IFunction function, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 数据源
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}}
      description: 数据查询表达式
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}}
      description: 数据筛选表达式
    - id: function
      type: Hybrid.Authorization.Functions.IFunction
      description: 缓存策略相关功能
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 数据源的项数据类型
    - id: TResult
      description: 结果集的项数据类型
    return:
      type: '{TResult}[]'
      description: ''
    content.vb: Public Overridable Function ToCacheArray(Of TSource, TResult)(source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean)), selector As Expression(Of Func(Of TSource, TResult)), function As IFunction, ParamArray keyParams As Object()) As TResult()
  overload: Hybrid.Caching.CacheService.ToCacheArray*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  nameWithType.vb: CacheService.ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheArray(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
- uid: Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  id: ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: CacheService.ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheList<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheList
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 178
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的列表，如缓存存在，直接返回，否则从数据源查询，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual List<TResult> ToCacheList<TSource, TResult>(IQueryable<TSource> source, Expression<Func<TSource, TResult>> selector, int cacheSeconds = 60, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 查询数据源
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}}
      description: 数据筛选表达式
    - id: cacheSeconds
      type: System.Int32
      description: 缓存的秒数
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 源数据类型
    - id: TResult
      description: 结果集的项数据类型
    return:
      type: System.Collections.Generic.List{{TResult}}
      description: 查询结果
    content.vb: Public Overridable Function ToCacheList(Of TSource, TResult)(source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult)), cacheSeconds As Integer = 60, ParamArray keyParams As Object()) As List(Of TResult)
  overload: Hybrid.Caching.CacheService.ToCacheList*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},System.Int32,System.Object[])
  nameWithType.vb: CacheService.ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheList(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), Int32, Object())
- uid: Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  id: ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: CacheService.ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheArray<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheArray
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 197
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的数组，如缓存存在，直接返回，否则从数据源查询，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual TResult[] ToCacheArray<TSource, TResult>(IQueryable<TSource> source, Expression<Func<TSource, TResult>> selector, int cacheSeconds = 60, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 查询数据源
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}}
      description: 数据筛选表达式
    - id: cacheSeconds
      type: System.Int32
      description: 缓存的秒数
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 源数据类型
    - id: TResult
      description: 结果集的项数据类型
    return:
      type: '{TResult}[]'
      description: 查询结果
    content.vb: Public Overridable Function ToCacheArray(Of TSource, TResult)(source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult)), cacheSeconds As Integer = 60, ParamArray keyParams As Object()) As TResult()
  overload: Hybrid.Caching.CacheService.ToCacheArray*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},System.Int32,System.Object[])
  nameWithType.vb: CacheService.ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheArray(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), Int32, Object())
- uid: Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  id: ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: CacheService.ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheList<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheList
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 216
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的列表，如缓存存在，直接返回，否则从数据源查询，并按指定缓存策略存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual List<TResult> ToCacheList<TSource, TResult>(IQueryable<TSource> source, Expression<Func<TSource, TResult>> selector, IFunction function, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 查询数据源
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}}
      description: 数据筛选表达式
    - id: function
      type: Hybrid.Authorization.Functions.IFunction
      description: 缓存策略相关功能
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 源数据类型
    - id: TResult
      description: 结果集的项数据类型
    return:
      type: System.Collections.Generic.List{{TResult}}
      description: 查询结果
    content.vb: Public Overridable Function ToCacheList(Of TSource, TResult)(source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult)), function As IFunction, ParamArray keyParams As Object()) As List(Of TResult)
  overload: Hybrid.Caching.CacheService.ToCacheList*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  nameWithType.vb: CacheService.ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheList(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
- uid: Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  id: ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: CacheService.ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheArray<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheArray
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 235
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的列表，如缓存存在，直接返回，否则从数据源查询，并按指定缓存策略存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual TResult[] ToCacheArray<TSource, TResult>(IQueryable<TSource> source, Expression<Func<TSource, TResult>> selector, IFunction function, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 查询数据源
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}}
      description: 数据筛选表达式
    - id: function
      type: Hybrid.Authorization.Functions.IFunction
      description: 缓存策略相关功能
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 源数据类型
    - id: TResult
      description: 结果集的项数据类型
    return:
      type: '{TResult}[]'
      description: 查询结果
    content.vb: Public Overridable Function ToCacheArray(Of TSource, TResult)(source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult)), function As IFunction, ParamArray keyParams As Object()) As TResult()
  overload: Hybrid.Caching.CacheService.ToCacheArray*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  nameWithType.vb: CacheService.ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheArray(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
- uid: Hybrid.Caching.CacheService.ToCacheList``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheList``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  id: ToCacheList``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheList<TSource>(IQueryable<TSource>, Int32, Object[])
  nameWithType: CacheService.ToCacheList<TSource>(IQueryable<TSource>, Int32, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheList<TSource>(System.Linq.IQueryable<TSource>, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheList
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 252
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的列表，如缓存存在，直接返回，否则从数据源查询，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual List<TSource> ToCacheList<TSource>(IQueryable<TSource> source, int cacheSeconds = 60, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 查询数据源
    - id: cacheSeconds
      type: System.Int32
      description: 缓存的秒数
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 源数据类型
    return:
      type: System.Collections.Generic.List{{TSource}}
      description: 查询结果
    content.vb: Public Overridable Function ToCacheList(Of TSource)(source As IQueryable(Of TSource), cacheSeconds As Integer = 60, ParamArray keyParams As Object()) As List(Of TSource)
  overload: Hybrid.Caching.CacheService.ToCacheList*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{{TSource}},System.Int32,System.Object[])
  nameWithType.vb: CacheService.ToCacheList(Of TSource)(IQueryable(Of TSource), Int32, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheList(Of TSource)(System.Linq.IQueryable(Of TSource), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource)(IQueryable(Of TSource), Int32, Object())
- uid: Hybrid.Caching.CacheService.ToCacheArray``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheArray``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  id: ToCacheArray``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheArray<TSource>(IQueryable<TSource>, Int32, Object[])
  nameWithType: CacheService.ToCacheArray<TSource>(IQueryable<TSource>, Int32, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheArray<TSource>(System.Linq.IQueryable<TSource>, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheArray
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 266
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的数组，如缓存存在，直接返回，否则从数据源查询，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual TSource[] ToCacheArray<TSource>(IQueryable<TSource> source, int cacheSeconds = 60, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 查询数据源
    - id: cacheSeconds
      type: System.Int32
      description: 缓存的秒数
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 源数据类型
    return:
      type: '{TSource}[]'
      description: 查询结果
    content.vb: Public Overridable Function ToCacheArray(Of TSource)(source As IQueryable(Of TSource), cacheSeconds As Integer = 60, ParamArray keyParams As Object()) As TSource()
  overload: Hybrid.Caching.CacheService.ToCacheArray*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{{TSource}},System.Int32,System.Object[])
  nameWithType.vb: CacheService.ToCacheArray(Of TSource)(IQueryable(Of TSource), Int32, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheArray(Of TSource)(System.Linq.IQueryable(Of TSource), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource)(IQueryable(Of TSource), Int32, Object())
- uid: Hybrid.Caching.CacheService.ToCacheList``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheList``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  id: ToCacheList``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheList<TSource>(IQueryable<TSource>, IFunction, Object[])
  nameWithType: CacheService.ToCacheList<TSource>(IQueryable<TSource>, IFunction, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheList<TSource>(System.Linq.IQueryable<TSource>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheList
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 280
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的列表，如缓存存在，直接返回，否则从数据源查询，并按指定缓存策略存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual List<TSource> ToCacheList<TSource>(IQueryable<TSource> source, IFunction function, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 查询数据源
    - id: function
      type: Hybrid.Authorization.Functions.IFunction
      description: 缓存策略相关功能
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 源数据类型
    return:
      type: System.Collections.Generic.List{{TSource}}
      description: 查询结果
    content.vb: Public Overridable Function ToCacheList(Of TSource)(source As IQueryable(Of TSource), function As IFunction, ParamArray keyParams As Object()) As List(Of TSource)
  overload: Hybrid.Caching.CacheService.ToCacheList*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{{TSource}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  nameWithType.vb: CacheService.ToCacheList(Of TSource)(IQueryable(Of TSource), IFunction, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheList(Of TSource)(System.Linq.IQueryable(Of TSource), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource)(IQueryable(Of TSource), IFunction, Object())
- uid: Hybrid.Caching.CacheService.ToCacheArray``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheArray``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  id: ToCacheArray``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheArray<TSource>(IQueryable<TSource>, IFunction, Object[])
  nameWithType: CacheService.ToCacheArray<TSource>(IQueryable<TSource>, IFunction, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheArray<TSource>(System.Linq.IQueryable<TSource>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheArray
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 299
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的列表，如缓存存在，直接返回，否则从数据源查询，并按指定缓存策略存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual TSource[] ToCacheArray<TSource>(IQueryable<TSource> source, IFunction function, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 查询数据源
    - id: function
      type: Hybrid.Authorization.Functions.IFunction
      description: 缓存策略相关功能
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 源数据类型
    return:
      type: '{TSource}[]'
      description: 查询结果
    content.vb: Public Overridable Function ToCacheArray(Of TSource)(source As IQueryable(Of TSource), function As IFunction, ParamArray keyParams As Object()) As TSource()
  overload: Hybrid.Caching.CacheService.ToCacheArray*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{{TSource}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  nameWithType.vb: CacheService.ToCacheArray(Of TSource)(IQueryable(Of TSource), IFunction, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheArray(Of TSource)(System.Linq.IQueryable(Of TSource), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource)(IQueryable(Of TSource), IFunction, Object())
- uid: Hybrid.Caching.CacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Int32,System.Object[])
  id: ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Int32,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToPageCache<TEntity, TOutputDto>(IQueryable<TEntity>, Expression<Func<TEntity, Boolean>>, PageCondition, Int32, Object[])
  nameWithType: CacheService.ToPageCache<TEntity, TOutputDto>(IQueryable<TEntity>, Expression<Func<TEntity, Boolean>>, PageCondition, Int32, Object[])
  fullName: Hybrid.Caching.CacheService.ToPageCache<TEntity, TOutputDto>(System.Linq.IQueryable<TEntity>, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, Hybrid.Filter.PageCondition, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToPageCache
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 321
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n查询分页数据结果，如缓存存在，直接返回，否则从数据源查找分页结果，并存入缓存中再返回\n"
  example: []
  syntax:
    content: >-
      public virtual PageResult<TOutputDto> ToPageCache<TEntity, TOutputDto>(IQueryable<TEntity> source, Expression<Func<TEntity, bool>> predicate, PageCondition pageCondition, int cacheSeconds = 60, params object[] keyParams)

          where TOutputDto : IOutputDto
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TEntity}}
      description: 要查询的数据集
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: 查询条件谓语表达式
    - id: pageCondition
      type: Hybrid.Filter.PageCondition
      description: 分页查询条件
    - id: cacheSeconds
      type: System.Int32
      description: 缓存的秒数
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TEntity
      description: 实体类型
    - id: TOutputDto
      description: 分页数据类型
    return:
      type: Hybrid.Filter.PageResult{{TOutputDto}}
      description: 查询的分页结果
    content.vb: Public Overridable Function ToPageCache(Of TEntity, TOutputDto As IOutputDto)(source As IQueryable(Of TEntity), predicate As Expression(Of Func(Of TEntity, Boolean)), pageCondition As PageCondition, cacheSeconds As Integer = 60, ParamArray keyParams As Object()) As PageResult(Of TOutputDto)
  overload: Hybrid.Caching.CacheService.ToPageCache*
  implements:
  - Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{{TEntity}},System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},Hybrid.Filter.PageCondition,System.Int32,System.Object[])
  nameWithType.vb: CacheService.ToPageCache(Of TEntity, TOutputDto)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, Boolean)), PageCondition, Int32, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToPageCache(Of TEntity, TOutputDto)(System.Linq.IQueryable(Of TEntity), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), Hybrid.Filter.PageCondition, System.Int32, System.Object())
  name.vb: ToPageCache(Of TEntity, TOutputDto)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, Boolean)), PageCondition, Int32, Object())
- uid: Hybrid.Caching.CacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,Hybrid.Authorization.Functions.IFunction,System.Object[])
  id: ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToPageCache<TEntity, TOutputDto>(IQueryable<TEntity>, Expression<Func<TEntity, Boolean>>, PageCondition, IFunction, Object[])
  nameWithType: CacheService.ToPageCache<TEntity, TOutputDto>(IQueryable<TEntity>, Expression<Func<TEntity, Boolean>>, PageCondition, IFunction, Object[])
  fullName: Hybrid.Caching.CacheService.ToPageCache<TEntity, TOutputDto>(System.Linq.IQueryable<TEntity>, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, Hybrid.Filter.PageCondition, Hybrid.Authorization.Functions.IFunction, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToPageCache
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 342
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n查询分页数据结果，如缓存存在，直接返回，否则从数据源查找分页结果，并存入缓存中再返回\n"
  example: []
  syntax:
    content: >-
      public virtual PageResult<TOutputDto> ToPageCache<TEntity, TOutputDto>(IQueryable<TEntity> source, Expression<Func<TEntity, bool>> predicate, PageCondition pageCondition, IFunction function, params object[] keyParams)

          where TOutputDto : IOutputDto
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TEntity}}
      description: 要查询的数据集
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
      description: 查询条件谓语表达式
    - id: pageCondition
      type: Hybrid.Filter.PageCondition
      description: 分页查询条件
    - id: function
      type: Hybrid.Authorization.Functions.IFunction
      description: 缓存策略相关功能
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TEntity
      description: 实体类型
    - id: TOutputDto
      description: 分页数据类型
    return:
      type: Hybrid.Filter.PageResult{{TOutputDto}}
      description: 查询的分页结果
    content.vb: Public Overridable Function ToPageCache(Of TEntity, TOutputDto As IOutputDto)(source As IQueryable(Of TEntity), predicate As Expression(Of Func(Of TEntity, Boolean)), pageCondition As PageCondition, function As IFunction, ParamArray keyParams As Object()) As PageResult(Of TOutputDto)
  overload: Hybrid.Caching.CacheService.ToPageCache*
  implements:
  - Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{{TEntity}},System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},Hybrid.Filter.PageCondition,Hybrid.Authorization.Functions.IFunction,System.Object[])
  nameWithType.vb: CacheService.ToPageCache(Of TEntity, TOutputDto)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, Boolean)), PageCondition, IFunction, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToPageCache(Of TEntity, TOutputDto)(System.Linq.IQueryable(Of TEntity), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), Hybrid.Filter.PageCondition, Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToPageCache(Of TEntity, TOutputDto)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, Boolean)), PageCondition, IFunction, Object())
- uid: Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  id: ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Int32, Object[])
  nameWithType: CacheService.ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Int32, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheList<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheList
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 362
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的列表，如缓存存在，直接返回，否则从数据源查询，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual List<TOutputDto> ToCacheList<TSource, TOutputDto>(IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate, int cacheSeconds = 60, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 数据源
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}}
      description: 数据查询表达式
    - id: cacheSeconds
      type: System.Int32
      description: 缓存时间：秒
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 数据源的项数据类型
    - id: TOutputDto
      description: 结果集的项数据类型
    return:
      type: System.Collections.Generic.List{{TOutputDto}}
      description: ''
    content.vb: Public Overridable Function ToCacheList(Of TSource, TOutputDto)(source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean)), cacheSeconds As Integer = 60, ParamArray keyParams As Object()) As List(Of TOutputDto)
  overload: Hybrid.Caching.CacheService.ToCacheList*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},System.Int32,System.Object[])
  nameWithType.vb: CacheService.ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Int32, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheList(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Int32, Object())
- uid: Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  id: ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Int32, Object[])
  nameWithType: CacheService.ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Int32, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheArray<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheArray
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 380
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的数组，如缓存存在，直接返回，否则从数据源查询，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual TOutputDto[] ToCacheArray<TSource, TOutputDto>(IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate, int cacheSeconds = 60, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 数据源
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}}
      description: 数据查询表达式
    - id: cacheSeconds
      type: System.Int32
      description: 缓存时间：秒
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 数据源的项数据类型
    - id: TOutputDto
      description: 结果集的项数据类型
    return:
      type: '{TOutputDto}[]'
      description: ''
    content.vb: Public Overridable Function ToCacheArray(Of TSource, TOutputDto)(source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean)), cacheSeconds As Integer = 60, ParamArray keyParams As Object()) As TOutputDto()
  overload: Hybrid.Caching.CacheService.ToCacheArray*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},System.Int32,System.Object[])
  nameWithType.vb: CacheService.ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Int32, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheArray(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Int32, Object())
- uid: Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  id: ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, IFunction, Object[])
  nameWithType: CacheService.ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, IFunction, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheList<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheList
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 398
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的列表，如缓存存在，直接返回，否则从数据源查询，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual List<TOutputDto> ToCacheList<TSource, TOutputDto>(IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate, IFunction function, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 数据源
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}}
      description: 数据查询表达式
    - id: function
      type: Hybrid.Authorization.Functions.IFunction
      description: 缓存策略相关功能
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 数据源的项数据类型
    - id: TOutputDto
      description: 结果集的项数据类型
    return:
      type: System.Collections.Generic.List{{TOutputDto}}
      description: ''
    content.vb: Public Overridable Function ToCacheList(Of TSource, TOutputDto)(source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean)), function As IFunction, ParamArray keyParams As Object()) As List(Of TOutputDto)
  overload: Hybrid.Caching.CacheService.ToCacheList*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  nameWithType.vb: CacheService.ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), IFunction, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheList(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), IFunction, Object())
- uid: Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  id: ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, IFunction, Object[])
  nameWithType: CacheService.ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, IFunction, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheArray<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheArray
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 416
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的数组，如缓存存在，直接返回，否则从数据源查询，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual TOutputDto[] ToCacheArray<TSource, TOutputDto>(IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate, IFunction function, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 数据源
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}}
      description: 数据查询表达式
    - id: function
      type: Hybrid.Authorization.Functions.IFunction
      description: 缓存策略相关功能
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 数据源的项数据类型
    - id: TOutputDto
      description: 结果集的项数据类型
    return:
      type: '{TOutputDto}[]'
      description: ''
    content.vb: Public Overridable Function ToCacheArray(Of TSource, TOutputDto)(source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean)), function As IFunction, ParamArray keyParams As Object()) As TOutputDto()
  overload: Hybrid.Caching.CacheService.ToCacheArray*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  nameWithType.vb: CacheService.ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), IFunction, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheArray(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), IFunction, Object())
- uid: Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  id: ToCacheList``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Int32, Object[])
  nameWithType: CacheService.ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Int32, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheList<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheList
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 433
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的列表，如缓存存在，直接返回，否则从数据源查询，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual List<TOutputDto> ToCacheList<TSource, TOutputDto>(IQueryable<TSource> source, int cacheSeconds = 60, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 查询数据源
    - id: cacheSeconds
      type: System.Int32
      description: 缓存的秒数
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 源数据类型
    - id: TOutputDto
      description: 结果集的项数据类型
    return:
      type: System.Collections.Generic.List{{TOutputDto}}
      description: 查询结果
    content.vb: Public Overridable Function ToCacheList(Of TSource, TOutputDto)(source As IQueryable(Of TSource), cacheSeconds As Integer = 60, ParamArray keyParams As Object()) As List(Of TOutputDto)
  overload: Hybrid.Caching.CacheService.ToCacheList*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},System.Int32,System.Object[])
  nameWithType.vb: CacheService.ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Int32, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheList(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Int32, Object())
- uid: Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  id: ToCacheArray``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Int32, Object[])
  nameWithType: CacheService.ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Int32, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheArray<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Int32, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheArray
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 448
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的数组，如缓存存在，直接返回，否则从数据源查询，并存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual TOutputDto[] ToCacheArray<TSource, TOutputDto>(IQueryable<TSource> source, int cacheSeconds = 60, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 查询数据源
    - id: cacheSeconds
      type: System.Int32
      description: 缓存的秒数
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 源数据类型
    - id: TOutputDto
      description: 结果集的项数据类型
    return:
      type: '{TOutputDto}[]'
      description: 查询结果
    content.vb: Public Overridable Function ToCacheArray(Of TSource, TOutputDto)(source As IQueryable(Of TSource), cacheSeconds As Integer = 60, ParamArray keyParams As Object()) As TOutputDto()
  overload: Hybrid.Caching.CacheService.ToCacheArray*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},System.Int32,System.Object[])
  nameWithType.vb: CacheService.ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Int32, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheArray(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Int32, Object())
- uid: Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheList``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  id: ToCacheList``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, IFunction, Object[])
  nameWithType: CacheService.ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, IFunction, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheList<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheList
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 463
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的列表，如缓存存在，直接返回，否则从数据源查询，并按指定缓存策略存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual List<TOutputDto> ToCacheList<TSource, TOutputDto>(IQueryable<TSource> source, IFunction function, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 查询数据源
    - id: function
      type: Hybrid.Authorization.Functions.IFunction
      description: 缓存策略相关功能
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 源数据类型
    - id: TOutputDto
      description: 结果集的项数据类型
    return:
      type: System.Collections.Generic.List{{TOutputDto}}
      description: 查询结果
    content.vb: Public Overridable Function ToCacheList(Of TSource, TOutputDto)(source As IQueryable(Of TSource), function As IFunction, ParamArray keyParams As Object()) As List(Of TOutputDto)
  overload: Hybrid.Caching.CacheService.ToCacheList*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  nameWithType.vb: CacheService.ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), IFunction, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheList(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), IFunction, Object())
- uid: Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.CacheService.ToCacheArray``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  id: ToCacheArray``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.CacheService
  langs:
  - csharp
  - vb
  name: ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, IFunction, Object[])
  nameWithType: CacheService.ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, IFunction, Object[])
  fullName: Hybrid.Caching.CacheService.ToCacheArray<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  type: Method
  source:
    remote:
      path: src/Hybrid/Caching/CacheService.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToCacheArray
    path: ../src/Hybrid/Caching/CacheService.cs
    startLine: 478
  assemblies:
  - Hybrid
  namespace: Hybrid.Caching
  summary: "\n将结果转换为缓存的列表，如缓存存在，直接返回，否则从数据源查询，并按指定缓存策略存入缓存中再返回\n"
  example: []
  syntax:
    content: public virtual TOutputDto[] ToCacheArray<TSource, TOutputDto>(IQueryable<TSource> source, IFunction function, params object[] keyParams)
    parameters:
    - id: source
      type: System.Linq.IQueryable{{TSource}}
      description: 查询数据源
    - id: function
      type: Hybrid.Authorization.Functions.IFunction
      description: 缓存策略相关功能
    - id: keyParams
      type: System.Object[]
      description: 缓存键参数
    typeParameters:
    - id: TSource
      description: 源数据类型
    - id: TOutputDto
      description: 结果集的项数据类型
    return:
      type: '{TOutputDto}[]'
      description: 查询结果
    content.vb: Public Overridable Function ToCacheArray(Of TSource, TOutputDto)(source As IQueryable(Of TSource), function As IFunction, ParamArray keyParams As Object()) As TOutputDto()
  overload: Hybrid.Caching.CacheService.ToCacheArray*
  implements:
  - Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  nameWithType.vb: CacheService.ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), IFunction, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Hybrid.Caching.CacheService.ToCacheArray(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), IFunction, Object())
references:
- uid: Hybrid.Caching
  commentId: N:Hybrid.Caching
  name: Hybrid.Caching
  nameWithType: Hybrid.Caching
  fullName: Hybrid.Caching
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hybrid.Caching.ICacheService
  commentId: T:Hybrid.Caching.ICacheService
  parent: Hybrid.Caching
  name: ICacheService
  nameWithType: ICacheService
  fullName: Hybrid.Caching.ICacheService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Entity.EntityExtensions.CheckICreatedTime``2
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  parent: OSharp.Entity.EntityExtensions
  definition: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<CacheService, TKey>()
  nameWithType: EntityExtensions.CheckICreatedTime<CacheService, TKey>()
  fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<Hybrid.Caching.CacheService, TKey>()
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of CacheService, TKey)()
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of Hybrid.Caching.CacheService, TKey)()
  name.vb: CheckICreatedTime(Of CacheService, TKey)()
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime<CacheService, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<CacheService, TKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<Hybrid.Caching.CacheService, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime(Of CacheService, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of CacheService, TKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of Hybrid.Caching.CacheService, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: OSharp.Entity.EntityExtensions
  definition: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckICreationAudited<CacheService, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<CacheService, TKey, TUserKey>(IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<Hybrid.Caching.CacheService, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of CacheService, TKey, TUserKey)(IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of Hybrid.Caching.CacheService, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of CacheService, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<CacheService, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<CacheService, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<Hybrid.Caching.CacheService, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of CacheService, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of CacheService, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of Hybrid.Caching.CacheService, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: OSharp.Entity.EntityExtensions
  definition: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckIUpdateAudited<CacheService, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<CacheService, TKey, TUserKey>(IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<Hybrid.Caching.CacheService, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of CacheService, TKey, TUserKey)(IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Caching.CacheService, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of CacheService, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<CacheService, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<CacheService, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<Hybrid.Caching.CacheService, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of CacheService, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of CacheService, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Caching.CacheService, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  name: CastTo(Type)
  nameWithType: ObjectExtensions.CastTo(Type)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1({T})
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  name: CastTo<T>(T)
  nameWithType: ObjectExtensions.CastTo<T>(T)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>(T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(T)
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)(T)
  name.vb: CastTo(Of T)(T)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Extensions.ObjectExtensions.IsIn``1(Hybrid.Caching.CacheService[])
  commentId: M:OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<CacheService>(CacheService[])
  nameWithType: ObjectExtensions.IsIn<CacheService>(CacheService[])
  fullName: OSharp.Extensions.ObjectExtensions.IsIn<Hybrid.Caching.CacheService>(Hybrid.Caching.CacheService[])
  nameWithType.vb: ObjectExtensions.IsIn(Of CacheService)(CacheService())
  fullName.vb: OSharp.Extensions.ObjectExtensions.IsIn(Of Hybrid.Caching.CacheService)(Hybrid.Caching.CacheService())
  name.vb: IsIn(Of CacheService)(CacheService())
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn<CacheService>
    nameWithType: ObjectExtensions.IsIn<CacheService>
    fullName: OSharp.Extensions.ObjectExtensions.IsIn<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn(Of CacheService)
    nameWithType: ObjectExtensions.IsIn(Of CacheService)
    fullName: OSharp.Extensions.ObjectExtensions.IsIn(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.ToDynamic
  commentId: M:OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: ObjectExtensions.ToDynamic()
  fullName: OSharp.Extensions.ObjectExtensions.ToDynamic()
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Extensions.ObjectExtensions.DeepClone``1
  commentId: M:OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<CacheService>()
  nameWithType: ObjectExtensions.DeepClone<CacheService>()
  fullName: OSharp.Extensions.ObjectExtensions.DeepClone<Hybrid.Caching.CacheService>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of CacheService)()
  fullName.vb: OSharp.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Caching.CacheService)()
  name.vb: DeepClone(Of CacheService)()
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone<CacheService>
    nameWithType: ObjectExtensions.DeepClone<CacheService>
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone(Of CacheService)
    nameWithType: ObjectExtensions.DeepClone(Of CacheService)
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Caching.CacheService,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  parent: OSharp.Extensions.ParameterCheckExtensions
  definition: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<CacheService>(Func<CacheService, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<CacheService>(Func<CacheService, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Caching.CacheService>(System.Func<Hybrid.Caching.CacheService, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of CacheService)(Func(Of CacheService, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Caching.CacheService)(System.Func(Of Hybrid.Caching.CacheService, System.Boolean), System.String)
  name.vb: Required(Of CacheService)(Func(Of CacheService, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required<CacheService>
    nameWithType: ParameterCheckExtensions.Required<CacheService>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required(Of CacheService)
    nameWithType: ParameterCheckExtensions.Required(Of CacheService)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Caching.CacheService,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  parent: OSharp.Extensions.ParameterCheckExtensions
  definition: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<CacheService, TException>(Func<CacheService, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<CacheService, TException>(Func<CacheService, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Caching.CacheService, TException>(System.Func<Hybrid.Caching.CacheService, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of CacheService, TException)(Func(Of CacheService, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Caching.CacheService, TException)(System.Func(Of Hybrid.Caching.CacheService, System.Boolean), System.String)
  name.vb: Required(Of CacheService, TException)(Func(Of CacheService, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required<CacheService, TException>
    nameWithType: ParameterCheckExtensions.Required<CacheService, TException>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Caching.CacheService, TException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required(Of CacheService, TException)
    nameWithType: ParameterCheckExtensions.Required(Of CacheService, TException)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Caching.CacheService, TException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  parent: OSharp.Extensions.ParameterCheckExtensions
  definition: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  name: CheckNotNull<CacheService>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<CacheService>(String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Caching.CacheService>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of CacheService)(String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Caching.CacheService)(System.String)
  name.vb: CheckNotNull(Of CacheService)(String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull<CacheService>
    nameWithType: ParameterCheckExtensions.CheckNotNull<CacheService>
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull(Of CacheService)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of CacheService)
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Caching.CacheService},System.Action{System.Exception},System.Action{Hybrid.Caching.CacheService})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<CacheService>(Action<CacheService>, Action<Exception>, Action<CacheService>)
  nameWithType: TryCatchExtensions.TryCatch<CacheService>(Action<CacheService>, Action<Exception>, Action<CacheService>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService>(System.Action<Hybrid.Caching.CacheService>, System.Action<System.Exception>, System.Action<Hybrid.Caching.CacheService>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CacheService)(Action(Of CacheService), Action(Of Exception), Action(Of CacheService))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService)(System.Action(Of Hybrid.Caching.CacheService), System.Action(Of System.Exception), System.Action(Of Hybrid.Caching.CacheService))
  name.vb: TryCatch(Of CacheService)(Action(Of CacheService), Action(Of Exception), Action(Of CacheService))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<CacheService>
    nameWithType: TryCatchExtensions.TryCatch<CacheService>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of CacheService)
    nameWithType: TryCatchExtensions.TryCatch(Of CacheService)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Caching.CacheService},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  name: TryCatch<CacheService>(Action<CacheService>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<CacheService>(Action<CacheService>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService>(System.Action<Hybrid.Caching.CacheService>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CacheService)(Action(Of CacheService), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService)(System.Action(Of Hybrid.Caching.CacheService), System.Action(Of System.Exception))
  name.vb: TryCatch(Of CacheService)(Action(Of CacheService), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch<CacheService>
    nameWithType: TryCatchExtensions.TryCatch<CacheService>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of CacheService)
    nameWithType: TryCatchExtensions.TryCatch(Of CacheService)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Caching.CacheService,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Caching.CacheService})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<CacheService, TResult>(Func<CacheService, TResult>, Action<Exception>, Action<CacheService>)
  nameWithType: TryCatchExtensions.TryCatch<CacheService, TResult>(Func<CacheService, TResult>, Action<Exception>, Action<CacheService>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService, TResult>(System.Func<Hybrid.Caching.CacheService, TResult>, System.Action<System.Exception>, System.Action<Hybrid.Caching.CacheService>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CacheService, TResult)(Func(Of CacheService, TResult), Action(Of Exception), Action(Of CacheService))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService, TResult)(System.Func(Of Hybrid.Caching.CacheService, TResult), System.Action(Of System.Exception), System.Action(Of Hybrid.Caching.CacheService))
  name.vb: TryCatch(Of CacheService, TResult)(Func(Of CacheService, TResult), Action(Of Exception), Action(Of CacheService))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<CacheService, TResult>
    nameWithType: TryCatchExtensions.TryCatch<CacheService, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of CacheService, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of CacheService, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Caching.CacheService,{TResult}},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  name: TryCatch<CacheService, TResult>(Func<CacheService, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<CacheService, TResult>(Func<CacheService, TResult>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService, TResult>(System.Func<Hybrid.Caching.CacheService, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CacheService, TResult)(Func(Of CacheService, TResult), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService, TResult)(System.Func(Of Hybrid.Caching.CacheService, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of CacheService, TResult)(Func(Of CacheService, TResult), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<CacheService, TResult>
    nameWithType: TryCatchExtensions.TryCatch<CacheService, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of CacheService, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of CacheService, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Caching.CacheService},System.Action{Hybrid.Caching.CacheService})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  name: TryFinally<CacheService>(Action<CacheService>, Action<CacheService>)
  nameWithType: TryCatchExtensions.TryFinally<CacheService>(Action<CacheService>, Action<CacheService>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<Hybrid.Caching.CacheService>(System.Action<Hybrid.Caching.CacheService>, System.Action<Hybrid.Caching.CacheService>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of CacheService)(Action(Of CacheService), Action(Of CacheService))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Caching.CacheService)(System.Action(Of Hybrid.Caching.CacheService), System.Action(Of Hybrid.Caching.CacheService))
  name.vb: TryFinally(Of CacheService)(Action(Of CacheService), Action(Of CacheService))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally<CacheService>
    nameWithType: TryCatchExtensions.TryFinally<CacheService>
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally(Of CacheService)
    nameWithType: TryCatchExtensions.TryFinally(Of CacheService)
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  commentId: M:OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  parent: OSharp.Json.JsonExtensions
  definition: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  name: ToJsonString(Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Boolean, Boolean)
  fullName: OSharp.Json.JsonExtensions.ToJsonString(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Mapping.MapperExtensions.MapTo``1
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  parent: OSharp.Mapping.MapperExtensions
  definition: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  name: MapTo<TTarget>()
  nameWithType: MapperExtensions.MapTo<TTarget>()
  fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>()
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)()
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)()
  name.vb: MapTo(Of TTarget)()
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Mapping.MapperExtensions.MapTo``2({TTarget})
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  parent: OSharp.Mapping.MapperExtensions
  definition: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<CacheService, TTarget>(TTarget)
  nameWithType: MapperExtensions.MapTo<CacheService, TTarget>(TTarget)
  fullName: OSharp.Mapping.MapperExtensions.MapTo<Hybrid.Caching.CacheService, TTarget>(TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of CacheService, TTarget)(TTarget)
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of Hybrid.Caching.CacheService, TTarget)(TTarget)
  name.vb: MapTo(Of CacheService, TTarget)(TTarget)
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo<CacheService, TTarget>
    nameWithType: MapperExtensions.MapTo<CacheService, TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<Hybrid.Caching.CacheService, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo(Of CacheService, TTarget)
    nameWithType: MapperExtensions.MapTo(Of CacheService, TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of Hybrid.Caching.CacheService, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Reflection.LockExtensions.Locking(System.Action)
  commentId: M:OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  name: Locking(Action)
  nameWithType: LockExtensions.Locking(Action)
  fullName: OSharp.Reflection.LockExtensions.Locking(System.Action)
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Caching.CacheService})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  name: Locking<CacheService>(Action<CacheService>)
  nameWithType: LockExtensions.Locking<CacheService>(Action<CacheService>)
  fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Caching.CacheService>(System.Action<Hybrid.Caching.CacheService>)
  nameWithType.vb: LockExtensions.Locking(Of CacheService)(Action(Of CacheService))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Caching.CacheService)(System.Action(Of Hybrid.Caching.CacheService))
  name.vb: Locking(Of CacheService)(Action(Of CacheService))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking<CacheService>
    nameWithType: LockExtensions.Locking<CacheService>
    fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking(Of CacheService)
    nameWithType: LockExtensions.Locking(Of CacheService)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  name: Locking<TResult>(Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Func<TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<TResult>(System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Func(Of TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of TResult)(System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.OSharp.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Caching.CacheService,{TResult}})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  name: Locking<CacheService, TResult>(Func<CacheService, TResult>)
  nameWithType: LockExtensions.Locking<CacheService, TResult>(Func<CacheService, TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Caching.CacheService, TResult>(System.Func<Hybrid.Caching.CacheService, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of CacheService, TResult)(Func(Of CacheService, TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Caching.CacheService, TResult)(System.Func(Of Hybrid.Caching.CacheService, TResult))
  name.vb: Locking(Of CacheService, TResult)(Func(Of CacheService, TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking<CacheService, TResult>
    nameWithType: LockExtensions.Locking<CacheService, TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Caching.CacheService, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking(Of CacheService, TResult)
    nameWithType: LockExtensions.Locking(Of CacheService, TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Caching.CacheService, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  name: CastTo(Type)
  nameWithType: ObjectExtensions.CastTo(Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  name: CastTo<T>(T)
  nameWithType: ObjectExtensions.CastTo<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(T)
  name.vb: CastTo(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Caching.CacheService[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<CacheService>(CacheService[])
  nameWithType: ObjectExtensions.IsIn<CacheService>(CacheService[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Caching.CacheService>(Hybrid.Caching.CacheService[])
  nameWithType.vb: ObjectExtensions.IsIn(Of CacheService)(CacheService())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Caching.CacheService)(Hybrid.Caching.CacheService())
  name.vb: IsIn(Of CacheService)(CacheService())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn<CacheService>
    nameWithType: ObjectExtensions.IsIn<CacheService>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn(Of CacheService)
    nameWithType: ObjectExtensions.IsIn(Of CacheService)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: ObjectExtensions.ToDynamic()
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<CacheService>()
  nameWithType: ObjectExtensions.DeepClone<CacheService>()
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Caching.CacheService>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of CacheService)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Caching.CacheService)()
  name.vb: DeepClone(Of CacheService)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone<CacheService>
    nameWithType: ObjectExtensions.DeepClone<CacheService>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone(Of CacheService)
    nameWithType: ObjectExtensions.DeepClone(Of CacheService)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Caching.CacheService,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<CacheService>(Func<CacheService, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<CacheService>(Func<CacheService, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Caching.CacheService>(System.Func<Hybrid.Caching.CacheService, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of CacheService)(Func(Of CacheService, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Caching.CacheService)(System.Func(Of Hybrid.Caching.CacheService, System.Boolean), System.String)
  name.vb: Required(Of CacheService)(Func(Of CacheService, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required<CacheService>
    nameWithType: ParameterCheckExtensions.Required<CacheService>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required(Of CacheService)
    nameWithType: ParameterCheckExtensions.Required(Of CacheService)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Caching.CacheService,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<CacheService, TException>(Func<CacheService, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<CacheService, TException>(Func<CacheService, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Caching.CacheService, TException>(System.Func<Hybrid.Caching.CacheService, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of CacheService, TException)(Func(Of CacheService, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Caching.CacheService, TException)(System.Func(Of Hybrid.Caching.CacheService, System.Boolean), System.String)
  name.vb: Required(Of CacheService, TException)(Func(Of CacheService, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required<CacheService, TException>
    nameWithType: ParameterCheckExtensions.Required<CacheService, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Caching.CacheService, TException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required(Of CacheService, TException)
    nameWithType: ParameterCheckExtensions.Required(Of CacheService, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Caching.CacheService, TException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  name: CheckNotNull<CacheService>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<CacheService>(String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Caching.CacheService>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of CacheService)(String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Caching.CacheService)(System.String)
  name.vb: CheckNotNull(Of CacheService)(String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull<CacheService>
    nameWithType: ParameterCheckExtensions.CheckNotNull<CacheService>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull(Of CacheService)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of CacheService)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Caching.CacheService},System.Action{System.Exception},System.Action{Hybrid.Caching.CacheService})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<CacheService>(Action<CacheService>, Action<Exception>, Action<CacheService>)
  nameWithType: TryCatchExtensions.TryCatch<CacheService>(Action<CacheService>, Action<Exception>, Action<CacheService>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService>(System.Action<Hybrid.Caching.CacheService>, System.Action<System.Exception>, System.Action<Hybrid.Caching.CacheService>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CacheService)(Action(Of CacheService), Action(Of Exception), Action(Of CacheService))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService)(System.Action(Of Hybrid.Caching.CacheService), System.Action(Of System.Exception), System.Action(Of Hybrid.Caching.CacheService))
  name.vb: TryCatch(Of CacheService)(Action(Of CacheService), Action(Of Exception), Action(Of CacheService))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<CacheService>
    nameWithType: TryCatchExtensions.TryCatch<CacheService>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of CacheService)
    nameWithType: TryCatchExtensions.TryCatch(Of CacheService)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Caching.CacheService},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  name: TryCatch<CacheService>(Action<CacheService>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<CacheService>(Action<CacheService>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService>(System.Action<Hybrid.Caching.CacheService>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CacheService)(Action(Of CacheService), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService)(System.Action(Of Hybrid.Caching.CacheService), System.Action(Of System.Exception))
  name.vb: TryCatch(Of CacheService)(Action(Of CacheService), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch<CacheService>
    nameWithType: TryCatchExtensions.TryCatch<CacheService>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of CacheService)
    nameWithType: TryCatchExtensions.TryCatch(Of CacheService)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Caching.CacheService,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Caching.CacheService})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<CacheService, TResult>(Func<CacheService, TResult>, Action<Exception>, Action<CacheService>)
  nameWithType: TryCatchExtensions.TryCatch<CacheService, TResult>(Func<CacheService, TResult>, Action<Exception>, Action<CacheService>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService, TResult>(System.Func<Hybrid.Caching.CacheService, TResult>, System.Action<System.Exception>, System.Action<Hybrid.Caching.CacheService>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CacheService, TResult)(Func(Of CacheService, TResult), Action(Of Exception), Action(Of CacheService))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService, TResult)(System.Func(Of Hybrid.Caching.CacheService, TResult), System.Action(Of System.Exception), System.Action(Of Hybrid.Caching.CacheService))
  name.vb: TryCatch(Of CacheService, TResult)(Func(Of CacheService, TResult), Action(Of Exception), Action(Of CacheService))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<CacheService, TResult>
    nameWithType: TryCatchExtensions.TryCatch<CacheService, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of CacheService, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of CacheService, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Caching.CacheService,{TResult}},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  name: TryCatch<CacheService, TResult>(Func<CacheService, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<CacheService, TResult>(Func<CacheService, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService, TResult>(System.Func<Hybrid.Caching.CacheService, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of CacheService, TResult)(Func(Of CacheService, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService, TResult)(System.Func(Of Hybrid.Caching.CacheService, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of CacheService, TResult)(Func(Of CacheService, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<CacheService, TResult>
    nameWithType: TryCatchExtensions.TryCatch<CacheService, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Caching.CacheService, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of CacheService, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of CacheService, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Caching.CacheService, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Caching.CacheService},System.Action{Hybrid.Caching.CacheService})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  name: TryFinally<CacheService>(Action<CacheService>, Action<CacheService>)
  nameWithType: TryCatchExtensions.TryFinally<CacheService>(Action<CacheService>, Action<CacheService>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Caching.CacheService>(System.Action<Hybrid.Caching.CacheService>, System.Action<Hybrid.Caching.CacheService>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of CacheService)(Action(Of CacheService), Action(Of CacheService))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Caching.CacheService)(System.Action(Of Hybrid.Caching.CacheService), System.Action(Of Hybrid.Caching.CacheService))
  name.vb: TryFinally(Of CacheService)(Action(Of CacheService), Action(Of CacheService))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally<CacheService>
    nameWithType: TryCatchExtensions.TryFinally<CacheService>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally(Of CacheService)
    nameWithType: TryCatchExtensions.TryFinally(Of CacheService)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  parent: Hybrid.Json.JsonExtensions
  definition: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  name: ToJsonString(Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  name: MapTo<TTarget>()
  nameWithType: MapperExtensions.MapTo<TTarget>()
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>()
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)()
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)()
  name.vb: MapTo(Of TTarget)()
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<CacheService, TTarget>(TTarget)
  nameWithType: MapperExtensions.MapTo<CacheService, TTarget>(TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Caching.CacheService, TTarget>(TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of CacheService, TTarget)(TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Caching.CacheService, TTarget)(TTarget)
  name.vb: MapTo(Of CacheService, TTarget)(TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo<CacheService, TTarget>
    nameWithType: MapperExtensions.MapTo<CacheService, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Caching.CacheService, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo(Of CacheService, TTarget)
    nameWithType: MapperExtensions.MapTo(Of CacheService, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Caching.CacheService, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  name: Locking(Action)
  nameWithType: LockExtensions.Locking(Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Caching.CacheService})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  name: Locking<CacheService>(Action<CacheService>)
  nameWithType: LockExtensions.Locking<CacheService>(Action<CacheService>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Caching.CacheService>(System.Action<Hybrid.Caching.CacheService>)
  nameWithType.vb: LockExtensions.Locking(Of CacheService)(Action(Of CacheService))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Caching.CacheService)(System.Action(Of Hybrid.Caching.CacheService))
  name.vb: Locking(Of CacheService)(Action(Of CacheService))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking<CacheService>
    nameWithType: LockExtensions.Locking<CacheService>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Caching.CacheService>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking(Of CacheService)
    nameWithType: LockExtensions.Locking(Of CacheService)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Caching.CacheService)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  name: Locking<TResult>(Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Caching.CacheService,{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  name: Locking<CacheService, TResult>(Func<CacheService, TResult>)
  nameWithType: LockExtensions.Locking<CacheService, TResult>(Func<CacheService, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Caching.CacheService, TResult>(System.Func<Hybrid.Caching.CacheService, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of CacheService, TResult)(Func(Of CacheService, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Caching.CacheService, TResult)(System.Func(Of Hybrid.Caching.CacheService, TResult))
  name.vb: Locking(Of CacheService, TResult)(Func(Of CacheService, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking<CacheService, TResult>
    nameWithType: LockExtensions.Locking<CacheService, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Caching.CacheService, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking(Of CacheService, TResult)
    nameWithType: LockExtensions.Locking(Of CacheService, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Caching.CacheService, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Caching.CacheService
    name: CacheService
    nameWithType: CacheService
    fullName: Hybrid.Caching.CacheService
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<CacheService, TKey>()
  nameWithType: EntityExtensions.CheckICreatedTime<CacheService, TKey>()
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Caching.CacheService, TKey>()
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of CacheService, TKey)()
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Caching.CacheService, TKey)()
  name.vb: CheckICreatedTime(Of CacheService, TKey)()
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime<CacheService, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<CacheService, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Caching.CacheService, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime(Of CacheService, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of CacheService, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Caching.CacheService, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckICreationAudited<CacheService, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<CacheService, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Caching.CacheService, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of CacheService, TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Caching.CacheService, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of CacheService, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<CacheService, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<CacheService, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Caching.CacheService, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of CacheService, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of CacheService, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Caching.CacheService, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.CacheService.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckIUpdateAudited<CacheService, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<CacheService, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Caching.CacheService, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of CacheService, TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Caching.CacheService, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of CacheService, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<CacheService, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<CacheService, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Caching.CacheService, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of CacheService, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of CacheService, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Caching.CacheService, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  name.vb: CheckICreatedTime(Of TEntity, TKey)(TEntity)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime<TEntity, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime(Of TEntity, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Entity.EntityExtensions
  commentId: T:OSharp.Entity.EntityExtensions
  parent: OSharp.Entity
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: OSharp.Entity.EntityExtensions
- uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  isExternal: true
  name: CastTo(Object, Type)
  nameWithType: ObjectExtensions.CastTo(Object, Type)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo(System.Object, System.Type)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions
  commentId: T:OSharp.Extensions.ObjectExtensions
  parent: OSharp.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: OSharp.Extensions.ObjectExtensions
- uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  isExternal: true
  name: CastTo<T>(Object, T)
  nameWithType: ObjectExtensions.CastTo<T>(Object, T)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>(System.Object, T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object, T)
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)(System.Object, T)
  name.vb: CastTo(Of T)(Object, T)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  commentId: M:OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<T>(T, T[])
  nameWithType: ObjectExtensions.IsIn<T>(T, T[])
  fullName: OSharp.Extensions.ObjectExtensions.IsIn<T>(T, T[])
  nameWithType.vb: ObjectExtensions.IsIn(Of T)(T, T())
  fullName.vb: OSharp.Extensions.ObjectExtensions.IsIn(Of T)(T, T())
  name.vb: IsIn(Of T)(T, T())
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn<T>
    nameWithType: ObjectExtensions.IsIn<T>
    fullName: OSharp.Extensions.ObjectExtensions.IsIn<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn(Of T)
    nameWithType: ObjectExtensions.IsIn(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.IsIn(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  commentId: M:OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: ObjectExtensions.ToDynamic(Object)
  fullName: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  commentId: M:OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: OSharp.Extensions.ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: OSharp.Extensions.ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T>(T, Func<T, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T)(T, Func(Of T, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of T)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T>
    nameWithType: ParameterCheckExtensions.Required<T>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T)
    nameWithType: ParameterCheckExtensions.Required(Of T)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ParameterCheckExtensions
  commentId: T:OSharp.Extensions.ParameterCheckExtensions
  parent: OSharp.Extensions
  name: ParameterCheckExtensions
  nameWithType: ParameterCheckExtensions
  fullName: OSharp.Extensions.ParameterCheckExtensions
- uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T, TException>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T, TException>(T, Func<T, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T, TException>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T, TException)(T, Func(Of T, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of T, TException)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T, TException)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T, TException>
    nameWithType: ParameterCheckExtensions.Required<T, TException>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T, TException>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T, TException)
    nameWithType: ParameterCheckExtensions.Required(Of T, TException)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of T, TException)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  isExternal: true
  name: CheckNotNull<T>(T, String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<T>(T, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<T>(T, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of T)(T, String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull<T>
    nameWithType: ParameterCheckExtensions.CheckNotNull<T>
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of T)
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions
  commentId: T:OSharp.Extensions.TryCatchExtensions
  parent: OSharp.Extensions
  name: TryCatchExtensions
  nameWithType: TryCatchExtensions
  fullName: OSharp.Extensions.TryCatchExtensions
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  isExternal: true
  name: TryFinally<T>(T, Action<T>, Action<T>)
  nameWithType: TryCatchExtensions.TryFinally<T>(T, Action<T>, Action<T>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<T>(T, System.Action<T>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of T)(T, Action(Of T), Action(Of T))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryFinally(Of T)(T, System.Action(Of T), System.Action(Of T))
  name.vb: TryFinally(Of T)(T, Action(Of T), Action(Of T))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally<T>
    nameWithType: TryCatchExtensions.TryFinally<T>
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally(Of T)
    nameWithType: TryCatchExtensions.TryFinally(Of T)
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  commentId: M:OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  isExternal: true
  name: ToJsonString(Object, Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Object, Boolean, Boolean)
  fullName: OSharp.Json.JsonExtensions.ToJsonString(System.Object, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Json.JsonExtensions
  commentId: T:OSharp.Json.JsonExtensions
  parent: OSharp.Json
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: OSharp.Json.JsonExtensions
- uid: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  isExternal: true
  name: MapTo<TTarget>(Object)
  nameWithType: MapperExtensions.MapTo<TTarget>(Object)
  fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>(System.Object)
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)(Object)
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)(System.Object)
  name.vb: MapTo(Of TTarget)(Object)
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Mapping.MapperExtensions
  commentId: T:OSharp.Mapping.MapperExtensions
  parent: OSharp.Mapping
  name: MapperExtensions
  nameWithType: MapperExtensions
  fullName: OSharp.Mapping.MapperExtensions
- uid: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType: MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  fullName: OSharp.Mapping.MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  name.vb: MapTo(Of TSource, TTarget)(TSource, TTarget)
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo<TSource, TTarget>
    nameWithType: MapperExtensions.MapTo<TSource, TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<TSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo(Of TSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TSource, TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  commentId: M:OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  isExternal: true
  name: Locking(Object, Action)
  nameWithType: LockExtensions.Locking(Object, Action)
  fullName: OSharp.Reflection.LockExtensions.Locking(System.Object, System.Action)
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions
  commentId: T:OSharp.Reflection.LockExtensions
  parent: OSharp.Reflection
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: OSharp.Reflection.LockExtensions
- uid: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  isExternal: true
  name: Locking<T>(T, Action<T>)
  nameWithType: LockExtensions.Locking<T>(T, Action<T>)
  fullName: OSharp.Reflection.LockExtensions.Locking<T>(T, System.Action<T>)
  nameWithType.vb: LockExtensions.Locking(Of T)(T, Action(Of T))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of T)(T, System.Action(Of T))
  name.vb: Locking(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking<T>
    nameWithType: LockExtensions.Locking<T>
    fullName: OSharp.Reflection.LockExtensions.Locking<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking(Of T)
    nameWithType: LockExtensions.Locking(Of T)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  isExternal: true
  name: Locking<TResult>(Object, Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Object, Func<TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<TResult>(System.Object, System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Object, Func(Of TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of TResult)(System.Object, System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Object, Func(Of TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  isExternal: true
  name: Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  nameWithType: LockExtensions.Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<TSource, TResult>(TSource, System.Func<TSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of TSource, TResult)(TSource, System.Func(Of TSource, TResult))
  name.vb: Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking<TSource, TResult>
    nameWithType: LockExtensions.Locking<TSource, TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking(Of TSource, TResult)
    nameWithType: LockExtensions.Locking(Of TSource, TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  isExternal: true
  name: CastTo(Object, Type)
  nameWithType: ObjectExtensions.CastTo(Object, Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object, System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions
  commentId: T:Hybrid.Extensions.ObjectExtensions
  parent: Hybrid.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Hybrid.Extensions.ObjectExtensions
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  isExternal: true
  name: CastTo<T>(Object, T)
  nameWithType: ObjectExtensions.CastTo<T>(Object, T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object, T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object, T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object, T)
  name.vb: CastTo(Of T)(Object, T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<T>(T, T[])
  nameWithType: ObjectExtensions.IsIn<T>(T, T[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>(T, T[])
  nameWithType.vb: ObjectExtensions.IsIn(Of T)(T, T())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)(T, T())
  name.vb: IsIn(Of T)(T, T())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn<T>
    nameWithType: ObjectExtensions.IsIn<T>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn(Of T)
    nameWithType: ObjectExtensions.IsIn(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: ObjectExtensions.ToDynamic(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T>
    nameWithType: ParameterCheckExtensions.Required<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T)
    nameWithType: ParameterCheckExtensions.Required(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions
  commentId: T:Hybrid.Extensions.ParameterCheckExtensions
  parent: Hybrid.Extensions
  name: ParameterCheckExtensions
  nameWithType: ParameterCheckExtensions
  fullName: Hybrid.Extensions.ParameterCheckExtensions
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T, TException>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T, TException>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T, TException)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T, TException)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T, TException>
    nameWithType: ParameterCheckExtensions.Required<T, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T, TException)
    nameWithType: ParameterCheckExtensions.Required(Of T, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  isExternal: true
  name: CheckNotNull<T>(T, String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<T>(T, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>(T, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of T)(T, String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull<T>
    nameWithType: ParameterCheckExtensions.CheckNotNull<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions
  commentId: T:Hybrid.Extensions.TryCatchExtensions
  parent: Hybrid.Extensions
  name: TryCatchExtensions
  nameWithType: TryCatchExtensions
  fullName: Hybrid.Extensions.TryCatchExtensions
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  isExternal: true
  name: TryFinally<T>(T, Action<T>, Action<T>)
  nameWithType: TryCatchExtensions.TryFinally<T>(T, Action<T>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>(T, System.Action<T>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of T)(T, Action(Of T), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)(T, System.Action(Of T), System.Action(Of T))
  name.vb: TryFinally(Of T)(T, Action(Of T), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally<T>
    nameWithType: TryCatchExtensions.TryFinally<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally(Of T)
    nameWithType: TryCatchExtensions.TryFinally(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  isExternal: true
  name: ToJsonString(Object, Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Object, Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Object, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions
  commentId: T:Hybrid.Json.JsonExtensions
  parent: Hybrid.Json
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: Hybrid.Json.JsonExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  isExternal: true
  name: MapTo<TTarget>(Object)
  nameWithType: MapperExtensions.MapTo<TTarget>(Object)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>(System.Object)
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)(Object)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)(System.Object)
  name.vb: MapTo(Of TTarget)(Object)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Mapping.MapperExtensions
  commentId: T:Hybrid.Mapping.MapperExtensions
  parent: Hybrid.Mapping
  name: MapperExtensions
  nameWithType: MapperExtensions
  fullName: Hybrid.Mapping.MapperExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType: MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  name.vb: MapTo(Of TSource, TTarget)(TSource, TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo<TSource, TTarget>
    nameWithType: MapperExtensions.MapTo<TSource, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo(Of TSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TSource, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  isExternal: true
  name: Locking(Object, Action)
  nameWithType: LockExtensions.Locking(Object, Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Object, System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions
  commentId: T:Hybrid.Reflection.LockExtensions
  parent: Hybrid.Reflection
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: Hybrid.Reflection.LockExtensions
- uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  isExternal: true
  name: Locking<T>(T, Action<T>)
  nameWithType: LockExtensions.Locking<T>(T, Action<T>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<T>(T, System.Action<T>)
  nameWithType.vb: LockExtensions.Locking(Of T)(T, Action(Of T))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of T)(T, System.Action(Of T))
  name.vb: Locking(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking<T>
    nameWithType: LockExtensions.Locking<T>
    fullName: Hybrid.Reflection.LockExtensions.Locking<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking(Of T)
    nameWithType: LockExtensions.Locking(Of T)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  isExternal: true
  name: Locking<TResult>(Object, Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Object, Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Object, System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Object, Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Object, System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Object, Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  isExternal: true
  name: Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  nameWithType: LockExtensions.Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>(TSource, System.Func<TSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)(TSource, System.Func(Of TSource, TResult))
  name.vb: Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking<TSource, TResult>
    nameWithType: LockExtensions.Locking<TSource, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking(Of TSource, TResult)
    nameWithType: LockExtensions.Locking(Of TSource, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  name.vb: CheckICreatedTime(Of TEntity, TKey)(TEntity)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime<TEntity, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime(Of TEntity, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions
  commentId: T:Hybrid.Domain.Entities.EntityExtensions
  parent: Hybrid.Domain.Entities
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: Hybrid.Domain.Entities.EntityExtensions
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Entity
  commentId: N:OSharp.Entity
  name: OSharp.Entity
  nameWithType: OSharp.Entity
  fullName: OSharp.Entity
- uid: OSharp.Extensions
  commentId: N:OSharp.Extensions
  name: OSharp.Extensions
  nameWithType: OSharp.Extensions
  fullName: OSharp.Extensions
- uid: OSharp.Json
  commentId: N:OSharp.Json
  name: OSharp.Json
  nameWithType: OSharp.Json
  fullName: OSharp.Json
- uid: OSharp.Mapping
  commentId: N:OSharp.Mapping
  name: OSharp.Mapping
  nameWithType: OSharp.Mapping
  fullName: OSharp.Mapping
- uid: OSharp.Reflection
  commentId: N:OSharp.Reflection
  name: OSharp.Reflection
  nameWithType: OSharp.Reflection
  fullName: OSharp.Reflection
- uid: Hybrid.Extensions
  commentId: N:Hybrid.Extensions
  name: Hybrid.Extensions
  nameWithType: Hybrid.Extensions
  fullName: Hybrid.Extensions
- uid: Hybrid.Json
  commentId: N:Hybrid.Json
  name: Hybrid.Json
  nameWithType: Hybrid.Json
  fullName: Hybrid.Json
- uid: Hybrid.Mapping
  commentId: N:Hybrid.Mapping
  name: Hybrid.Mapping
  nameWithType: Hybrid.Mapping
  fullName: Hybrid.Mapping
- uid: Hybrid.Reflection
  commentId: N:Hybrid.Reflection
  name: Hybrid.Reflection
  nameWithType: Hybrid.Reflection
  fullName: Hybrid.Reflection
- uid: Hybrid.Domain.Entities
  commentId: N:Hybrid.Domain.Entities
  name: Hybrid.Domain.Entities
  nameWithType: Hybrid.Domain.Entities
  fullName: Hybrid.Domain.Entities
- uid: Hybrid.Caching.CacheService
  commentId: T:Hybrid.Caching.CacheService
  name: CacheService
  nameWithType: CacheService
  fullName: Hybrid.Caching.CacheService
- uid: Hybrid.Caching.CacheService.#ctor*
  commentId: Overload:Hybrid.Caching.CacheService.#ctor
  name: CacheService
  nameWithType: CacheService.CacheService
  fullName: Hybrid.Caching.CacheService.CacheService
- uid: Microsoft.Extensions.Caching.Distributed.IDistributedCache
  commentId: T:Microsoft.Extensions.Caching.Distributed.IDistributedCache
  parent: Microsoft.Extensions.Caching.Distributed
  isExternal: true
  name: IDistributedCache
  nameWithType: IDistributedCache
  fullName: Microsoft.Extensions.Caching.Distributed.IDistributedCache
- uid: Microsoft.Extensions.Caching.Distributed
  commentId: N:Microsoft.Extensions.Caching.Distributed
  isExternal: true
  name: Microsoft.Extensions.Caching.Distributed
  nameWithType: Microsoft.Extensions.Caching.Distributed
  fullName: Microsoft.Extensions.Caching.Distributed
- uid: Hybrid.Caching.CacheService.ToPageCache*
  commentId: Overload:Hybrid.Caching.CacheService.ToPageCache
  name: ToPageCache
  nameWithType: CacheService.ToPageCache
  fullName: Hybrid.Caching.CacheService.ToPageCache
- uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  name: ToPageCache<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, PageCondition, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: ICacheService.ToPageCache<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, PageCondition, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToPageCache<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, Hybrid.Filter.PageCondition, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToPageCache(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), PageCondition, Expression(Of Func(Of TSource, TResult)), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToPageCache(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), Hybrid.Filter.PageCondition, System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToPageCache(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), PageCondition, Expression(Of Func(Of TSource, TResult)), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToPageCache<TSource, TResult>
    nameWithType: ICacheService.ToPageCache<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToPageCache<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToPageCache(Of TSource, TResult)
    nameWithType: ICacheService.ToPageCache(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToPageCache(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{{TSource}}
  commentId: T:System.Linq.IQueryable{``0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<TSource>
  nameWithType: IQueryable<TSource>
  fullName: System.Linq.IQueryable<TSource>
  nameWithType.vb: IQueryable(Of TSource)
  fullName.vb: System.Linq.IQueryable(Of TSource)
  name.vb: IQueryable(Of TSource)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TSource, Boolean>>
  nameWithType: Expression<Func<TSource, Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>
  nameWithType.vb: Expression(Of Func(Of TSource, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean))
  name.vb: Expression(Of Func(Of TSource, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Filter.PageCondition
  commentId: T:Hybrid.Filter.PageCondition
  parent: Hybrid.Filter
  name: PageCondition
  nameWithType: PageCondition
  fullName: Hybrid.Filter.PageCondition
- uid: System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,``1}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TSource, TResult>>
  nameWithType: Expression<Func<TSource, TResult>>
  fullName: System.Linq.Expressions.Expression<System.Func<TSource, TResult>>
  nameWithType.vb: Expression(Of Func(Of TSource, TResult))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult))
  name.vb: Expression(Of Func(Of TSource, TResult))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Hybrid.Filter.PageResult{{TResult}}
  commentId: T:Hybrid.Filter.PageResult{``1}
  parent: Hybrid.Filter
  definition: Hybrid.Filter.PageResult`1
  name: PageResult<TResult>
  nameWithType: PageResult<TResult>
  fullName: Hybrid.Filter.PageResult<TResult>
  nameWithType.vb: PageResult(Of TResult)
  fullName.vb: Hybrid.Filter.PageResult(Of TResult)
  name.vb: PageResult(Of TResult)
  spec.csharp:
  - uid: Hybrid.Filter.PageResult`1
    name: PageResult
    nameWithType: PageResult
    fullName: Hybrid.Filter.PageResult
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Hybrid.Filter.PageResult`1
    name: PageResult
    nameWithType: PageResult
    fullName: Hybrid.Filter.PageResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  isExternal: true
  name: ToPageCache<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, PageCondition, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: ICacheService.ToPageCache<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, PageCondition, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToPageCache<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, Hybrid.Filter.PageCondition, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToPageCache(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), PageCondition, Expression(Of Func(Of TSource, TResult)), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToPageCache(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), Hybrid.Filter.PageCondition, System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToPageCache(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), PageCondition, Expression(Of Func(Of TSource, TResult)), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToPageCache<TSource, TResult>
    nameWithType: ICacheService.ToPageCache<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToPageCache<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToPageCache(Of TSource, TResult)
    nameWithType: ICacheService.ToPageCache(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToPageCache(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Hybrid.Filter
  commentId: N:Hybrid.Filter
  name: Hybrid.Filter
  nameWithType: Hybrid.Filter
  fullName: Hybrid.Filter
- uid: Hybrid.Filter.PageResult`1
  commentId: T:Hybrid.Filter.PageResult`1
  name: PageResult<T>
  nameWithType: PageResult<T>
  fullName: Hybrid.Filter.PageResult<T>
  nameWithType.vb: PageResult(Of T)
  fullName.vb: Hybrid.Filter.PageResult(Of T)
  name.vb: PageResult(Of T)
  spec.csharp:
  - uid: Hybrid.Filter.PageResult`1
    name: PageResult
    nameWithType: PageResult
    fullName: Hybrid.Filter.PageResult
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Hybrid.Filter.PageResult`1
    name: PageResult
    nameWithType: PageResult
    fullName: Hybrid.Filter.PageResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  name: ToPageCache<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, PageCondition, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: ICacheService.ToPageCache<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, PageCondition, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToPageCache<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, Hybrid.Filter.PageCondition, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToPageCache(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), PageCondition, Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToPageCache(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), Hybrid.Filter.PageCondition, System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToPageCache(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), PageCondition, Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToPageCache<TSource, TResult>
    nameWithType: ICacheService.ToPageCache<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToPageCache<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToPageCache(Of TSource, TResult)
    nameWithType: ICacheService.ToPageCache(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToPageCache(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Authorization.Functions.IFunction
  commentId: T:Hybrid.Authorization.Functions.IFunction
  parent: Hybrid.Authorization.Functions
  name: IFunction
  nameWithType: IFunction
  fullName: Hybrid.Authorization.Functions.IFunction
- uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  isExternal: true
  name: ToPageCache<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, PageCondition, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: ICacheService.ToPageCache<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, PageCondition, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToPageCache<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, Hybrid.Filter.PageCondition, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToPageCache(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), PageCondition, Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToPageCache(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), Hybrid.Filter.PageCondition, System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToPageCache(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), PageCondition, Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToPageCache<TSource, TResult>
    nameWithType: ICacheService.ToPageCache<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToPageCache<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToPageCache(Of TSource, TResult)
    nameWithType: ICacheService.ToPageCache(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToPageCache(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Authorization.Functions
  commentId: N:Hybrid.Authorization.Functions
  name: Hybrid.Authorization.Functions
  nameWithType: Hybrid.Authorization.Functions
  fullName: Hybrid.Authorization.Functions
- uid: Hybrid.Caching.CacheService.ToCacheList*
  commentId: Overload:Hybrid.Caching.CacheService.ToCacheList
  name: ToCacheList
  nameWithType: CacheService.ToCacheList
  fullName: Hybrid.Caching.CacheService.ToCacheList
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  name: ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheList<TSource, TResult>
    nameWithType: ICacheService.ToCacheList<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheList(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheList(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{{TResult}}
  commentId: T:System.Collections.Generic.List{``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TResult>
  nameWithType: List<TResult>
  fullName: System.Collections.Generic.List<TResult>
  nameWithType.vb: List(Of TResult)
  fullName.vb: System.Collections.Generic.List(Of TResult)
  name.vb: List(Of TResult)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  isExternal: true
  name: ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheList<TSource, TResult>
    nameWithType: ICacheService.ToCacheList<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheList(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheList(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Hybrid.Caching.CacheService.ToCacheArray*
  commentId: Overload:Hybrid.Caching.CacheService.ToCacheArray
  name: ToCacheArray
  nameWithType: CacheService.ToCacheArray
  fullName: Hybrid.Caching.CacheService.ToCacheArray
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  name: ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheArray<TSource, TResult>
    nameWithType: ICacheService.ToCacheArray<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheArray(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TResult}[]'
  isExternal: true
  name: TResult[]
  nameWithType: TResult[]
  fullName: TResult[]
  nameWithType.vb: TResult()
  fullName.vb: TResult()
  name.vb: TResult()
  spec.csharp:
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  isExternal: true
  name: ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheArray<TSource, TResult>
    nameWithType: ICacheService.ToCacheArray<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheArray(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  name: ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList<TSource, TResult>
    nameWithType: ICacheService.ToCacheList<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheList(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  isExternal: true
  name: ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList<TSource, TResult>
    nameWithType: ICacheService.ToCacheList<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheList(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  name: ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray<TSource, TResult>
    nameWithType: ICacheService.ToCacheArray<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  isExternal: true
  name: ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray<TSource, TResult>
    nameWithType: ICacheService.ToCacheArray<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  name: ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheList<TSource, TResult>
    nameWithType: ICacheService.ToCacheList<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheList(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheList(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  isExternal: true
  name: ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheList<TSource, TResult>
    nameWithType: ICacheService.ToCacheList<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheList(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheList(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  name: ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheArray<TSource, TResult>
    nameWithType: ICacheService.ToCacheArray<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheArray(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
  isExternal: true
  name: ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, Int32, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheArray<TSource, TResult>
    nameWithType: ICacheService.ToCacheArray<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Object[])
    name: ToCacheArray(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  name: ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList<TSource, TResult>
    nameWithType: ICacheService.ToCacheList<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheList(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  isExternal: true
  name: ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList<TSource, TResult>
    nameWithType: ICacheService.ToCacheList<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheList(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},{TResult}}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  name: ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray<TSource, TResult>
    nameWithType: ICacheService.ToCacheArray<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  isExternal: true
  name: ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TResult>(IQueryable<TSource>, Expression<Func<TSource, TResult>>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, TResult>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, TResult)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource, TResult)(IQueryable(Of TSource), Expression(Of Func(Of TSource, TResult)), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray<TSource, TResult>
    nameWithType: ICacheService.ToCacheArray<TSource, TResult>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray(Of TSource, TResult)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TResult)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{{TSource}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  name: ToCacheList<TSource>(IQueryable<TSource>, Int32, Object[])
  nameWithType: ICacheService.ToCacheList<TSource>(IQueryable<TSource>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource>(System.Linq.IQueryable<TSource>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource)(IQueryable(Of TSource), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource)(System.Linq.IQueryable(Of TSource), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource)(IQueryable(Of TSource), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheList<TSource>
    nameWithType: ICacheService.ToCacheList<TSource>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheList(Of TSource)
    nameWithType: ICacheService.ToCacheList(Of TSource)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{{TSource}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TSource>
  nameWithType: List<TSource>
  fullName: System.Collections.Generic.List<TSource>
  nameWithType.vb: List(Of TSource)
  fullName.vb: System.Collections.Generic.List(Of TSource)
  name.vb: List(Of TSource)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  isExternal: true
  name: ToCacheList<TSource>(IQueryable<TSource>, Int32, Object[])
  nameWithType: ICacheService.ToCacheList<TSource>(IQueryable<TSource>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource>(System.Linq.IQueryable<TSource>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource)(IQueryable(Of TSource), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource)(System.Linq.IQueryable(Of TSource), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource)(IQueryable(Of TSource), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheList<TSource>
    nameWithType: ICacheService.ToCacheList<TSource>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheList(Of TSource)
    nameWithType: ICacheService.ToCacheList(Of TSource)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{{TSource}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  name: ToCacheArray<TSource>(IQueryable<TSource>, Int32, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource>(IQueryable<TSource>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource>(System.Linq.IQueryable<TSource>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource)(IQueryable(Of TSource), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource)(System.Linq.IQueryable(Of TSource), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource)(IQueryable(Of TSource), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheArray<TSource>
    nameWithType: ICacheService.ToCacheArray<TSource>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheArray(Of TSource)
    nameWithType: ICacheService.ToCacheArray(Of TSource)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TSource}[]'
  isExternal: true
  name: TSource[]
  nameWithType: TSource[]
  fullName: TSource[]
  nameWithType.vb: TSource()
  fullName.vb: TSource()
  name.vb: TSource()
  spec.csharp:
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  isExternal: true
  name: ToCacheArray<TSource>(IQueryable<TSource>, Int32, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource>(IQueryable<TSource>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource>(System.Linq.IQueryable<TSource>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource)(IQueryable(Of TSource), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource)(System.Linq.IQueryable(Of TSource), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource)(IQueryable(Of TSource), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheArray<TSource>
    nameWithType: ICacheService.ToCacheArray<TSource>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheArray(Of TSource)
    nameWithType: ICacheService.ToCacheArray(Of TSource)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{{TSource}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  name: ToCacheList<TSource>(IQueryable<TSource>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheList<TSource>(IQueryable<TSource>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource>(System.Linq.IQueryable<TSource>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource)(IQueryable(Of TSource), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource)(System.Linq.IQueryable(Of TSource), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource)(IQueryable(Of TSource), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList<TSource>
    nameWithType: ICacheService.ToCacheList<TSource>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList(Of TSource)
    nameWithType: ICacheService.ToCacheList(Of TSource)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  isExternal: true
  name: ToCacheList<TSource>(IQueryable<TSource>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheList<TSource>(IQueryable<TSource>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource>(System.Linq.IQueryable<TSource>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource)(IQueryable(Of TSource), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource)(System.Linq.IQueryable(Of TSource), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource)(IQueryable(Of TSource), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList<TSource>
    nameWithType: ICacheService.ToCacheList<TSource>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList(Of TSource)
    nameWithType: ICacheService.ToCacheList(Of TSource)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{{TSource}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  name: ToCacheArray<TSource>(IQueryable<TSource>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource>(IQueryable<TSource>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource>(System.Linq.IQueryable<TSource>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource)(IQueryable(Of TSource), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource)(System.Linq.IQueryable(Of TSource), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource)(IQueryable(Of TSource), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray<TSource>
    nameWithType: ICacheService.ToCacheArray<TSource>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray(Of TSource)
    nameWithType: ICacheService.ToCacheArray(Of TSource)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  isExternal: true
  name: ToCacheArray<TSource>(IQueryable<TSource>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource>(IQueryable<TSource>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource>(System.Linq.IQueryable<TSource>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource)(IQueryable(Of TSource), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource)(System.Linq.IQueryable(Of TSource), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource)(IQueryable(Of TSource), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray<TSource>
    nameWithType: ICacheService.ToCacheArray<TSource>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``1(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray(Of TSource)
    nameWithType: ICacheService.ToCacheArray(Of TSource)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{{TEntity}},System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},Hybrid.Filter.PageCondition,System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Int32,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Int32,System.Object[])
  name: ToPageCache<TEntity, TOutputDto>(IQueryable<TEntity>, Expression<Func<TEntity, Boolean>>, PageCondition, Int32, Object[])
  nameWithType: ICacheService.ToPageCache<TEntity, TOutputDto>(IQueryable<TEntity>, Expression<Func<TEntity, Boolean>>, PageCondition, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToPageCache<TEntity, TOutputDto>(System.Linq.IQueryable<TEntity>, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, Hybrid.Filter.PageCondition, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToPageCache(Of TEntity, TOutputDto)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, Boolean)), PageCondition, Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToPageCache(Of TEntity, TOutputDto)(System.Linq.IQueryable(Of TEntity), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), Hybrid.Filter.PageCondition, System.Int32, System.Object())
  name.vb: ToPageCache(Of TEntity, TOutputDto)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, Boolean)), PageCondition, Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Int32,System.Object[])
    name: ToPageCache<TEntity, TOutputDto>
    nameWithType: ICacheService.ToPageCache<TEntity, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToPageCache<TEntity, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Int32,System.Object[])
    name: ToPageCache(Of TEntity, TOutputDto)
    nameWithType: ICacheService.ToPageCache(Of TEntity, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToPageCache(Of TEntity, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{{TEntity}}
  commentId: T:System.Linq.IQueryable{``0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<TEntity>
  nameWithType: IQueryable<TEntity>
  fullName: System.Linq.IQueryable<TEntity>
  nameWithType.vb: IQueryable(Of TEntity)
  fullName.vb: System.Linq.IQueryable(Of TEntity)
  name.vb: IQueryable(Of TEntity)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TEntity, Boolean>>
  nameWithType: Expression<Func<TEntity, Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>
  nameWithType.vb: Expression(Of Func(Of TEntity, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean))
  name.vb: Expression(Of Func(Of TEntity, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Filter.PageResult{{TOutputDto}}
  commentId: T:Hybrid.Filter.PageResult{``1}
  parent: Hybrid.Filter
  definition: Hybrid.Filter.PageResult`1
  name: PageResult<TOutputDto>
  nameWithType: PageResult<TOutputDto>
  fullName: Hybrid.Filter.PageResult<TOutputDto>
  nameWithType.vb: PageResult(Of TOutputDto)
  fullName.vb: Hybrid.Filter.PageResult(Of TOutputDto)
  name.vb: PageResult(Of TOutputDto)
  spec.csharp:
  - uid: Hybrid.Filter.PageResult`1
    name: PageResult
    nameWithType: PageResult
    fullName: Hybrid.Filter.PageResult
  - name: <
    nameWithType: <
    fullName: <
  - name: TOutputDto
    nameWithType: TOutputDto
    fullName: TOutputDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Hybrid.Filter.PageResult`1
    name: PageResult
    nameWithType: PageResult
    fullName: Hybrid.Filter.PageResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOutputDto
    nameWithType: TOutputDto
    fullName: TOutputDto
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Int32,System.Object[])
  isExternal: true
  name: ToPageCache<TEntity, TOutputDto>(IQueryable<TEntity>, Expression<Func<TEntity, Boolean>>, PageCondition, Int32, Object[])
  nameWithType: ICacheService.ToPageCache<TEntity, TOutputDto>(IQueryable<TEntity>, Expression<Func<TEntity, Boolean>>, PageCondition, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToPageCache<TEntity, TOutputDto>(System.Linq.IQueryable<TEntity>, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, Hybrid.Filter.PageCondition, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToPageCache(Of TEntity, TOutputDto)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, Boolean)), PageCondition, Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToPageCache(Of TEntity, TOutputDto)(System.Linq.IQueryable(Of TEntity), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), Hybrid.Filter.PageCondition, System.Int32, System.Object())
  name.vb: ToPageCache(Of TEntity, TOutputDto)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, Boolean)), PageCondition, Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Int32,System.Object[])
    name: ToPageCache<TEntity, TOutputDto>
    nameWithType: ICacheService.ToPageCache<TEntity, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToPageCache<TEntity, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,System.Int32,System.Object[])
    name: ToPageCache(Of TEntity, TOutputDto)
    nameWithType: ICacheService.ToPageCache(Of TEntity, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToPageCache(Of TEntity, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{{TEntity}},System.Linq.Expressions.Expression{System.Func{{TEntity},System.Boolean}},Hybrid.Filter.PageCondition,Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,Hybrid.Authorization.Functions.IFunction,System.Object[])
  name: ToPageCache<TEntity, TOutputDto>(IQueryable<TEntity>, Expression<Func<TEntity, Boolean>>, PageCondition, IFunction, Object[])
  nameWithType: ICacheService.ToPageCache<TEntity, TOutputDto>(IQueryable<TEntity>, Expression<Func<TEntity, Boolean>>, PageCondition, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToPageCache<TEntity, TOutputDto>(System.Linq.IQueryable<TEntity>, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, Hybrid.Filter.PageCondition, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToPageCache(Of TEntity, TOutputDto)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, Boolean)), PageCondition, IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToPageCache(Of TEntity, TOutputDto)(System.Linq.IQueryable(Of TEntity), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), Hybrid.Filter.PageCondition, Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToPageCache(Of TEntity, TOutputDto)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, Boolean)), PageCondition, IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToPageCache<TEntity, TOutputDto>
    nameWithType: ICacheService.ToPageCache<TEntity, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToPageCache<TEntity, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToPageCache(Of TEntity, TOutputDto)
    nameWithType: ICacheService.ToPageCache(Of TEntity, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToPageCache(Of TEntity, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,Hybrid.Authorization.Functions.IFunction,System.Object[])
  isExternal: true
  name: ToPageCache<TEntity, TOutputDto>(IQueryable<TEntity>, Expression<Func<TEntity, Boolean>>, PageCondition, IFunction, Object[])
  nameWithType: ICacheService.ToPageCache<TEntity, TOutputDto>(IQueryable<TEntity>, Expression<Func<TEntity, Boolean>>, PageCondition, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToPageCache<TEntity, TOutputDto>(System.Linq.IQueryable<TEntity>, System.Linq.Expressions.Expression<System.Func<TEntity, System.Boolean>>, Hybrid.Filter.PageCondition, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToPageCache(Of TEntity, TOutputDto)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, Boolean)), PageCondition, IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToPageCache(Of TEntity, TOutputDto)(System.Linq.IQueryable(Of TEntity), System.Linq.Expressions.Expression(Of System.Func(Of TEntity, System.Boolean)), Hybrid.Filter.PageCondition, Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToPageCache(Of TEntity, TOutputDto)(IQueryable(Of TEntity), Expression(Of Func(Of TEntity, Boolean)), PageCondition, IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToPageCache<TEntity, TOutputDto>
    nameWithType: ICacheService.ToPageCache<TEntity, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToPageCache<TEntity, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToPageCache``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Filter.PageCondition,Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToPageCache(Of TEntity, TOutputDto)
    nameWithType: ICacheService.ToPageCache(Of TEntity, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToPageCache(Of TEntity, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.PageCondition
    name: PageCondition
    nameWithType: PageCondition
    fullName: Hybrid.Filter.PageCondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  name: ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Int32, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
    name: ToCacheList<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
    name: ToCacheList(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheList(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{{TOutputDto}}
  commentId: T:System.Collections.Generic.List{``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TOutputDto>
  nameWithType: List<TOutputDto>
  fullName: System.Collections.Generic.List<TOutputDto>
  nameWithType.vb: List(Of TOutputDto)
  fullName.vb: System.Collections.Generic.List(Of TOutputDto)
  name.vb: List(Of TOutputDto)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOutputDto
    nameWithType: TOutputDto
    fullName: TOutputDto
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOutputDto
    nameWithType: TOutputDto
    fullName: TOutputDto
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  isExternal: true
  name: ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Int32, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
    name: ToCacheList<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
    name: ToCacheList(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheList(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  name: ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Int32, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
    name: ToCacheArray<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
    name: ToCacheArray(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TOutputDto}[]'
  isExternal: true
  name: TOutputDto[]
  nameWithType: TOutputDto[]
  fullName: TOutputDto[]
  nameWithType.vb: TOutputDto()
  fullName.vb: TOutputDto()
  name.vb: TOutputDto()
  spec.csharp:
  - name: TOutputDto
    nameWithType: TOutputDto
    fullName: TOutputDto
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: TOutputDto
    nameWithType: TOutputDto
    fullName: TOutputDto
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
  isExternal: true
  name: ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Int32, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
    name: ToCacheArray<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Object[])
    name: ToCacheArray(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  name: ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheList(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  isExternal: true
  name: ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheList(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},System.Linq.Expressions.Expression{System.Func{{TSource},System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  name: ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  isExternal: true
  name: ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Expression<Func<TSource, Boolean>>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Linq.Expressions.Expression<System.Func<TSource, System.Boolean>>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Linq.Expressions.Expression(Of System.Func(Of TSource, System.Boolean)), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Expression(Of Func(Of TSource, Boolean)), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  name: ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Int32, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheList<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheList(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheList(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  isExternal: true
  name: ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Int32, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Int32, System.Object())
  name.vb: ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheList<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheList(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheList(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  name: ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Int32, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheArray<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheArray(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
  isExternal: true
  name: ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Int32, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, Int32, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, System.Int32, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Int32, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), System.Int32, System.Object())
  name.vb: ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), Int32, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheArray<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},System.Int32,System.Object[])
    name: ToCacheArray(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{{TSource}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  name: ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheList(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  isExternal: true
  name: ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>(IQueryable<TSource>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheList(Of TSource, TOutputDto)(IQueryable(Of TSource), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheList<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheList<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheList``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheList(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheList(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheList(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{{TSource}},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  parent: Hybrid.Caching.ICacheService
  definition: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  name: ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  commentId: M:Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
  isExternal: true
  name: ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, IFunction, Object[])
  nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>(IQueryable<TSource>, IFunction, Object[])
  fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>(System.Linq.IQueryable<TSource>, Hybrid.Authorization.Functions.IFunction, System.Object[])
  nameWithType.vb: ICacheService.ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), IFunction, Object())
  fullName.vb: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)(System.Linq.IQueryable(Of TSource), Hybrid.Authorization.Functions.IFunction, System.Object())
  name.vb: ToCacheArray(Of TSource, TOutputDto)(IQueryable(Of TSource), IFunction, Object())
  spec.csharp:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray<TSource, TOutputDto>
    nameWithType: ICacheService.ToCacheArray<TSource, TOutputDto>
    fullName: Hybrid.Caching.ICacheService.ToCacheArray<TSource, TOutputDto>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Caching.ICacheService.ToCacheArray``2(System.Linq.IQueryable{``0},Hybrid.Authorization.Functions.IFunction,System.Object[])
    name: ToCacheArray(Of TSource, TOutputDto)
    nameWithType: ICacheService.ToCacheArray(Of TSource, TOutputDto)
    fullName: Hybrid.Caching.ICacheService.ToCacheArray(Of TSource, TOutputDto)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Authorization.Functions.IFunction
    name: IFunction
    nameWithType: IFunction
    fullName: Hybrid.Authorization.Functions.IFunction
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
