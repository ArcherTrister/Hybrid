### YamlMime:ManagedReference
items:
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  commentId: T:Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  id: XmlLocalizationDictionary
  parent: Hybrid.Localization.Dictionaries.Xml
  children:
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomFile(System.String)
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomXmlString(System.String)
  langs:
  - csharp
  - vb
  name: XmlLocalizationDictionary
  nameWithType: XmlLocalizationDictionary
  fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  type: Class
  source:
    remote:
      path: src/Hybrid/Localization/Dictionaries/Xml/XmlLocalizationDictionary.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: XmlLocalizationDictionary
    path: ../src/Hybrid/Localization/Dictionaries/Xml/XmlLocalizationDictionary.cs
    startLine: 17
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Dictionaries.Xml
  summary: "\nThis class is used to build a localization dictionary from XML.\n"
  remarks: "\nUse static Build methods to create instance of this class.\n"
  example: []
  syntax:
    content: 'public class XmlLocalizationDictionary : LocalizationDictionary, ILocalizationDictionary, IEnumerable<LocalizedString>, IEnumerable'
    content.vb: >-
      Public Class XmlLocalizationDictionary

          Inherits LocalizationDictionary

          Implements ILocalizationDictionary, IEnumerable(Of LocalizedString), IEnumerable
  inheritance:
  - System.Object
  - Hybrid.Localization.Dictionaries.LocalizationDictionary
  implements:
  - Hybrid.Localization.Dictionaries.ILocalizationDictionary
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}
  - System.Collections.IEnumerable
  inheritedMembers:
  - Hybrid.Localization.Dictionaries.LocalizationDictionary.CultureInfo
  - Hybrid.Localization.Dictionaries.LocalizationDictionary.Item(System.String)
  - Hybrid.Localization.Dictionaries.LocalizationDictionary.GetOrNull(System.String)
  - Hybrid.Localization.Dictionaries.LocalizationDictionary.GetAllStrings
  - Hybrid.Localization.Dictionaries.LocalizationDictionary.GetEnumerator
  - Hybrid.Localization.Dictionaries.LocalizationDictionary.System#Collections#IEnumerable#GetEnumerator
  - Hybrid.Localization.Dictionaries.LocalizationDictionary.Contains(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.Shuffle``1
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.String)
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Func{Hybrid.Localization.LocalizedString,System.String},System.String)
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.IsEmpty``1
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.WhereIf``1(System.Func{Hybrid.Localization.LocalizedString,System.Boolean},System.Boolean)
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.OrderByPrefixes``1(System.Func{Hybrid.Localization.LocalizedString,System.String},System.String[])
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.DistinctBy``2(System.Func{Hybrid.Localization.LocalizedString,{TKey}})
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.OrderBy``1(System.String,System.ComponentModel.ListSortDirection)
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.OrderBy``1(OSharp.Filter.SortCondition)
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.OrderBy``1(OSharp.Filter.SortCondition{Hybrid.Localization.LocalizedString})
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Entity.EntityExtensions.CheckICreatedTime``2
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  - System.Object.OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
  - System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1
  - System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1({T})
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.ObjectExtensions.IsIn``1(Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary[])
  - System.Object.OSharp.Extensions.ObjectExtensions.ToDynamic
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.ObjectExtensions.DeepClone``1
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,System.Boolean},System.String)
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,System.Boolean},System.String)
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.String)
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary},System.Action{System.Exception},System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary},System.Action{System.Exception})
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,{TResult}},System.Action{System.Exception})
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary},System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  - System.Object.OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  - System.Object.OSharp.Mapping.MapperExtensions.MapTo``1
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Mapping.MapperExtensions.MapTo``2({TTarget})
  - System.Object.OSharp.Reflection.LockExtensions.Locking(System.Action)
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  - System.Object.OSharp.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,{TResult}})
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.JoinAsString``1(System.String)
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Boolean,System.Func{Hybrid.Localization.LocalizedString,System.Boolean})
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Boolean,System.Func{Hybrid.Localization.LocalizedString,System.Int32,System.Boolean})
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.Shuffle``1
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.String)
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Func{Hybrid.Localization.LocalizedString,System.String},System.String)
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.IsEmpty``1
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Func{Hybrid.Localization.LocalizedString,System.Boolean},System.Boolean)
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.DistinctBy``2(System.Func{Hybrid.Localization.LocalizedString,{TKey}})
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.String,System.ComponentModel.ListSortDirection)
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.OrderBy``1(Hybrid.Filter.SortCondition)
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.OrderBy``1(Hybrid.Filter.SortCondition{Hybrid.Localization.LocalizedString})
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes``1(System.Func{Hybrid.Localization.LocalizedString,System.String},System.String[])
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  - System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary[])
  - System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,System.Boolean},System.String)
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,System.Boolean},System.String)
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.String)
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary},System.Action{System.Exception},System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary},System.Action{System.Exception})
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,{TResult}},System.Action{System.Exception})
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary},System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  - System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  - System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  - System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,{TResult}})
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  - Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty``1
  - System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates``2(System.Func{Hybrid.Localization.LocalizedString,{TProp}})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomFile(System.String)
  commentId: M:Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomFile(System.String)
  id: BuildFomFile(System.String)
  parent: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  langs:
  - csharp
  - vb
  name: BuildFomFile(String)
  nameWithType: XmlLocalizationDictionary.BuildFomFile(String)
  fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomFile(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/Dictionaries/Xml/XmlLocalizationDictionary.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: BuildFomFile
    path: ../src/Hybrid/Localization/Dictionaries/Xml/XmlLocalizationDictionary.cs
    startLine: 32
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Dictionaries.Xml
  summary: "\nBuilds an <xref href=\"Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary\" data-throw-if-not-resolved=\"false\"></xref> from given file.\n"
  example: []
  syntax:
    content: public static XmlLocalizationDictionary BuildFomFile(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: Path of the file
    return:
      type: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    content.vb: Public Shared Function BuildFomFile(filePath As String) As XmlLocalizationDictionary
  overload: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomXmlString(System.String)
  commentId: M:Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomXmlString(System.String)
  id: BuildFomXmlString(System.String)
  parent: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  langs:
  - csharp
  - vb
  name: BuildFomXmlString(String)
  nameWithType: XmlLocalizationDictionary.BuildFomXmlString(String)
  fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomXmlString(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Localization/Dictionaries/Xml/XmlLocalizationDictionary.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: BuildFomXmlString
    path: ../src/Hybrid/Localization/Dictionaries/Xml/XmlLocalizationDictionary.cs
    startLine: 48
  assemblies:
  - Hybrid
  namespace: Hybrid.Localization.Dictionaries.Xml
  summary: "\nBuilds an <xref href=\"Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary\" data-throw-if-not-resolved=\"false\"></xref> from given xml string.\n"
  example: []
  syntax:
    content: public static XmlLocalizationDictionary BuildFomXmlString(string xmlString)
    parameters:
    - id: xmlString
      type: System.String
      description: XML string
    return:
      type: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    content.vb: Public Shared Function BuildFomXmlString(xmlString As String) As XmlLocalizationDictionary
  overload: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomXmlString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Hybrid.Localization.Dictionaries.Xml
  commentId: N:Hybrid.Localization.Dictionaries.Xml
  name: Hybrid.Localization.Dictionaries.Xml
  nameWithType: Hybrid.Localization.Dictionaries.Xml
  fullName: Hybrid.Localization.Dictionaries.Xml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Hybrid.Localization.Dictionaries.LocalizationDictionary
  commentId: T:Hybrid.Localization.Dictionaries.LocalizationDictionary
  parent: Hybrid.Localization.Dictionaries
  name: LocalizationDictionary
  nameWithType: LocalizationDictionary
  fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary
- uid: Hybrid.Localization.Dictionaries.ILocalizationDictionary
  commentId: T:Hybrid.Localization.Dictionaries.ILocalizationDictionary
  parent: Hybrid.Localization.Dictionaries
  name: ILocalizationDictionary
  nameWithType: ILocalizationDictionary
  fullName: Hybrid.Localization.Dictionaries.ILocalizationDictionary
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}
  commentId: T:System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<LocalizedString>
  nameWithType: IEnumerable<LocalizedString>
  fullName: System.Collections.Generic.IEnumerable<Hybrid.Localization.LocalizedString>
  nameWithType.vb: IEnumerable(Of LocalizedString)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Hybrid.Localization.LocalizedString)
  name.vb: IEnumerable(Of LocalizedString)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.CultureInfo
  commentId: P:Hybrid.Localization.Dictionaries.LocalizationDictionary.CultureInfo
  parent: Hybrid.Localization.Dictionaries.LocalizationDictionary
  name: CultureInfo
  nameWithType: LocalizationDictionary.CultureInfo
  fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.CultureInfo
- uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.Item(System.String)
  commentId: P:Hybrid.Localization.Dictionaries.LocalizationDictionary.Item(System.String)
  parent: Hybrid.Localization.Dictionaries.LocalizationDictionary
  isExternal: true
  name: Item[String]
  nameWithType: LocalizationDictionary.Item[String]
  fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.Item[System.String]
  nameWithType.vb: LocalizationDictionary.Item(String)
  fullName.vb: Hybrid.Localization.Dictionaries.LocalizationDictionary.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.Item(System.String)
    name: Item
    nameWithType: LocalizationDictionary.Item
    fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.Item(System.String)
    name: Item
    nameWithType: LocalizationDictionary.Item
    fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetOrNull(System.String)
  commentId: M:Hybrid.Localization.Dictionaries.LocalizationDictionary.GetOrNull(System.String)
  parent: Hybrid.Localization.Dictionaries.LocalizationDictionary
  isExternal: true
  name: GetOrNull(String)
  nameWithType: LocalizationDictionary.GetOrNull(String)
  fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetOrNull(System.String)
  spec.csharp:
  - uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetOrNull(System.String)
    name: GetOrNull
    nameWithType: LocalizationDictionary.GetOrNull
    fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetOrNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetOrNull(System.String)
    name: GetOrNull
    nameWithType: LocalizationDictionary.GetOrNull
    fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetOrNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetAllStrings
  commentId: M:Hybrid.Localization.Dictionaries.LocalizationDictionary.GetAllStrings
  parent: Hybrid.Localization.Dictionaries.LocalizationDictionary
  name: GetAllStrings()
  nameWithType: LocalizationDictionary.GetAllStrings()
  fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetAllStrings()
  spec.csharp:
  - uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetAllStrings
    name: GetAllStrings
    nameWithType: LocalizationDictionary.GetAllStrings
    fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetAllStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetAllStrings
    name: GetAllStrings
    nameWithType: LocalizationDictionary.GetAllStrings
    fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetAllStrings
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetEnumerator
  commentId: M:Hybrid.Localization.Dictionaries.LocalizationDictionary.GetEnumerator
  parent: Hybrid.Localization.Dictionaries.LocalizationDictionary
  name: GetEnumerator()
  nameWithType: LocalizationDictionary.GetEnumerator()
  fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetEnumerator()
  spec.csharp:
  - uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetEnumerator
    name: GetEnumerator
    nameWithType: LocalizationDictionary.GetEnumerator
    fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetEnumerator
    name: GetEnumerator
    nameWithType: LocalizationDictionary.GetEnumerator
    fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Hybrid.Localization.Dictionaries.LocalizationDictionary.System#Collections#IEnumerable#GetEnumerator
  parent: Hybrid.Localization.Dictionaries.LocalizationDictionary
  name: IEnumerable.GetEnumerator()
  nameWithType: LocalizationDictionary.IEnumerable.GetEnumerator()
  fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: LocalizationDictionary.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: LocalizationDictionary.IEnumerable.GetEnumerator
    fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: LocalizationDictionary.System.Collections.IEnumerable.GetEnumerator
    fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.Contains(System.String)
  commentId: M:Hybrid.Localization.Dictionaries.LocalizationDictionary.Contains(System.String)
  parent: Hybrid.Localization.Dictionaries.LocalizationDictionary
  isExternal: true
  name: Contains(String)
  nameWithType: LocalizationDictionary.Contains(String)
  fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.Contains(System.String)
  spec.csharp:
  - uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.Contains(System.String)
    name: Contains
    nameWithType: LocalizationDictionary.Contains
    fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Localization.Dictionaries.LocalizationDictionary.Contains(System.String)
    name: Contains
    nameWithType: LocalizationDictionary.Contains
    fullName: Hybrid.Localization.Dictionaries.LocalizationDictionary.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.Shuffle``1
  commentId: M:OSharp.Collections.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  parent: OSharp.Collections.EnumerableExtensions
  definition: OSharp.Collections.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  name: Shuffle<LocalizedString>()
  nameWithType: EnumerableExtensions.Shuffle<LocalizedString>()
  fullName: OSharp.Collections.EnumerableExtensions.Shuffle<Hybrid.Localization.LocalizedString>()
  nameWithType.vb: EnumerableExtensions.Shuffle(Of LocalizedString)()
  fullName.vb: OSharp.Collections.EnumerableExtensions.Shuffle(Of Hybrid.Localization.LocalizedString)()
  name.vb: Shuffle(Of LocalizedString)()
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.Shuffle``1
    name: Shuffle<LocalizedString>
    nameWithType: EnumerableExtensions.Shuffle<LocalizedString>
    fullName: OSharp.Collections.EnumerableExtensions.Shuffle<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.Shuffle``1
    name: Shuffle(Of LocalizedString)
    nameWithType: EnumerableExtensions.Shuffle(Of LocalizedString)
    fullName: OSharp.Collections.EnumerableExtensions.Shuffle(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.String)
  commentId: M:OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.String)
  parent: OSharp.Collections.EnumerableExtensions
  definition: OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name: ExpandAndToString<LocalizedString>(String)
  nameWithType: EnumerableExtensions.ExpandAndToString<LocalizedString>(String)
  fullName: OSharp.Collections.EnumerableExtensions.ExpandAndToString<Hybrid.Localization.LocalizedString>(System.String)
  nameWithType.vb: EnumerableExtensions.ExpandAndToString(Of LocalizedString)(String)
  fullName.vb: OSharp.Collections.EnumerableExtensions.ExpandAndToString(Of Hybrid.Localization.LocalizedString)(System.String)
  name.vb: ExpandAndToString(Of LocalizedString)(String)
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.String)
    name: ExpandAndToString<LocalizedString>
    nameWithType: EnumerableExtensions.ExpandAndToString<LocalizedString>
    fullName: OSharp.Collections.EnumerableExtensions.ExpandAndToString<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.String)
    name: ExpandAndToString(Of LocalizedString)
    nameWithType: EnumerableExtensions.ExpandAndToString(Of LocalizedString)
    fullName: OSharp.Collections.EnumerableExtensions.ExpandAndToString(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Func{Hybrid.Localization.LocalizedString,System.String},System.String)
  commentId: M:OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
  parent: OSharp.Collections.EnumerableExtensions
  definition: OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
  name: ExpandAndToString<LocalizedString>(Func<LocalizedString, String>, String)
  nameWithType: EnumerableExtensions.ExpandAndToString<LocalizedString>(Func<LocalizedString, String>, String)
  fullName: OSharp.Collections.EnumerableExtensions.ExpandAndToString<Hybrid.Localization.LocalizedString>(System.Func<Hybrid.Localization.LocalizedString, System.String>, System.String)
  nameWithType.vb: EnumerableExtensions.ExpandAndToString(Of LocalizedString)(Func(Of LocalizedString, String), String)
  fullName.vb: OSharp.Collections.EnumerableExtensions.ExpandAndToString(Of Hybrid.Localization.LocalizedString)(System.Func(Of Hybrid.Localization.LocalizedString, System.String), System.String)
  name.vb: ExpandAndToString(Of LocalizedString)(Func(Of LocalizedString, String), String)
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Func{``0,System.String},System.String)
    name: ExpandAndToString<LocalizedString>
    nameWithType: EnumerableExtensions.ExpandAndToString<LocalizedString>
    fullName: OSharp.Collections.EnumerableExtensions.ExpandAndToString<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Func{``0,System.String},System.String)
    name: ExpandAndToString(Of LocalizedString)
    nameWithType: EnumerableExtensions.ExpandAndToString(Of LocalizedString)
    fullName: OSharp.Collections.EnumerableExtensions.ExpandAndToString(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.IsEmpty``1
  commentId: M:OSharp.Collections.EnumerableExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
  parent: OSharp.Collections.EnumerableExtensions
  definition: OSharp.Collections.EnumerableExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
  name: IsEmpty<LocalizedString>()
  nameWithType: EnumerableExtensions.IsEmpty<LocalizedString>()
  fullName: OSharp.Collections.EnumerableExtensions.IsEmpty<Hybrid.Localization.LocalizedString>()
  nameWithType.vb: EnumerableExtensions.IsEmpty(Of LocalizedString)()
  fullName.vb: OSharp.Collections.EnumerableExtensions.IsEmpty(Of Hybrid.Localization.LocalizedString)()
  name.vb: IsEmpty(Of LocalizedString)()
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.IsEmpty``1
    name: IsEmpty<LocalizedString>
    nameWithType: EnumerableExtensions.IsEmpty<LocalizedString>
    fullName: OSharp.Collections.EnumerableExtensions.IsEmpty<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.IsEmpty``1
    name: IsEmpty(Of LocalizedString)
    nameWithType: EnumerableExtensions.IsEmpty(Of LocalizedString)
    fullName: OSharp.Collections.EnumerableExtensions.IsEmpty(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.WhereIf``1(System.Func{Hybrid.Localization.LocalizedString,System.Boolean},System.Boolean)
  commentId: M:OSharp.Collections.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean)
  parent: OSharp.Collections.EnumerableExtensions
  definition: OSharp.Collections.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean)
  name: WhereIf<LocalizedString>(Func<LocalizedString, Boolean>, Boolean)
  nameWithType: EnumerableExtensions.WhereIf<LocalizedString>(Func<LocalizedString, Boolean>, Boolean)
  fullName: OSharp.Collections.EnumerableExtensions.WhereIf<Hybrid.Localization.LocalizedString>(System.Func<Hybrid.Localization.LocalizedString, System.Boolean>, System.Boolean)
  nameWithType.vb: EnumerableExtensions.WhereIf(Of LocalizedString)(Func(Of LocalizedString, Boolean), Boolean)
  fullName.vb: OSharp.Collections.EnumerableExtensions.WhereIf(Of Hybrid.Localization.LocalizedString)(System.Func(Of Hybrid.Localization.LocalizedString, System.Boolean), System.Boolean)
  name.vb: WhereIf(Of LocalizedString)(Func(Of LocalizedString, Boolean), Boolean)
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.WhereIf``1(System.Func{``0,System.Boolean},System.Boolean)
    name: WhereIf<LocalizedString>
    nameWithType: EnumerableExtensions.WhereIf<LocalizedString>
    fullName: OSharp.Collections.EnumerableExtensions.WhereIf<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.WhereIf``1(System.Func{``0,System.Boolean},System.Boolean)
    name: WhereIf(Of LocalizedString)
    nameWithType: EnumerableExtensions.WhereIf(Of LocalizedString)
    fullName: OSharp.Collections.EnumerableExtensions.WhereIf(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.OrderByPrefixes``1(System.Func{Hybrid.Localization.LocalizedString,System.String},System.String[])
  commentId: M:OSharp.Collections.EnumerableExtensions.OrderByPrefixes``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String[])
  parent: OSharp.Collections.EnumerableExtensions
  definition: OSharp.Collections.EnumerableExtensions.OrderByPrefixes``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String[])
  name: OrderByPrefixes<LocalizedString>(Func<LocalizedString, String>, String[])
  nameWithType: EnumerableExtensions.OrderByPrefixes<LocalizedString>(Func<LocalizedString, String>, String[])
  fullName: OSharp.Collections.EnumerableExtensions.OrderByPrefixes<Hybrid.Localization.LocalizedString>(System.Func<Hybrid.Localization.LocalizedString, System.String>, System.String[])
  nameWithType.vb: EnumerableExtensions.OrderByPrefixes(Of LocalizedString)(Func(Of LocalizedString, String), String())
  fullName.vb: OSharp.Collections.EnumerableExtensions.OrderByPrefixes(Of Hybrid.Localization.LocalizedString)(System.Func(Of Hybrid.Localization.LocalizedString, System.String), System.String())
  name.vb: OrderByPrefixes(Of LocalizedString)(Func(Of LocalizedString, String), String())
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.OrderByPrefixes``1(System.Func{``0,System.String},System.String[])
    name: OrderByPrefixes<LocalizedString>
    nameWithType: EnumerableExtensions.OrderByPrefixes<LocalizedString>
    fullName: OSharp.Collections.EnumerableExtensions.OrderByPrefixes<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.OrderByPrefixes``1(System.Func{``0,System.String},System.String[])
    name: OrderByPrefixes(Of LocalizedString)
    nameWithType: EnumerableExtensions.OrderByPrefixes(Of LocalizedString)
    fullName: OSharp.Collections.EnumerableExtensions.OrderByPrefixes(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.DistinctBy``2(System.Func{Hybrid.Localization.LocalizedString,{TKey}})
  commentId: M:OSharp.Collections.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: OSharp.Collections.EnumerableExtensions
  definition: OSharp.Collections.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: DistinctBy<LocalizedString, TKey>(Func<LocalizedString, TKey>)
  nameWithType: EnumerableExtensions.DistinctBy<LocalizedString, TKey>(Func<LocalizedString, TKey>)
  fullName: OSharp.Collections.EnumerableExtensions.DistinctBy<Hybrid.Localization.LocalizedString, TKey>(System.Func<Hybrid.Localization.LocalizedString, TKey>)
  nameWithType.vb: EnumerableExtensions.DistinctBy(Of LocalizedString, TKey)(Func(Of LocalizedString, TKey))
  fullName.vb: OSharp.Collections.EnumerableExtensions.DistinctBy(Of Hybrid.Localization.LocalizedString, TKey)(System.Func(Of Hybrid.Localization.LocalizedString, TKey))
  name.vb: DistinctBy(Of LocalizedString, TKey)(Func(Of LocalizedString, TKey))
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.DistinctBy``2(System.Func{``0,``1})
    name: DistinctBy<LocalizedString, TKey>
    nameWithType: EnumerableExtensions.DistinctBy<LocalizedString, TKey>
    fullName: OSharp.Collections.EnumerableExtensions.DistinctBy<Hybrid.Localization.LocalizedString, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.DistinctBy``2(System.Func{``0,``1})
    name: DistinctBy(Of LocalizedString, TKey)
    nameWithType: EnumerableExtensions.DistinctBy(Of LocalizedString, TKey)
    fullName: OSharp.Collections.EnumerableExtensions.DistinctBy(Of Hybrid.Localization.LocalizedString, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.OrderBy``1(System.String,System.ComponentModel.ListSortDirection)
  commentId: M:OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.String,System.ComponentModel.ListSortDirection)
  parent: OSharp.Collections.EnumerableExtensions
  definition: OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.String,System.ComponentModel.ListSortDirection)
  name: OrderBy<LocalizedString>(String, ListSortDirection)
  nameWithType: EnumerableExtensions.OrderBy<LocalizedString>(String, ListSortDirection)
  fullName: OSharp.Collections.EnumerableExtensions.OrderBy<Hybrid.Localization.LocalizedString>(System.String, System.ComponentModel.ListSortDirection)
  nameWithType.vb: EnumerableExtensions.OrderBy(Of LocalizedString)(String, ListSortDirection)
  fullName.vb: OSharp.Collections.EnumerableExtensions.OrderBy(Of Hybrid.Localization.LocalizedString)(System.String, System.ComponentModel.ListSortDirection)
  name.vb: OrderBy(Of LocalizedString)(String, ListSortDirection)
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(System.String,System.ComponentModel.ListSortDirection)
    name: OrderBy<LocalizedString>
    nameWithType: EnumerableExtensions.OrderBy<LocalizedString>
    fullName: OSharp.Collections.EnumerableExtensions.OrderBy<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.ListSortDirection
    name: ListSortDirection
    nameWithType: ListSortDirection
    fullName: System.ComponentModel.ListSortDirection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(System.String,System.ComponentModel.ListSortDirection)
    name: OrderBy(Of LocalizedString)
    nameWithType: EnumerableExtensions.OrderBy(Of LocalizedString)
    fullName: OSharp.Collections.EnumerableExtensions.OrderBy(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.ListSortDirection
    name: ListSortDirection
    nameWithType: ListSortDirection
    fullName: System.ComponentModel.ListSortDirection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.OrderBy``1(OSharp.Filter.SortCondition)
  commentId: M:OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},OSharp.Filter.SortCondition)
  parent: OSharp.Collections.EnumerableExtensions
  definition: OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},OSharp.Filter.SortCondition)
  name: OrderBy<LocalizedString>(SortCondition)
  nameWithType: EnumerableExtensions.OrderBy<LocalizedString>(SortCondition)
  fullName: OSharp.Collections.EnumerableExtensions.OrderBy<Hybrid.Localization.LocalizedString>(OSharp.Filter.SortCondition)
  nameWithType.vb: EnumerableExtensions.OrderBy(Of LocalizedString)(SortCondition)
  fullName.vb: OSharp.Collections.EnumerableExtensions.OrderBy(Of Hybrid.Localization.LocalizedString)(OSharp.Filter.SortCondition)
  name.vb: OrderBy(Of LocalizedString)(SortCondition)
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(OSharp.Filter.SortCondition)
    name: OrderBy<LocalizedString>
    nameWithType: EnumerableExtensions.OrderBy<LocalizedString>
    fullName: OSharp.Collections.EnumerableExtensions.OrderBy<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OSharp.Filter.SortCondition
    name: SortCondition
    nameWithType: SortCondition
    fullName: OSharp.Filter.SortCondition
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(OSharp.Filter.SortCondition)
    name: OrderBy(Of LocalizedString)
    nameWithType: EnumerableExtensions.OrderBy(Of LocalizedString)
    fullName: OSharp.Collections.EnumerableExtensions.OrderBy(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OSharp.Filter.SortCondition
    name: SortCondition
    nameWithType: SortCondition
    fullName: OSharp.Filter.SortCondition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Collections.EnumerableExtensions.OrderBy``1(OSharp.Filter.SortCondition{Hybrid.Localization.LocalizedString})
  commentId: M:OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},OSharp.Filter.SortCondition{``0})
  parent: OSharp.Collections.EnumerableExtensions
  definition: OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},OSharp.Filter.SortCondition{``0})
  name: OrderBy<LocalizedString>(SortCondition<LocalizedString>)
  nameWithType: EnumerableExtensions.OrderBy<LocalizedString>(SortCondition<LocalizedString>)
  fullName: OSharp.Collections.EnumerableExtensions.OrderBy<Hybrid.Localization.LocalizedString>(OSharp.Filter.SortCondition<Hybrid.Localization.LocalizedString>)
  nameWithType.vb: EnumerableExtensions.OrderBy(Of LocalizedString)(SortCondition(Of LocalizedString))
  fullName.vb: OSharp.Collections.EnumerableExtensions.OrderBy(Of Hybrid.Localization.LocalizedString)(OSharp.Filter.SortCondition(Of Hybrid.Localization.LocalizedString))
  name.vb: OrderBy(Of LocalizedString)(SortCondition(Of LocalizedString))
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(OSharp.Filter.SortCondition{``0})
    name: OrderBy<LocalizedString>
    nameWithType: EnumerableExtensions.OrderBy<LocalizedString>
    fullName: OSharp.Collections.EnumerableExtensions.OrderBy<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: OSharp.Filter.SortCondition`1
    name: SortCondition
    nameWithType: SortCondition
    fullName: OSharp.Filter.SortCondition
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(OSharp.Filter.SortCondition{``0})
    name: OrderBy(Of LocalizedString)
    nameWithType: EnumerableExtensions.OrderBy(Of LocalizedString)
    fullName: OSharp.Collections.EnumerableExtensions.OrderBy(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: OSharp.Filter.SortCondition`1
    name: SortCondition
    nameWithType: SortCondition
    fullName: OSharp.Filter.SortCondition
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Entity.EntityExtensions.CheckICreatedTime``2
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  parent: OSharp.Entity.EntityExtensions
  definition: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<XmlLocalizationDictionary, TKey>()
  nameWithType: EntityExtensions.CheckICreatedTime<XmlLocalizationDictionary, TKey>()
  fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey>()
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of XmlLocalizationDictionary, TKey)()
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey)()
  name.vb: CheckICreatedTime(Of XmlLocalizationDictionary, TKey)()
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime<XmlLocalizationDictionary, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<XmlLocalizationDictionary, TKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime(Of XmlLocalizationDictionary, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of XmlLocalizationDictionary, TKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: OSharp.Entity.EntityExtensions
  definition: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckICreationAudited<XmlLocalizationDictionary, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<XmlLocalizationDictionary, TKey, TUserKey>(IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of XmlLocalizationDictionary, TKey, TUserKey)(IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of XmlLocalizationDictionary, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<XmlLocalizationDictionary, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<XmlLocalizationDictionary, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of XmlLocalizationDictionary, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of XmlLocalizationDictionary, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: OSharp.Entity.EntityExtensions
  definition: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckIUpdateAudited<XmlLocalizationDictionary, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<XmlLocalizationDictionary, TKey, TUserKey>(IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of XmlLocalizationDictionary, TKey, TUserKey)(IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of XmlLocalizationDictionary, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<XmlLocalizationDictionary, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<XmlLocalizationDictionary, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of XmlLocalizationDictionary, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of XmlLocalizationDictionary, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  name: CastTo(Type)
  nameWithType: ObjectExtensions.CastTo(Type)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.CastTo``1({T})
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  name: CastTo<T>(T)
  nameWithType: ObjectExtensions.CastTo<T>(T)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>(T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(T)
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)(T)
  name.vb: CastTo(Of T)(T)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.ObjectExtensions.IsIn``1(Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary[])
  commentId: M:OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<XmlLocalizationDictionary>(XmlLocalizationDictionary[])
  nameWithType: ObjectExtensions.IsIn<XmlLocalizationDictionary>(XmlLocalizationDictionary[])
  fullName: OSharp.Extensions.ObjectExtensions.IsIn<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>(Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary[])
  nameWithType.vb: ObjectExtensions.IsIn(Of XmlLocalizationDictionary)(XmlLocalizationDictionary())
  fullName.vb: OSharp.Extensions.ObjectExtensions.IsIn(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)(Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary())
  name.vb: IsIn(Of XmlLocalizationDictionary)(XmlLocalizationDictionary())
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn<XmlLocalizationDictionary>
    nameWithType: ObjectExtensions.IsIn<XmlLocalizationDictionary>
    fullName: OSharp.Extensions.ObjectExtensions.IsIn<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn(Of XmlLocalizationDictionary)
    nameWithType: ObjectExtensions.IsIn(Of XmlLocalizationDictionary)
    fullName: OSharp.Extensions.ObjectExtensions.IsIn(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Extensions.ObjectExtensions.ToDynamic
  commentId: M:OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: ObjectExtensions.ToDynamic()
  fullName: OSharp.Extensions.ObjectExtensions.ToDynamic()
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.ObjectExtensions.DeepClone``1
  commentId: M:OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  parent: OSharp.Extensions.ObjectExtensions
  definition: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<XmlLocalizationDictionary>()
  nameWithType: ObjectExtensions.DeepClone<XmlLocalizationDictionary>()
  fullName: OSharp.Extensions.ObjectExtensions.DeepClone<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of XmlLocalizationDictionary)()
  fullName.vb: OSharp.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)()
  name.vb: DeepClone(Of XmlLocalizationDictionary)()
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone<XmlLocalizationDictionary>
    nameWithType: ObjectExtensions.DeepClone<XmlLocalizationDictionary>
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone(Of XmlLocalizationDictionary)
    nameWithType: ObjectExtensions.DeepClone(Of XmlLocalizationDictionary)
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  parent: OSharp.Extensions.ParameterCheckExtensions
  definition: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<XmlLocalizationDictionary>(Func<XmlLocalizationDictionary, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<XmlLocalizationDictionary>(Func<XmlLocalizationDictionary, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>(System.Func<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of XmlLocalizationDictionary)(Func(Of XmlLocalizationDictionary, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)(System.Func(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, System.Boolean), System.String)
  name.vb: Required(Of XmlLocalizationDictionary)(Func(Of XmlLocalizationDictionary, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required<XmlLocalizationDictionary>
    nameWithType: ParameterCheckExtensions.Required<XmlLocalizationDictionary>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required(Of XmlLocalizationDictionary)
    nameWithType: ParameterCheckExtensions.Required(Of XmlLocalizationDictionary)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  parent: OSharp.Extensions.ParameterCheckExtensions
  definition: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<XmlLocalizationDictionary, TException>(Func<XmlLocalizationDictionary, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<XmlLocalizationDictionary, TException>(Func<XmlLocalizationDictionary, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TException>(System.Func<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of XmlLocalizationDictionary, TException)(Func(Of XmlLocalizationDictionary, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TException)(System.Func(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, System.Boolean), System.String)
  name.vb: Required(Of XmlLocalizationDictionary, TException)(Func(Of XmlLocalizationDictionary, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required<XmlLocalizationDictionary, TException>
    nameWithType: ParameterCheckExtensions.Required<XmlLocalizationDictionary, TException>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required(Of XmlLocalizationDictionary, TException)
    nameWithType: ParameterCheckExtensions.Required(Of XmlLocalizationDictionary, TException)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  parent: OSharp.Extensions.ParameterCheckExtensions
  definition: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  name: CheckNotNull<XmlLocalizationDictionary>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<XmlLocalizationDictionary>(String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of XmlLocalizationDictionary)(String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)(System.String)
  name.vb: CheckNotNull(Of XmlLocalizationDictionary)(String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull<XmlLocalizationDictionary>
    nameWithType: ParameterCheckExtensions.CheckNotNull<XmlLocalizationDictionary>
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull(Of XmlLocalizationDictionary)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of XmlLocalizationDictionary)
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  parent: OSharp.Extensions.ParameterCheckExtensions
  definition: OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name: CheckNotNullOrEmpty<LocalizedString>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNullOrEmpty<LocalizedString>(String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty<Hybrid.Localization.LocalizedString>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNullOrEmpty(Of LocalizedString)(String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty(Of Hybrid.Localization.LocalizedString)(System.String)
  name.vb: CheckNotNullOrEmpty(Of LocalizedString)(String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.String)
    name: CheckNotNullOrEmpty<LocalizedString>
    nameWithType: ParameterCheckExtensions.CheckNotNullOrEmpty<LocalizedString>
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.String)
    name: CheckNotNullOrEmpty(Of LocalizedString)
    nameWithType: ParameterCheckExtensions.CheckNotNullOrEmpty(Of LocalizedString)
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary},System.Action{System.Exception},System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>, Action<Exception>, Action<XmlLocalizationDictionary>)
  nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>, Action<Exception>, Action<XmlLocalizationDictionary>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>(System.Action<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>, System.Action<System.Exception>, System.Action<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary), Action(Of Exception), Action(Of XmlLocalizationDictionary))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)(System.Action(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary), System.Action(Of System.Exception), System.Action(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary))
  name.vb: TryCatch(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary), Action(Of Exception), Action(Of XmlLocalizationDictionary))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<XmlLocalizationDictionary>
    nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of XmlLocalizationDictionary)
    nameWithType: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  name: TryCatch<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>(System.Action<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)(System.Action(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary), System.Action(Of System.Exception))
  name.vb: TryCatch(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch<XmlLocalizationDictionary>
    nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of XmlLocalizationDictionary)
    nameWithType: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<XmlLocalizationDictionary, TResult>(Func<XmlLocalizationDictionary, TResult>, Action<Exception>, Action<XmlLocalizationDictionary>)
  nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary, TResult>(Func<XmlLocalizationDictionary, TResult>, Action<Exception>, Action<XmlLocalizationDictionary>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>(System.Func<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>, System.Action<System.Exception>, System.Action<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary, TResult)(Func(Of XmlLocalizationDictionary, TResult), Action(Of Exception), Action(Of XmlLocalizationDictionary))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult)(System.Func(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult), System.Action(Of System.Exception), System.Action(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary))
  name.vb: TryCatch(Of XmlLocalizationDictionary, TResult)(Func(Of XmlLocalizationDictionary, TResult), Action(Of Exception), Action(Of XmlLocalizationDictionary))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<XmlLocalizationDictionary, TResult>
    nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of XmlLocalizationDictionary, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,{TResult}},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  name: TryCatch<XmlLocalizationDictionary, TResult>(Func<XmlLocalizationDictionary, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary, TResult>(Func<XmlLocalizationDictionary, TResult>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>(System.Func<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary, TResult)(Func(Of XmlLocalizationDictionary, TResult), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult)(System.Func(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of XmlLocalizationDictionary, TResult)(Func(Of XmlLocalizationDictionary, TResult), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<XmlLocalizationDictionary, TResult>
    nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of XmlLocalizationDictionary, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary},System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  parent: OSharp.Extensions.TryCatchExtensions
  definition: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  name: TryFinally<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>, Action<XmlLocalizationDictionary>)
  nameWithType: TryCatchExtensions.TryFinally<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>, Action<XmlLocalizationDictionary>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>(System.Action<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>, System.Action<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary), Action(Of XmlLocalizationDictionary))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)(System.Action(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary), System.Action(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary))
  name.vb: TryFinally(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary), Action(Of XmlLocalizationDictionary))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally<XmlLocalizationDictionary>
    nameWithType: TryCatchExtensions.TryFinally<XmlLocalizationDictionary>
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally(Of XmlLocalizationDictionary)
    nameWithType: TryCatchExtensions.TryFinally(Of XmlLocalizationDictionary)
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  commentId: M:OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  parent: OSharp.Json.JsonExtensions
  definition: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  name: ToJsonString(Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Boolean, Boolean)
  fullName: OSharp.Json.JsonExtensions.ToJsonString(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Mapping.MapperExtensions.MapTo``1
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  parent: OSharp.Mapping.MapperExtensions
  definition: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  name: MapTo<TTarget>()
  nameWithType: MapperExtensions.MapTo<TTarget>()
  fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>()
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)()
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)()
  name.vb: MapTo(Of TTarget)()
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Mapping.MapperExtensions.MapTo``2({TTarget})
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  parent: OSharp.Mapping.MapperExtensions
  definition: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<XmlLocalizationDictionary, TTarget>(TTarget)
  nameWithType: MapperExtensions.MapTo<XmlLocalizationDictionary, TTarget>(TTarget)
  fullName: OSharp.Mapping.MapperExtensions.MapTo<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TTarget>(TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of XmlLocalizationDictionary, TTarget)(TTarget)
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TTarget)(TTarget)
  name.vb: MapTo(Of XmlLocalizationDictionary, TTarget)(TTarget)
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo<XmlLocalizationDictionary, TTarget>
    nameWithType: MapperExtensions.MapTo<XmlLocalizationDictionary, TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo(Of XmlLocalizationDictionary, TTarget)
    nameWithType: MapperExtensions.MapTo(Of XmlLocalizationDictionary, TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Reflection.LockExtensions.Locking(System.Action)
  commentId: M:OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  name: Locking(Action)
  nameWithType: LockExtensions.Locking(Action)
  fullName: OSharp.Reflection.LockExtensions.Locking(System.Action)
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  name: Locking<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>)
  nameWithType: LockExtensions.Locking<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>)
  fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>(System.Action<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>)
  nameWithType.vb: LockExtensions.Locking(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)(System.Action(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary))
  name.vb: Locking(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking<XmlLocalizationDictionary>
    nameWithType: LockExtensions.Locking<XmlLocalizationDictionary>
    fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking(Of XmlLocalizationDictionary)
    nameWithType: LockExtensions.Locking(Of XmlLocalizationDictionary)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.OSharp.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  name: Locking<TResult>(Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Func<TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<TResult>(System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Func(Of TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of TResult)(System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.OSharp.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,{TResult}})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  parent: OSharp.Reflection.LockExtensions
  definition: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  name: Locking<XmlLocalizationDictionary, TResult>(Func<XmlLocalizationDictionary, TResult>)
  nameWithType: LockExtensions.Locking<XmlLocalizationDictionary, TResult>(Func<XmlLocalizationDictionary, TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>(System.Func<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of XmlLocalizationDictionary, TResult)(Func(Of XmlLocalizationDictionary, TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult)(System.Func(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult))
  name.vb: Locking(Of XmlLocalizationDictionary, TResult)(Func(Of XmlLocalizationDictionary, TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking<XmlLocalizationDictionary, TResult>
    nameWithType: LockExtensions.Locking<XmlLocalizationDictionary, TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking(Of XmlLocalizationDictionary, TResult)
    nameWithType: LockExtensions.Locking(Of XmlLocalizationDictionary, TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.JoinAsString``1(System.String)
  commentId: M:Hybrid.Extensions.EnumerableExtensions.JoinAsString``1(System.Collections.Generic.IEnumerable{``0},System.String)
  parent: Hybrid.Extensions.EnumerableExtensions
  definition: Hybrid.Extensions.EnumerableExtensions.JoinAsString``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name: JoinAsString<LocalizedString>(String)
  nameWithType: EnumerableExtensions.JoinAsString<LocalizedString>(String)
  fullName: Hybrid.Extensions.EnumerableExtensions.JoinAsString<Hybrid.Localization.LocalizedString>(System.String)
  nameWithType.vb: EnumerableExtensions.JoinAsString(Of LocalizedString)(String)
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.JoinAsString(Of Hybrid.Localization.LocalizedString)(System.String)
  name.vb: JoinAsString(Of LocalizedString)(String)
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.JoinAsString``1(System.String)
    name: JoinAsString<LocalizedString>
    nameWithType: EnumerableExtensions.JoinAsString<LocalizedString>
    fullName: Hybrid.Extensions.EnumerableExtensions.JoinAsString<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.JoinAsString``1(System.String)
    name: JoinAsString(Of LocalizedString)
    nameWithType: EnumerableExtensions.JoinAsString(Of LocalizedString)
    fullName: Hybrid.Extensions.EnumerableExtensions.JoinAsString(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Boolean,System.Func{Hybrid.Localization.LocalizedString,System.Boolean})
  commentId: M:Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Boolean})
  parent: Hybrid.Extensions.EnumerableExtensions
  definition: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Boolean})
  name: WhereIf<LocalizedString>(Boolean, Func<LocalizedString, Boolean>)
  nameWithType: EnumerableExtensions.WhereIf<LocalizedString>(Boolean, Func<LocalizedString, Boolean>)
  fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf<Hybrid.Localization.LocalizedString>(System.Boolean, System.Func<Hybrid.Localization.LocalizedString, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.WhereIf(Of LocalizedString)(Boolean, Func(Of LocalizedString, Boolean))
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.WhereIf(Of Hybrid.Localization.LocalizedString)(System.Boolean, System.Func(Of Hybrid.Localization.LocalizedString, System.Boolean))
  name.vb: WhereIf(Of LocalizedString)(Boolean, Func(Of LocalizedString, Boolean))
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Boolean,System.Func{``0,System.Boolean})
    name: WhereIf<LocalizedString>
    nameWithType: EnumerableExtensions.WhereIf<LocalizedString>
    fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Boolean,System.Func{``0,System.Boolean})
    name: WhereIf(Of LocalizedString)
    nameWithType: EnumerableExtensions.WhereIf(Of LocalizedString)
    fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Boolean,System.Func{Hybrid.Localization.LocalizedString,System.Int32,System.Boolean})
  commentId: M:Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Int32,System.Boolean})
  parent: Hybrid.Extensions.EnumerableExtensions
  definition: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Int32,System.Boolean})
  name: WhereIf<LocalizedString>(Boolean, Func<LocalizedString, Int32, Boolean>)
  nameWithType: EnumerableExtensions.WhereIf<LocalizedString>(Boolean, Func<LocalizedString, Int32, Boolean>)
  fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf<Hybrid.Localization.LocalizedString>(System.Boolean, System.Func<Hybrid.Localization.LocalizedString, System.Int32, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.WhereIf(Of LocalizedString)(Boolean, Func(Of LocalizedString, Int32, Boolean))
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.WhereIf(Of Hybrid.Localization.LocalizedString)(System.Boolean, System.Func(Of Hybrid.Localization.LocalizedString, System.Int32, System.Boolean))
  name.vb: WhereIf(Of LocalizedString)(Boolean, Func(Of LocalizedString, Int32, Boolean))
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Boolean,System.Func{``0,System.Int32,System.Boolean})
    name: WhereIf<LocalizedString>
    nameWithType: EnumerableExtensions.WhereIf<LocalizedString>
    fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Boolean,System.Func{``0,System.Int32,System.Boolean})
    name: WhereIf(Of LocalizedString)
    nameWithType: EnumerableExtensions.WhereIf(Of LocalizedString)
    fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.Shuffle``1
  commentId: M:Hybrid.Extensions.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  parent: Hybrid.Extensions.EnumerableExtensions
  definition: Hybrid.Extensions.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  name: Shuffle<LocalizedString>()
  nameWithType: EnumerableExtensions.Shuffle<LocalizedString>()
  fullName: Hybrid.Extensions.EnumerableExtensions.Shuffle<Hybrid.Localization.LocalizedString>()
  nameWithType.vb: EnumerableExtensions.Shuffle(Of LocalizedString)()
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.Shuffle(Of Hybrid.Localization.LocalizedString)()
  name.vb: Shuffle(Of LocalizedString)()
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.Shuffle``1
    name: Shuffle<LocalizedString>
    nameWithType: EnumerableExtensions.Shuffle<LocalizedString>
    fullName: Hybrid.Extensions.EnumerableExtensions.Shuffle<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.Shuffle``1
    name: Shuffle(Of LocalizedString)
    nameWithType: EnumerableExtensions.Shuffle(Of LocalizedString)
    fullName: Hybrid.Extensions.EnumerableExtensions.Shuffle(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.String)
  commentId: M:Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.String)
  parent: Hybrid.Extensions.EnumerableExtensions
  definition: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name: ExpandAndToString<LocalizedString>(String)
  nameWithType: EnumerableExtensions.ExpandAndToString<LocalizedString>(String)
  fullName: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString<Hybrid.Localization.LocalizedString>(System.String)
  nameWithType.vb: EnumerableExtensions.ExpandAndToString(Of LocalizedString)(String)
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString(Of Hybrid.Localization.LocalizedString)(System.String)
  name.vb: ExpandAndToString(Of LocalizedString)(String)
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.String)
    name: ExpandAndToString<LocalizedString>
    nameWithType: EnumerableExtensions.ExpandAndToString<LocalizedString>
    fullName: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.String)
    name: ExpandAndToString(Of LocalizedString)
    nameWithType: EnumerableExtensions.ExpandAndToString(Of LocalizedString)
    fullName: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Func{Hybrid.Localization.LocalizedString,System.String},System.String)
  commentId: M:Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
  parent: Hybrid.Extensions.EnumerableExtensions
  definition: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
  name: ExpandAndToString<LocalizedString>(Func<LocalizedString, String>, String)
  nameWithType: EnumerableExtensions.ExpandAndToString<LocalizedString>(Func<LocalizedString, String>, String)
  fullName: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString<Hybrid.Localization.LocalizedString>(System.Func<Hybrid.Localization.LocalizedString, System.String>, System.String)
  nameWithType.vb: EnumerableExtensions.ExpandAndToString(Of LocalizedString)(Func(Of LocalizedString, String), String)
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString(Of Hybrid.Localization.LocalizedString)(System.Func(Of Hybrid.Localization.LocalizedString, System.String), System.String)
  name.vb: ExpandAndToString(Of LocalizedString)(Func(Of LocalizedString, String), String)
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Func{``0,System.String},System.String)
    name: ExpandAndToString<LocalizedString>
    nameWithType: EnumerableExtensions.ExpandAndToString<LocalizedString>
    fullName: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Func{``0,System.String},System.String)
    name: ExpandAndToString(Of LocalizedString)
    nameWithType: EnumerableExtensions.ExpandAndToString(Of LocalizedString)
    fullName: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.IsEmpty``1
  commentId: M:Hybrid.Extensions.EnumerableExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
  parent: Hybrid.Extensions.EnumerableExtensions
  definition: Hybrid.Extensions.EnumerableExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
  name: IsEmpty<LocalizedString>()
  nameWithType: EnumerableExtensions.IsEmpty<LocalizedString>()
  fullName: Hybrid.Extensions.EnumerableExtensions.IsEmpty<Hybrid.Localization.LocalizedString>()
  nameWithType.vb: EnumerableExtensions.IsEmpty(Of LocalizedString)()
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.IsEmpty(Of Hybrid.Localization.LocalizedString)()
  name.vb: IsEmpty(Of LocalizedString)()
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.IsEmpty``1
    name: IsEmpty<LocalizedString>
    nameWithType: EnumerableExtensions.IsEmpty<LocalizedString>
    fullName: Hybrid.Extensions.EnumerableExtensions.IsEmpty<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.IsEmpty``1
    name: IsEmpty(Of LocalizedString)
    nameWithType: EnumerableExtensions.IsEmpty(Of LocalizedString)
    fullName: Hybrid.Extensions.EnumerableExtensions.IsEmpty(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Func{Hybrid.Localization.LocalizedString,System.Boolean},System.Boolean)
  commentId: M:Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean)
  parent: Hybrid.Extensions.EnumerableExtensions
  definition: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean)
  name: WhereIf<LocalizedString>(Func<LocalizedString, Boolean>, Boolean)
  nameWithType: EnumerableExtensions.WhereIf<LocalizedString>(Func<LocalizedString, Boolean>, Boolean)
  fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf<Hybrid.Localization.LocalizedString>(System.Func<Hybrid.Localization.LocalizedString, System.Boolean>, System.Boolean)
  nameWithType.vb: EnumerableExtensions.WhereIf(Of LocalizedString)(Func(Of LocalizedString, Boolean), Boolean)
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.WhereIf(Of Hybrid.Localization.LocalizedString)(System.Func(Of Hybrid.Localization.LocalizedString, System.Boolean), System.Boolean)
  name.vb: WhereIf(Of LocalizedString)(Func(Of LocalizedString, Boolean), Boolean)
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Func{``0,System.Boolean},System.Boolean)
    name: WhereIf<LocalizedString>
    nameWithType: EnumerableExtensions.WhereIf<LocalizedString>
    fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Func{``0,System.Boolean},System.Boolean)
    name: WhereIf(Of LocalizedString)
    nameWithType: EnumerableExtensions.WhereIf(Of LocalizedString)
    fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.DistinctBy``2(System.Func{Hybrid.Localization.LocalizedString,{TKey}})
  commentId: M:Hybrid.Extensions.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: Hybrid.Extensions.EnumerableExtensions
  definition: Hybrid.Extensions.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: DistinctBy<LocalizedString, TKey>(Func<LocalizedString, TKey>)
  nameWithType: EnumerableExtensions.DistinctBy<LocalizedString, TKey>(Func<LocalizedString, TKey>)
  fullName: Hybrid.Extensions.EnumerableExtensions.DistinctBy<Hybrid.Localization.LocalizedString, TKey>(System.Func<Hybrid.Localization.LocalizedString, TKey>)
  nameWithType.vb: EnumerableExtensions.DistinctBy(Of LocalizedString, TKey)(Func(Of LocalizedString, TKey))
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.DistinctBy(Of Hybrid.Localization.LocalizedString, TKey)(System.Func(Of Hybrid.Localization.LocalizedString, TKey))
  name.vb: DistinctBy(Of LocalizedString, TKey)(Func(Of LocalizedString, TKey))
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.DistinctBy``2(System.Func{``0,``1})
    name: DistinctBy<LocalizedString, TKey>
    nameWithType: EnumerableExtensions.DistinctBy<LocalizedString, TKey>
    fullName: Hybrid.Extensions.EnumerableExtensions.DistinctBy<Hybrid.Localization.LocalizedString, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.DistinctBy``2(System.Func{``0,``1})
    name: DistinctBy(Of LocalizedString, TKey)
    nameWithType: EnumerableExtensions.DistinctBy(Of LocalizedString, TKey)
    fullName: Hybrid.Extensions.EnumerableExtensions.DistinctBy(Of Hybrid.Localization.LocalizedString, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.String,System.ComponentModel.ListSortDirection)
  commentId: M:Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.String,System.ComponentModel.ListSortDirection)
  parent: Hybrid.Extensions.EnumerableExtensions
  definition: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.String,System.ComponentModel.ListSortDirection)
  name: OrderBy<LocalizedString>(String, ListSortDirection)
  nameWithType: EnumerableExtensions.OrderBy<LocalizedString>(String, ListSortDirection)
  fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy<Hybrid.Localization.LocalizedString>(System.String, System.ComponentModel.ListSortDirection)
  nameWithType.vb: EnumerableExtensions.OrderBy(Of LocalizedString)(String, ListSortDirection)
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.OrderBy(Of Hybrid.Localization.LocalizedString)(System.String, System.ComponentModel.ListSortDirection)
  name.vb: OrderBy(Of LocalizedString)(String, ListSortDirection)
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.String,System.ComponentModel.ListSortDirection)
    name: OrderBy<LocalizedString>
    nameWithType: EnumerableExtensions.OrderBy<LocalizedString>
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.ListSortDirection
    name: ListSortDirection
    nameWithType: ListSortDirection
    fullName: System.ComponentModel.ListSortDirection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.String,System.ComponentModel.ListSortDirection)
    name: OrderBy(Of LocalizedString)
    nameWithType: EnumerableExtensions.OrderBy(Of LocalizedString)
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.ListSortDirection
    name: ListSortDirection
    nameWithType: ListSortDirection
    fullName: System.ComponentModel.ListSortDirection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.OrderBy``1(Hybrid.Filter.SortCondition)
  commentId: M:Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},Hybrid.Filter.SortCondition)
  parent: Hybrid.Extensions.EnumerableExtensions
  definition: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},Hybrid.Filter.SortCondition)
  name: OrderBy<LocalizedString>(SortCondition)
  nameWithType: EnumerableExtensions.OrderBy<LocalizedString>(SortCondition)
  fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy<Hybrid.Localization.LocalizedString>(Hybrid.Filter.SortCondition)
  nameWithType.vb: EnumerableExtensions.OrderBy(Of LocalizedString)(SortCondition)
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.OrderBy(Of Hybrid.Localization.LocalizedString)(Hybrid.Filter.SortCondition)
  name.vb: OrderBy(Of LocalizedString)(SortCondition)
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(Hybrid.Filter.SortCondition)
    name: OrderBy<LocalizedString>
    nameWithType: EnumerableExtensions.OrderBy<LocalizedString>
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Filter.SortCondition
    name: SortCondition
    nameWithType: SortCondition
    fullName: Hybrid.Filter.SortCondition
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(Hybrid.Filter.SortCondition)
    name: OrderBy(Of LocalizedString)
    nameWithType: EnumerableExtensions.OrderBy(Of LocalizedString)
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Filter.SortCondition
    name: SortCondition
    nameWithType: SortCondition
    fullName: Hybrid.Filter.SortCondition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.OrderBy``1(Hybrid.Filter.SortCondition{Hybrid.Localization.LocalizedString})
  commentId: M:Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},Hybrid.Filter.SortCondition{``0})
  parent: Hybrid.Extensions.EnumerableExtensions
  definition: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},Hybrid.Filter.SortCondition{``0})
  name: OrderBy<LocalizedString>(SortCondition<LocalizedString>)
  nameWithType: EnumerableExtensions.OrderBy<LocalizedString>(SortCondition<LocalizedString>)
  fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy<Hybrid.Localization.LocalizedString>(Hybrid.Filter.SortCondition<Hybrid.Localization.LocalizedString>)
  nameWithType.vb: EnumerableExtensions.OrderBy(Of LocalizedString)(SortCondition(Of LocalizedString))
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.OrderBy(Of Hybrid.Localization.LocalizedString)(Hybrid.Filter.SortCondition(Of Hybrid.Localization.LocalizedString))
  name.vb: OrderBy(Of LocalizedString)(SortCondition(Of LocalizedString))
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(Hybrid.Filter.SortCondition{``0})
    name: OrderBy<LocalizedString>
    nameWithType: EnumerableExtensions.OrderBy<LocalizedString>
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Filter.SortCondition`1
    name: SortCondition
    nameWithType: SortCondition
    fullName: Hybrid.Filter.SortCondition
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(Hybrid.Filter.SortCondition{``0})
    name: OrderBy(Of LocalizedString)
    nameWithType: EnumerableExtensions.OrderBy(Of LocalizedString)
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Filter.SortCondition`1
    name: SortCondition
    nameWithType: SortCondition
    fullName: Hybrid.Filter.SortCondition
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes``1(System.Func{Hybrid.Localization.LocalizedString,System.String},System.String[])
  commentId: M:Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String[])
  parent: Hybrid.Extensions.EnumerableExtensions
  definition: Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String[])
  name: OrderByPrefixes<LocalizedString>(Func<LocalizedString, String>, String[])
  nameWithType: EnumerableExtensions.OrderByPrefixes<LocalizedString>(Func<LocalizedString, String>, String[])
  fullName: Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes<Hybrid.Localization.LocalizedString>(System.Func<Hybrid.Localization.LocalizedString, System.String>, System.String[])
  nameWithType.vb: EnumerableExtensions.OrderByPrefixes(Of LocalizedString)(Func(Of LocalizedString, String), String())
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes(Of Hybrid.Localization.LocalizedString)(System.Func(Of Hybrid.Localization.LocalizedString, System.String), System.String())
  name.vb: OrderByPrefixes(Of LocalizedString)(Func(Of LocalizedString, String), String())
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes``1(System.Func{``0,System.String},System.String[])
    name: OrderByPrefixes<LocalizedString>
    nameWithType: EnumerableExtensions.OrderByPrefixes<LocalizedString>
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes``1(System.Func{``0,System.String},System.String[])
    name: OrderByPrefixes(Of LocalizedString)
    nameWithType: EnumerableExtensions.OrderByPrefixes(Of LocalizedString)
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  name: CastTo(Type)
  nameWithType: ObjectExtensions.CastTo(Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  name: CastTo<T>()
  nameWithType: ObjectExtensions.CastTo<T>()
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>()
  nameWithType.vb: ObjectExtensions.CastTo(Of T)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)()
  name.vb: CastTo(Of T)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.CastTo``1({T})
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  name: CastTo<T>(T)
  nameWithType: ObjectExtensions.CastTo<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(T)
  name.vb: CastTo(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.ObjectExtensions.IsIn``1(Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<XmlLocalizationDictionary>(XmlLocalizationDictionary[])
  nameWithType: ObjectExtensions.IsIn<XmlLocalizationDictionary>(XmlLocalizationDictionary[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>(Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary[])
  nameWithType.vb: ObjectExtensions.IsIn(Of XmlLocalizationDictionary)(XmlLocalizationDictionary())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)(Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary())
  name.vb: IsIn(Of XmlLocalizationDictionary)(XmlLocalizationDictionary())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn<XmlLocalizationDictionary>
    nameWithType: ObjectExtensions.IsIn<XmlLocalizationDictionary>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0[])
    name: IsIn(Of XmlLocalizationDictionary)
    nameWithType: ObjectExtensions.IsIn(Of XmlLocalizationDictionary)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Extensions.ObjectExtensions.ToDynamic
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  name: ToDynamic()
  nameWithType: ObjectExtensions.ToDynamic()
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.ObjectExtensions.DeepClone``1
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  parent: Hybrid.Extensions.ObjectExtensions
  definition: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<XmlLocalizationDictionary>()
  nameWithType: ObjectExtensions.DeepClone<XmlLocalizationDictionary>()
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>()
  nameWithType.vb: ObjectExtensions.DeepClone(Of XmlLocalizationDictionary)()
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)()
  name.vb: DeepClone(Of XmlLocalizationDictionary)()
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone<XmlLocalizationDictionary>
    nameWithType: ObjectExtensions.DeepClone<XmlLocalizationDictionary>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1
    name: DeepClone(Of XmlLocalizationDictionary)
    nameWithType: ObjectExtensions.DeepClone(Of XmlLocalizationDictionary)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<XmlLocalizationDictionary>(Func<XmlLocalizationDictionary, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<XmlLocalizationDictionary>(Func<XmlLocalizationDictionary, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>(System.Func<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of XmlLocalizationDictionary)(Func(Of XmlLocalizationDictionary, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)(System.Func(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, System.Boolean), System.String)
  name.vb: Required(Of XmlLocalizationDictionary)(Func(Of XmlLocalizationDictionary, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required<XmlLocalizationDictionary>
    nameWithType: ParameterCheckExtensions.Required<XmlLocalizationDictionary>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(System.Func{``0,System.Boolean},System.String)
    name: Required(Of XmlLocalizationDictionary)
    nameWithType: ParameterCheckExtensions.Required(Of XmlLocalizationDictionary)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  name: Required<XmlLocalizationDictionary, TException>(Func<XmlLocalizationDictionary, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<XmlLocalizationDictionary, TException>(Func<XmlLocalizationDictionary, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TException>(System.Func<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of XmlLocalizationDictionary, TException)(Func(Of XmlLocalizationDictionary, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TException)(System.Func(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, System.Boolean), System.String)
  name.vb: Required(Of XmlLocalizationDictionary, TException)(Func(Of XmlLocalizationDictionary, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required<XmlLocalizationDictionary, TException>
    nameWithType: ParameterCheckExtensions.Required<XmlLocalizationDictionary, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TException>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(System.Func{``0,System.Boolean},System.String)
    name: Required(Of XmlLocalizationDictionary, TException)
    nameWithType: ParameterCheckExtensions.Required(Of XmlLocalizationDictionary, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TException)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  name: CheckNotNull<XmlLocalizationDictionary>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<XmlLocalizationDictionary>(String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of XmlLocalizationDictionary)(String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)(System.String)
  name.vb: CheckNotNull(Of XmlLocalizationDictionary)(String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull<XmlLocalizationDictionary>
    nameWithType: ParameterCheckExtensions.CheckNotNull<XmlLocalizationDictionary>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(System.String)
    name: CheckNotNull(Of XmlLocalizationDictionary)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of XmlLocalizationDictionary)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  parent: Hybrid.Extensions.ParameterCheckExtensions
  definition: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name: CheckNotNullOrEmpty<LocalizedString>(String)
  nameWithType: ParameterCheckExtensions.CheckNotNullOrEmpty<LocalizedString>(String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty<Hybrid.Localization.LocalizedString>(System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNullOrEmpty(Of LocalizedString)(String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty(Of Hybrid.Localization.LocalizedString)(System.String)
  name.vb: CheckNotNullOrEmpty(Of LocalizedString)(String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.String)
    name: CheckNotNullOrEmpty<LocalizedString>
    nameWithType: ParameterCheckExtensions.CheckNotNullOrEmpty<LocalizedString>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.String)
    name: CheckNotNullOrEmpty(Of LocalizedString)
    nameWithType: ParameterCheckExtensions.CheckNotNullOrEmpty(Of LocalizedString)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary},System.Action{System.Exception},System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>, Action<Exception>, Action<XmlLocalizationDictionary>)
  nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>, Action<Exception>, Action<XmlLocalizationDictionary>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>(System.Action<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>, System.Action<System.Exception>, System.Action<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary), Action(Of Exception), Action(Of XmlLocalizationDictionary))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)(System.Action(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary), System.Action(Of System.Exception), System.Action(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary))
  name.vb: TryCatch(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary), Action(Of Exception), Action(Of XmlLocalizationDictionary))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<XmlLocalizationDictionary>
    nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of XmlLocalizationDictionary)
    nameWithType: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  name: TryCatch<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>(System.Action<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)(System.Action(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary), System.Action(Of System.Exception))
  name.vb: TryCatch(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch<XmlLocalizationDictionary>
    nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of XmlLocalizationDictionary)
    nameWithType: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,{TResult}},System.Action{System.Exception},System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  name: TryCatch<XmlLocalizationDictionary, TResult>(Func<XmlLocalizationDictionary, TResult>, Action<Exception>, Action<XmlLocalizationDictionary>)
  nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary, TResult>(Func<XmlLocalizationDictionary, TResult>, Action<Exception>, Action<XmlLocalizationDictionary>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>(System.Func<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>, System.Action<System.Exception>, System.Action<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary, TResult)(Func(Of XmlLocalizationDictionary, TResult), Action(Of Exception), Action(Of XmlLocalizationDictionary))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult)(System.Func(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult), System.Action(Of System.Exception), System.Action(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary))
  name.vb: TryCatch(Of XmlLocalizationDictionary, TResult)(Func(Of XmlLocalizationDictionary, TResult), Action(Of Exception), Action(Of XmlLocalizationDictionary))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<XmlLocalizationDictionary, TResult>
    nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of XmlLocalizationDictionary, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,{TResult}},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  name: TryCatch<XmlLocalizationDictionary, TResult>(Func<XmlLocalizationDictionary, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary, TResult>(Func<XmlLocalizationDictionary, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>(System.Func<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary, TResult)(Func(Of XmlLocalizationDictionary, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult)(System.Func(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of XmlLocalizationDictionary, TResult)(Func(Of XmlLocalizationDictionary, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<XmlLocalizationDictionary, TResult>
    nameWithType: TryCatchExtensions.TryCatch<XmlLocalizationDictionary, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of XmlLocalizationDictionary, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of XmlLocalizationDictionary, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary},System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  parent: Hybrid.Extensions.TryCatchExtensions
  definition: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  name: TryFinally<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>, Action<XmlLocalizationDictionary>)
  nameWithType: TryCatchExtensions.TryFinally<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>, Action<XmlLocalizationDictionary>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>(System.Action<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>, System.Action<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary), Action(Of XmlLocalizationDictionary))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)(System.Action(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary), System.Action(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary))
  name.vb: TryFinally(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary), Action(Of XmlLocalizationDictionary))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally<XmlLocalizationDictionary>
    nameWithType: TryCatchExtensions.TryFinally<XmlLocalizationDictionary>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(System.Action{``0},System.Action{``0})
    name: TryFinally(Of XmlLocalizationDictionary)
    nameWithType: TryCatchExtensions.TryFinally(Of XmlLocalizationDictionary)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  parent: Hybrid.Json.JsonExtensions
  definition: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  name: ToJsonString(Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Mapping.MapperExtensions.MapTo``1
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  name: MapTo<TTarget>()
  nameWithType: MapperExtensions.MapTo<TTarget>()
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>()
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)()
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)()
  name.vb: MapTo(Of TTarget)()
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Mapping.MapperExtensions.MapTo``2({TTarget})
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  parent: Hybrid.Mapping.MapperExtensions
  definition: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<XmlLocalizationDictionary, TTarget>(TTarget)
  nameWithType: MapperExtensions.MapTo<XmlLocalizationDictionary, TTarget>(TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TTarget>(TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of XmlLocalizationDictionary, TTarget)(TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TTarget)(TTarget)
  name.vb: MapTo(Of XmlLocalizationDictionary, TTarget)(TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo<XmlLocalizationDictionary, TTarget>
    nameWithType: MapperExtensions.MapTo<XmlLocalizationDictionary, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``1)
    name: MapTo(Of XmlLocalizationDictionary, TTarget)
    nameWithType: MapperExtensions.MapTo(Of XmlLocalizationDictionary, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking(System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  name: Locking(Action)
  nameWithType: LockExtensions.Locking(Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Reflection.LockExtensions.Locking``1(System.Action{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  name: Locking<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>)
  nameWithType: LockExtensions.Locking<XmlLocalizationDictionary>(Action<XmlLocalizationDictionary>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>(System.Action<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>)
  nameWithType.vb: LockExtensions.Locking(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)(System.Action(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary))
  name.vb: Locking(Of XmlLocalizationDictionary)(Action(Of XmlLocalizationDictionary))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking<XmlLocalizationDictionary>
    nameWithType: LockExtensions.Locking<XmlLocalizationDictionary>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Action{``0})
    name: Locking(Of XmlLocalizationDictionary)
    nameWithType: LockExtensions.Locking(Of XmlLocalizationDictionary)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Hybrid.Reflection.LockExtensions.Locking``1(System.Func{{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  name: Locking<TResult>(Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Reflection.LockExtensions.Locking``2(System.Func{Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary,{TResult}})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  parent: Hybrid.Reflection.LockExtensions
  definition: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  name: Locking<XmlLocalizationDictionary, TResult>(Func<XmlLocalizationDictionary, TResult>)
  nameWithType: LockExtensions.Locking<XmlLocalizationDictionary, TResult>(Func<XmlLocalizationDictionary, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>(System.Func<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of XmlLocalizationDictionary, TResult)(Func(Of XmlLocalizationDictionary, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult)(System.Func(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult))
  name.vb: Locking(Of XmlLocalizationDictionary, TResult)(Func(Of XmlLocalizationDictionary, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking<XmlLocalizationDictionary, TResult>
    nameWithType: LockExtensions.Locking<XmlLocalizationDictionary, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(System.Func{``0,``1})
    name: Locking(Of XmlLocalizationDictionary, TResult)
    nameWithType: LockExtensions.Locking(Of XmlLocalizationDictionary, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
    name: XmlLocalizationDictionary
    nameWithType: XmlLocalizationDictionary
    fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<XmlLocalizationDictionary, TKey>()
  nameWithType: EntityExtensions.CheckICreatedTime<XmlLocalizationDictionary, TKey>()
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey>()
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of XmlLocalizationDictionary, TKey)()
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey)()
  name.vb: CheckICreatedTime(Of XmlLocalizationDictionary, TKey)()
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime<XmlLocalizationDictionary, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<XmlLocalizationDictionary, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2
    name: CheckICreatedTime(Of XmlLocalizationDictionary, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of XmlLocalizationDictionary, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckICreationAudited<XmlLocalizationDictionary, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<XmlLocalizationDictionary, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of XmlLocalizationDictionary, TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of XmlLocalizationDictionary, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<XmlLocalizationDictionary, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<XmlLocalizationDictionary, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of XmlLocalizationDictionary, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of XmlLocalizationDictionary, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  parent: Hybrid.Domain.Entities.EntityExtensions
  definition: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  name: CheckIUpdateAudited<XmlLocalizationDictionary, TKey, TUserKey>(IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<XmlLocalizationDictionary, TKey, TUserKey>(IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey>(System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of XmlLocalizationDictionary, TKey, TUserKey)(IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey)(System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of XmlLocalizationDictionary, TKey, TUserKey)(IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<XmlLocalizationDictionary, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<XmlLocalizationDictionary, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of XmlLocalizationDictionary, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of XmlLocalizationDictionary, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty``1
  commentId: M:IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})
  parent: IdentityServer4.Extensions.IEnumerableExtensions
  definition: IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})
  name: IsNullOrEmpty<LocalizedString>()
  nameWithType: IEnumerableExtensions.IsNullOrEmpty<LocalizedString>()
  fullName: IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty<Hybrid.Localization.LocalizedString>()
  nameWithType.vb: IEnumerableExtensions.IsNullOrEmpty(Of LocalizedString)()
  fullName.vb: IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty(Of Hybrid.Localization.LocalizedString)()
  name.vb: IsNullOrEmpty(Of LocalizedString)()
  spec.csharp:
  - uid: IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty``1
    name: IsNullOrEmpty<LocalizedString>
    nameWithType: IEnumerableExtensions.IsNullOrEmpty<LocalizedString>
    fullName: IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty<Hybrid.Localization.LocalizedString>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty``1
    name: IsNullOrEmpty(Of LocalizedString)
    nameWithType: IEnumerableExtensions.IsNullOrEmpty(Of LocalizedString)
    fullName: IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty(Of Hybrid.Localization.LocalizedString)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Hybrid.Localization.LocalizedString}.IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates``2(System.Func{Hybrid.Localization.LocalizedString,{TProp}})
  commentId: M:IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: IdentityServer4.Extensions.IEnumerableExtensions
  definition: IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  name: HasDuplicates<LocalizedString, TProp>(Func<LocalizedString, TProp>)
  nameWithType: IEnumerableExtensions.HasDuplicates<LocalizedString, TProp>(Func<LocalizedString, TProp>)
  fullName: IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates<Hybrid.Localization.LocalizedString, TProp>(System.Func<Hybrid.Localization.LocalizedString, TProp>)
  nameWithType.vb: IEnumerableExtensions.HasDuplicates(Of LocalizedString, TProp)(Func(Of LocalizedString, TProp))
  fullName.vb: IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates(Of Hybrid.Localization.LocalizedString, TProp)(System.Func(Of Hybrid.Localization.LocalizedString, TProp))
  name.vb: HasDuplicates(Of LocalizedString, TProp)(Func(Of LocalizedString, TProp))
  spec.csharp:
  - uid: IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates``2(System.Func{``0,``1})
    name: HasDuplicates<LocalizedString, TProp>
    nameWithType: IEnumerableExtensions.HasDuplicates<LocalizedString, TProp>
    fullName: IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates<Hybrid.Localization.LocalizedString, TProp>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates``2(System.Func{``0,``1})
    name: HasDuplicates(Of LocalizedString, TProp)
    nameWithType: IEnumerableExtensions.HasDuplicates(Of LocalizedString, TProp)
    fullName: IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates(Of Hybrid.Localization.LocalizedString, TProp)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Hybrid.Localization.LocalizedString
    name: LocalizedString
    nameWithType: LocalizedString
    fullName: Hybrid.Localization.LocalizedString
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Localization.Dictionaries
  commentId: N:Hybrid.Localization.Dictionaries
  name: Hybrid.Localization.Dictionaries
  nameWithType: Hybrid.Localization.Dictionaries
  fullName: Hybrid.Localization.Dictionaries
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: OSharp.Collections.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:OSharp.Collections.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Shuffle<TSource>(IEnumerable<TSource>)
  nameWithType: EnumerableExtensions.Shuffle<TSource>(IEnumerable<TSource>)
  fullName: OSharp.Collections.EnumerableExtensions.Shuffle<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  nameWithType.vb: EnumerableExtensions.Shuffle(Of TSource)(IEnumerable(Of TSource))
  fullName.vb: OSharp.Collections.EnumerableExtensions.Shuffle(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Shuffle(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
    name: Shuffle<TSource>
    nameWithType: EnumerableExtensions.Shuffle<TSource>
    fullName: OSharp.Collections.EnumerableExtensions.Shuffle<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
    name: Shuffle(Of TSource)
    nameWithType: EnumerableExtensions.Shuffle(Of TSource)
    fullName: OSharp.Collections.EnumerableExtensions.Shuffle(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Collections.EnumerableExtensions
  commentId: T:OSharp.Collections.EnumerableExtensions
  parent: OSharp.Collections
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: OSharp.Collections.EnumerableExtensions
- uid: OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.String)
  commentId: M:OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.String)
  isExternal: true
  name: ExpandAndToString<T>(IEnumerable<T>, String)
  nameWithType: EnumerableExtensions.ExpandAndToString<T>(IEnumerable<T>, String)
  fullName: OSharp.Collections.EnumerableExtensions.ExpandAndToString<T>(System.Collections.Generic.IEnumerable<T>, System.String)
  nameWithType.vb: EnumerableExtensions.ExpandAndToString(Of T)(IEnumerable(Of T), String)
  fullName.vb: OSharp.Collections.EnumerableExtensions.ExpandAndToString(Of T)(System.Collections.Generic.IEnumerable(Of T), System.String)
  name.vb: ExpandAndToString(Of T)(IEnumerable(Of T), String)
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: ExpandAndToString<T>
    nameWithType: EnumerableExtensions.ExpandAndToString<T>
    fullName: OSharp.Collections.EnumerableExtensions.ExpandAndToString<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: ExpandAndToString(Of T)
    nameWithType: EnumerableExtensions.ExpandAndToString(Of T)
    fullName: OSharp.Collections.EnumerableExtensions.ExpandAndToString(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
  commentId: M:OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
  isExternal: true
  name: ExpandAndToString<T>(IEnumerable<T>, Func<T, String>, String)
  nameWithType: EnumerableExtensions.ExpandAndToString<T>(IEnumerable<T>, Func<T, String>, String)
  fullName: OSharp.Collections.EnumerableExtensions.ExpandAndToString<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.String>, System.String)
  nameWithType.vb: EnumerableExtensions.ExpandAndToString(Of T)(IEnumerable(Of T), Func(Of T, String), String)
  fullName.vb: OSharp.Collections.EnumerableExtensions.ExpandAndToString(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.String), System.String)
  name.vb: ExpandAndToString(Of T)(IEnumerable(Of T), Func(Of T, String), String)
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
    name: ExpandAndToString<T>
    nameWithType: EnumerableExtensions.ExpandAndToString<T>
    fullName: OSharp.Collections.EnumerableExtensions.ExpandAndToString<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
    name: ExpandAndToString(Of T)
    nameWithType: EnumerableExtensions.ExpandAndToString(Of T)
    fullName: OSharp.Collections.EnumerableExtensions.ExpandAndToString(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Collections.EnumerableExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:OSharp.Collections.EnumerableExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: IsEmpty<T>(IEnumerable<T>)
  nameWithType: EnumerableExtensions.IsEmpty<T>(IEnumerable<T>)
  fullName: OSharp.Collections.EnumerableExtensions.IsEmpty<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.IsEmpty(Of T)(IEnumerable(Of T))
  fullName.vb: OSharp.Collections.EnumerableExtensions.IsEmpty(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsEmpty(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: IsEmpty<T>
    nameWithType: EnumerableExtensions.IsEmpty<T>
    fullName: OSharp.Collections.EnumerableExtensions.IsEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: IsEmpty(Of T)
    nameWithType: EnumerableExtensions.IsEmpty(Of T)
    fullName: OSharp.Collections.EnumerableExtensions.IsEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Collections.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean)
  commentId: M:OSharp.Collections.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean)
  isExternal: true
  name: WhereIf<T>(IEnumerable<T>, Func<T, Boolean>, Boolean)
  nameWithType: EnumerableExtensions.WhereIf<T>(IEnumerable<T>, Func<T, Boolean>, Boolean)
  fullName: OSharp.Collections.EnumerableExtensions.WhereIf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Boolean>, System.Boolean)
  nameWithType.vb: EnumerableExtensions.WhereIf(Of T)(IEnumerable(Of T), Func(Of T, Boolean), Boolean)
  fullName.vb: OSharp.Collections.EnumerableExtensions.WhereIf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Boolean), System.Boolean)
  name.vb: WhereIf(Of T)(IEnumerable(Of T), Func(Of T, Boolean), Boolean)
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean)
    name: WhereIf<T>
    nameWithType: EnumerableExtensions.WhereIf<T>
    fullName: OSharp.Collections.EnumerableExtensions.WhereIf<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean)
    name: WhereIf(Of T)
    nameWithType: EnumerableExtensions.WhereIf(Of T)
    fullName: OSharp.Collections.EnumerableExtensions.WhereIf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Collections.EnumerableExtensions.OrderByPrefixes``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String[])
  commentId: M:OSharp.Collections.EnumerableExtensions.OrderByPrefixes``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String[])
  isExternal: true
  name: OrderByPrefixes<T>(IEnumerable<T>, Func<T, String>, String[])
  nameWithType: EnumerableExtensions.OrderByPrefixes<T>(IEnumerable<T>, Func<T, String>, String[])
  fullName: OSharp.Collections.EnumerableExtensions.OrderByPrefixes<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.String>, System.String[])
  nameWithType.vb: EnumerableExtensions.OrderByPrefixes(Of T)(IEnumerable(Of T), Func(Of T, String), String())
  fullName.vb: OSharp.Collections.EnumerableExtensions.OrderByPrefixes(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.String), System.String())
  name.vb: OrderByPrefixes(Of T)(IEnumerable(Of T), Func(Of T, String), String())
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.OrderByPrefixes``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String[])
    name: OrderByPrefixes<T>
    nameWithType: EnumerableExtensions.OrderByPrefixes<T>
    fullName: OSharp.Collections.EnumerableExtensions.OrderByPrefixes<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.OrderByPrefixes``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String[])
    name: OrderByPrefixes(Of T)
    nameWithType: EnumerableExtensions.OrderByPrefixes(Of T)
    fullName: OSharp.Collections.EnumerableExtensions.OrderByPrefixes(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Collections.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  commentId: M:OSharp.Collections.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: DistinctBy<T, TKey>(IEnumerable<T>, Func<T, TKey>)
  nameWithType: EnumerableExtensions.DistinctBy<T, TKey>(IEnumerable<T>, Func<T, TKey>)
  fullName: OSharp.Collections.EnumerableExtensions.DistinctBy<T, TKey>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>)
  nameWithType.vb: EnumerableExtensions.DistinctBy(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey))
  fullName.vb: OSharp.Collections.EnumerableExtensions.DistinctBy(Of T, TKey)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey))
  name.vb: DistinctBy(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey))
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: DistinctBy<T, TKey>
    nameWithType: EnumerableExtensions.DistinctBy<T, TKey>
    fullName: OSharp.Collections.EnumerableExtensions.DistinctBy<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: DistinctBy(Of T, TKey)
    nameWithType: EnumerableExtensions.DistinctBy(Of T, TKey)
    fullName: OSharp.Collections.EnumerableExtensions.DistinctBy(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.String,System.ComponentModel.ListSortDirection)
  commentId: M:OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.String,System.ComponentModel.ListSortDirection)
  isExternal: true
  name: OrderBy<T>(IEnumerable<T>, String, ListSortDirection)
  nameWithType: EnumerableExtensions.OrderBy<T>(IEnumerable<T>, String, ListSortDirection)
  fullName: OSharp.Collections.EnumerableExtensions.OrderBy<T>(System.Collections.Generic.IEnumerable<T>, System.String, System.ComponentModel.ListSortDirection)
  nameWithType.vb: EnumerableExtensions.OrderBy(Of T)(IEnumerable(Of T), String, ListSortDirection)
  fullName.vb: OSharp.Collections.EnumerableExtensions.OrderBy(Of T)(System.Collections.Generic.IEnumerable(Of T), System.String, System.ComponentModel.ListSortDirection)
  name.vb: OrderBy(Of T)(IEnumerable(Of T), String, ListSortDirection)
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.String,System.ComponentModel.ListSortDirection)
    name: OrderBy<T>
    nameWithType: EnumerableExtensions.OrderBy<T>
    fullName: OSharp.Collections.EnumerableExtensions.OrderBy<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.ListSortDirection
    name: ListSortDirection
    nameWithType: ListSortDirection
    fullName: System.ComponentModel.ListSortDirection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.String,System.ComponentModel.ListSortDirection)
    name: OrderBy(Of T)
    nameWithType: EnumerableExtensions.OrderBy(Of T)
    fullName: OSharp.Collections.EnumerableExtensions.OrderBy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.ListSortDirection
    name: ListSortDirection
    nameWithType: ListSortDirection
    fullName: System.ComponentModel.ListSortDirection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},OSharp.Filter.SortCondition)
  commentId: M:OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},OSharp.Filter.SortCondition)
  isExternal: true
  name: OrderBy<T>(IEnumerable<T>, SortCondition)
  nameWithType: EnumerableExtensions.OrderBy<T>(IEnumerable<T>, SortCondition)
  fullName: OSharp.Collections.EnumerableExtensions.OrderBy<T>(System.Collections.Generic.IEnumerable<T>, OSharp.Filter.SortCondition)
  nameWithType.vb: EnumerableExtensions.OrderBy(Of T)(IEnumerable(Of T), SortCondition)
  fullName.vb: OSharp.Collections.EnumerableExtensions.OrderBy(Of T)(System.Collections.Generic.IEnumerable(Of T), OSharp.Filter.SortCondition)
  name.vb: OrderBy(Of T)(IEnumerable(Of T), SortCondition)
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},OSharp.Filter.SortCondition)
    name: OrderBy<T>
    nameWithType: EnumerableExtensions.OrderBy<T>
    fullName: OSharp.Collections.EnumerableExtensions.OrderBy<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OSharp.Filter.SortCondition
    name: SortCondition
    nameWithType: SortCondition
    fullName: OSharp.Filter.SortCondition
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},OSharp.Filter.SortCondition)
    name: OrderBy(Of T)
    nameWithType: EnumerableExtensions.OrderBy(Of T)
    fullName: OSharp.Collections.EnumerableExtensions.OrderBy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OSharp.Filter.SortCondition
    name: SortCondition
    nameWithType: SortCondition
    fullName: OSharp.Filter.SortCondition
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},OSharp.Filter.SortCondition{``0})
  commentId: M:OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},OSharp.Filter.SortCondition{``0})
  isExternal: true
  name: OrderBy<T>(IEnumerable<T>, SortCondition<T>)
  nameWithType: EnumerableExtensions.OrderBy<T>(IEnumerable<T>, SortCondition<T>)
  fullName: OSharp.Collections.EnumerableExtensions.OrderBy<T>(System.Collections.Generic.IEnumerable<T>, OSharp.Filter.SortCondition<T>)
  nameWithType.vb: EnumerableExtensions.OrderBy(Of T)(IEnumerable(Of T), SortCondition(Of T))
  fullName.vb: OSharp.Collections.EnumerableExtensions.OrderBy(Of T)(System.Collections.Generic.IEnumerable(Of T), OSharp.Filter.SortCondition(Of T))
  name.vb: OrderBy(Of T)(IEnumerable(Of T), SortCondition(Of T))
  spec.csharp:
  - uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},OSharp.Filter.SortCondition{``0})
    name: OrderBy<T>
    nameWithType: EnumerableExtensions.OrderBy<T>
    fullName: OSharp.Collections.EnumerableExtensions.OrderBy<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OSharp.Filter.SortCondition`1
    name: SortCondition
    nameWithType: SortCondition
    fullName: OSharp.Filter.SortCondition
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Collections.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},OSharp.Filter.SortCondition{``0})
    name: OrderBy(Of T)
    nameWithType: EnumerableExtensions.OrderBy(Of T)
    fullName: OSharp.Collections.EnumerableExtensions.OrderBy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: OSharp.Filter.SortCondition`1
    name: SortCondition
    nameWithType: SortCondition
    fullName: OSharp.Filter.SortCondition
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  name.vb: CheckICreatedTime(Of TEntity, TKey)(TEntity)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime<TEntity, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime(Of TEntity, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Entity.EntityExtensions
  commentId: T:OSharp.Entity.EntityExtensions
  parent: OSharp.Entity
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: OSharp.Entity.EntityExtensions
- uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Entity.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    fullName: OSharp.Entity.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  isExternal: true
  name: CastTo(Object, Type)
  nameWithType: ObjectExtensions.CastTo(Object, Type)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo(System.Object, System.Type)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: OSharp.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions
  commentId: T:OSharp.Extensions.ObjectExtensions
  parent: OSharp.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: OSharp.Extensions.ObjectExtensions
- uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  commentId: M:OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  isExternal: true
  name: CastTo<T>(Object, T)
  nameWithType: ObjectExtensions.CastTo<T>(Object, T)
  fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>(System.Object, T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object, T)
  fullName.vb: OSharp.Extensions.ObjectExtensions.CastTo(Of T)(System.Object, T)
  name.vb: CastTo(Of T)(Object, T)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: OSharp.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  commentId: M:OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<T>(T, T[])
  nameWithType: ObjectExtensions.IsIn<T>(T, T[])
  fullName: OSharp.Extensions.ObjectExtensions.IsIn<T>(T, T[])
  nameWithType.vb: ObjectExtensions.IsIn(Of T)(T, T())
  fullName.vb: OSharp.Extensions.ObjectExtensions.IsIn(Of T)(T, T())
  name.vb: IsIn(Of T)(T, T())
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn<T>
    nameWithType: ObjectExtensions.IsIn<T>
    fullName: OSharp.Extensions.ObjectExtensions.IsIn<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn(Of T)
    nameWithType: ObjectExtensions.IsIn(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.IsIn(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  commentId: M:OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: ObjectExtensions.ToDynamic(Object)
  fullName: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: OSharp.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  commentId: M:OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: OSharp.Extensions.ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: OSharp.Extensions.ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: OSharp.Extensions.ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T>(T, Func<T, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T)(T, Func(Of T, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of T)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T>
    nameWithType: ParameterCheckExtensions.Required<T>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T)
    nameWithType: ParameterCheckExtensions.Required(Of T)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ParameterCheckExtensions
  commentId: T:OSharp.Extensions.ParameterCheckExtensions
  parent: OSharp.Extensions
  name: ParameterCheckExtensions
  nameWithType: ParameterCheckExtensions
  fullName: OSharp.Extensions.ParameterCheckExtensions
- uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T, TException>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T, TException>(T, Func<T, Boolean>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T, TException>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T, TException)(T, Func(Of T, Boolean), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.Required(Of T, TException)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T, TException)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T, TException>
    nameWithType: ParameterCheckExtensions.Required<T, TException>
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required<T, TException>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T, TException)
    nameWithType: ParameterCheckExtensions.Required(Of T, TException)
    fullName: OSharp.Extensions.ParameterCheckExtensions.Required(Of T, TException)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  isExternal: true
  name: CheckNotNull<T>(T, String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<T>(T, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<T>(T, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of T)(T, String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull<T>
    nameWithType: ParameterCheckExtensions.CheckNotNull<T>
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of T)
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  commentId: M:OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  isExternal: true
  name: CheckNotNullOrEmpty<T>(IEnumerable<T>, String)
  nameWithType: ParameterCheckExtensions.CheckNotNullOrEmpty<T>(IEnumerable<T>, String)
  fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNullOrEmpty(Of T)(IEnumerable(Of T), String)
  fullName.vb: OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty(Of T)(System.Collections.Generic.IEnumerable(Of T), System.String)
  name.vb: CheckNotNullOrEmpty(Of T)(IEnumerable(Of T), String)
  spec.csharp:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: CheckNotNullOrEmpty<T>
    nameWithType: ParameterCheckExtensions.CheckNotNullOrEmpty<T>
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: CheckNotNullOrEmpty(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNullOrEmpty(Of T)
    fullName: OSharp.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions
  commentId: T:OSharp.Extensions.TryCatchExtensions
  parent: OSharp.Extensions
  name: TryCatchExtensions
  nameWithType: TryCatchExtensions
  fullName: OSharp.Extensions.TryCatchExtensions
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: OSharp.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  commentId: M:OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  isExternal: true
  name: TryFinally<T>(T, Action<T>, Action<T>)
  nameWithType: TryCatchExtensions.TryFinally<T>(T, Action<T>, Action<T>)
  fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<T>(T, System.Action<T>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of T)(T, Action(Of T), Action(Of T))
  fullName.vb: OSharp.Extensions.TryCatchExtensions.TryFinally(Of T)(T, System.Action(Of T), System.Action(Of T))
  name.vb: TryFinally(Of T)(T, Action(Of T), Action(Of T))
  spec.csharp:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally<T>
    nameWithType: TryCatchExtensions.TryFinally<T>
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally(Of T)
    nameWithType: TryCatchExtensions.TryFinally(Of T)
    fullName: OSharp.Extensions.TryCatchExtensions.TryFinally(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  commentId: M:OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  isExternal: true
  name: ToJsonString(Object, Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Object, Boolean, Boolean)
  fullName: OSharp.Json.JsonExtensions.ToJsonString(System.Object, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: OSharp.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Json.JsonExtensions
  commentId: T:OSharp.Json.JsonExtensions
  parent: OSharp.Json
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: OSharp.Json.JsonExtensions
- uid: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
  isExternal: true
  name: MapTo<TTarget>(Object)
  nameWithType: MapperExtensions.MapTo<TTarget>(Object)
  fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>(System.Object)
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)(Object)
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)(System.Object)
  name.vb: MapTo(Of TTarget)(Object)
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Mapping.MapperExtensions
  commentId: T:OSharp.Mapping.MapperExtensions
  parent: OSharp.Mapping
  name: MapperExtensions
  nameWithType: MapperExtensions
  fullName: OSharp.Mapping.MapperExtensions
- uid: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  commentId: M:OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType: MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  fullName: OSharp.Mapping.MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  fullName.vb: OSharp.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  name.vb: MapTo(Of TSource, TTarget)(TSource, TTarget)
  spec.csharp:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo<TSource, TTarget>
    nameWithType: MapperExtensions.MapTo<TSource, TTarget>
    fullName: OSharp.Mapping.MapperExtensions.MapTo<TSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo(Of TSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TSource, TTarget)
    fullName: OSharp.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  commentId: M:OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
  isExternal: true
  name: Locking(Object, Action)
  nameWithType: LockExtensions.Locking(Object, Action)
  fullName: OSharp.Reflection.LockExtensions.Locking(System.Object, System.Action)
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: OSharp.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions
  commentId: T:OSharp.Reflection.LockExtensions
  parent: OSharp.Reflection
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: OSharp.Reflection.LockExtensions
- uid: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  isExternal: true
  name: Locking<T>(T, Action<T>)
  nameWithType: LockExtensions.Locking<T>(T, Action<T>)
  fullName: OSharp.Reflection.LockExtensions.Locking<T>(T, System.Action<T>)
  nameWithType.vb: LockExtensions.Locking(Of T)(T, Action(Of T))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of T)(T, System.Action(Of T))
  name.vb: Locking(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking<T>
    nameWithType: LockExtensions.Locking<T>
    fullName: OSharp.Reflection.LockExtensions.Locking<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking(Of T)
    nameWithType: LockExtensions.Locking(Of T)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  isExternal: true
  name: Locking<TResult>(Object, Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Object, Func<TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<TResult>(System.Object, System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Object, Func(Of TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of TResult)(System.Object, System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Object, Func(Of TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  commentId: M:OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  isExternal: true
  name: Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  nameWithType: LockExtensions.Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  fullName: OSharp.Reflection.LockExtensions.Locking<TSource, TResult>(TSource, System.Func<TSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  fullName.vb: OSharp.Reflection.LockExtensions.Locking(Of TSource, TResult)(TSource, System.Func(Of TSource, TResult))
  name.vb: Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  spec.csharp:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking<TSource, TResult>
    nameWithType: LockExtensions.Locking<TSource, TResult>
    fullName: OSharp.Reflection.LockExtensions.Locking<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: OSharp.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking(Of TSource, TResult)
    nameWithType: LockExtensions.Locking(Of TSource, TResult)
    fullName: OSharp.Reflection.LockExtensions.Locking(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.EnumerableExtensions.JoinAsString``1(System.Collections.Generic.IEnumerable{``0},System.String)
  commentId: M:Hybrid.Extensions.EnumerableExtensions.JoinAsString``1(System.Collections.Generic.IEnumerable{``0},System.String)
  isExternal: true
  name: JoinAsString<T>(IEnumerable<T>, String)
  nameWithType: EnumerableExtensions.JoinAsString<T>(IEnumerable<T>, String)
  fullName: Hybrid.Extensions.EnumerableExtensions.JoinAsString<T>(System.Collections.Generic.IEnumerable<T>, System.String)
  nameWithType.vb: EnumerableExtensions.JoinAsString(Of T)(IEnumerable(Of T), String)
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.JoinAsString(Of T)(System.Collections.Generic.IEnumerable(Of T), System.String)
  name.vb: JoinAsString(Of T)(IEnumerable(Of T), String)
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.JoinAsString``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: JoinAsString<T>
    nameWithType: EnumerableExtensions.JoinAsString<T>
    fullName: Hybrid.Extensions.EnumerableExtensions.JoinAsString<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.JoinAsString``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: JoinAsString(Of T)
    nameWithType: EnumerableExtensions.JoinAsString(Of T)
    fullName: Hybrid.Extensions.EnumerableExtensions.JoinAsString(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.EnumerableExtensions
  commentId: T:Hybrid.Extensions.EnumerableExtensions
  parent: Hybrid.Extensions
  name: EnumerableExtensions
  nameWithType: EnumerableExtensions
  fullName: Hybrid.Extensions.EnumerableExtensions
- uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Boolean})
  commentId: M:Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Boolean})
  isExternal: true
  name: WhereIf<T>(IEnumerable<T>, Boolean, Func<T, Boolean>)
  nameWithType: EnumerableExtensions.WhereIf<T>(IEnumerable<T>, Boolean, Func<T, Boolean>)
  fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf<T>(System.Collections.Generic.IEnumerable<T>, System.Boolean, System.Func<T, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.WhereIf(Of T)(IEnumerable(Of T), Boolean, Func(Of T, Boolean))
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.WhereIf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Boolean, System.Func(Of T, System.Boolean))
  name.vb: WhereIf(Of T)(IEnumerable(Of T), Boolean, Func(Of T, Boolean))
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Boolean})
    name: WhereIf<T>
    nameWithType: EnumerableExtensions.WhereIf<T>
    fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Boolean})
    name: WhereIf(Of T)
    nameWithType: EnumerableExtensions.WhereIf(Of T)
    fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Int32,System.Boolean})
  commentId: M:Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Int32,System.Boolean})
  isExternal: true
  name: WhereIf<T>(IEnumerable<T>, Boolean, Func<T, Int32, Boolean>)
  nameWithType: EnumerableExtensions.WhereIf<T>(IEnumerable<T>, Boolean, Func<T, Int32, Boolean>)
  fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf<T>(System.Collections.Generic.IEnumerable<T>, System.Boolean, System.Func<T, System.Int32, System.Boolean>)
  nameWithType.vb: EnumerableExtensions.WhereIf(Of T)(IEnumerable(Of T), Boolean, Func(Of T, Int32, Boolean))
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.WhereIf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Boolean, System.Func(Of T, System.Int32, System.Boolean))
  name.vb: WhereIf(Of T)(IEnumerable(Of T), Boolean, Func(Of T, Int32, Boolean))
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Int32,System.Boolean})
    name: WhereIf<T>
    nameWithType: EnumerableExtensions.WhereIf<T>
    fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Int32,System.Boolean})
    name: WhereIf(Of T)
    nameWithType: EnumerableExtensions.WhereIf(Of T)
    fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Hybrid.Extensions.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Shuffle<TSource>(IEnumerable<TSource>)
  nameWithType: EnumerableExtensions.Shuffle<TSource>(IEnumerable<TSource>)
  fullName: Hybrid.Extensions.EnumerableExtensions.Shuffle<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  nameWithType.vb: EnumerableExtensions.Shuffle(Of TSource)(IEnumerable(Of TSource))
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.Shuffle(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  name.vb: Shuffle(Of TSource)(IEnumerable(Of TSource))
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
    name: Shuffle<TSource>
    nameWithType: EnumerableExtensions.Shuffle<TSource>
    fullName: Hybrid.Extensions.EnumerableExtensions.Shuffle<TSource>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
    name: Shuffle(Of TSource)
    nameWithType: EnumerableExtensions.Shuffle(Of TSource)
    fullName: Hybrid.Extensions.EnumerableExtensions.Shuffle(Of TSource)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.String)
  commentId: M:Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.String)
  isExternal: true
  name: ExpandAndToString<T>(IEnumerable<T>, String)
  nameWithType: EnumerableExtensions.ExpandAndToString<T>(IEnumerable<T>, String)
  fullName: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString<T>(System.Collections.Generic.IEnumerable<T>, System.String)
  nameWithType.vb: EnumerableExtensions.ExpandAndToString(Of T)(IEnumerable(Of T), String)
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString(Of T)(System.Collections.Generic.IEnumerable(Of T), System.String)
  name.vb: ExpandAndToString(Of T)(IEnumerable(Of T), String)
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: ExpandAndToString<T>
    nameWithType: EnumerableExtensions.ExpandAndToString<T>
    fullName: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: ExpandAndToString(Of T)
    nameWithType: EnumerableExtensions.ExpandAndToString(Of T)
    fullName: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
  commentId: M:Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
  isExternal: true
  name: ExpandAndToString<T>(IEnumerable<T>, Func<T, String>, String)
  nameWithType: EnumerableExtensions.ExpandAndToString<T>(IEnumerable<T>, Func<T, String>, String)
  fullName: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.String>, System.String)
  nameWithType.vb: EnumerableExtensions.ExpandAndToString(Of T)(IEnumerable(Of T), Func(Of T, String), String)
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.String), System.String)
  name.vb: ExpandAndToString(Of T)(IEnumerable(Of T), Func(Of T, String), String)
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
    name: ExpandAndToString<T>
    nameWithType: EnumerableExtensions.ExpandAndToString<T>
    fullName: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String)
    name: ExpandAndToString(Of T)
    nameWithType: EnumerableExtensions.ExpandAndToString(Of T)
    fullName: Hybrid.Extensions.EnumerableExtensions.ExpandAndToString(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.EnumerableExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Hybrid.Extensions.EnumerableExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: IsEmpty<T>(IEnumerable<T>)
  nameWithType: EnumerableExtensions.IsEmpty<T>(IEnumerable<T>)
  fullName: Hybrid.Extensions.EnumerableExtensions.IsEmpty<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: EnumerableExtensions.IsEmpty(Of T)(IEnumerable(Of T))
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.IsEmpty(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsEmpty(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: IsEmpty<T>
    nameWithType: EnumerableExtensions.IsEmpty<T>
    fullName: Hybrid.Extensions.EnumerableExtensions.IsEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: IsEmpty(Of T)
    nameWithType: EnumerableExtensions.IsEmpty(Of T)
    fullName: Hybrid.Extensions.EnumerableExtensions.IsEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean)
  commentId: M:Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean)
  isExternal: true
  name: WhereIf<T>(IEnumerable<T>, Func<T, Boolean>, Boolean)
  nameWithType: EnumerableExtensions.WhereIf<T>(IEnumerable<T>, Func<T, Boolean>, Boolean)
  fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Boolean>, System.Boolean)
  nameWithType.vb: EnumerableExtensions.WhereIf(Of T)(IEnumerable(Of T), Func(Of T, Boolean), Boolean)
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.WhereIf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Boolean), System.Boolean)
  name.vb: WhereIf(Of T)(IEnumerable(Of T), Func(Of T, Boolean), Boolean)
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean)
    name: WhereIf<T>
    nameWithType: EnumerableExtensions.WhereIf<T>
    fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.WhereIf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Boolean)
    name: WhereIf(Of T)
    nameWithType: EnumerableExtensions.WhereIf(Of T)
    fullName: Hybrid.Extensions.EnumerableExtensions.WhereIf(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  commentId: M:Hybrid.Extensions.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: DistinctBy<T, TKey>(IEnumerable<T>, Func<T, TKey>)
  nameWithType: EnumerableExtensions.DistinctBy<T, TKey>(IEnumerable<T>, Func<T, TKey>)
  fullName: Hybrid.Extensions.EnumerableExtensions.DistinctBy<T, TKey>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TKey>)
  nameWithType.vb: EnumerableExtensions.DistinctBy(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey))
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.DistinctBy(Of T, TKey)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TKey))
  name.vb: DistinctBy(Of T, TKey)(IEnumerable(Of T), Func(Of T, TKey))
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: DistinctBy<T, TKey>
    nameWithType: EnumerableExtensions.DistinctBy<T, TKey>
    fullName: Hybrid.Extensions.EnumerableExtensions.DistinctBy<T, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: DistinctBy(Of T, TKey)
    nameWithType: EnumerableExtensions.DistinctBy(Of T, TKey)
    fullName: Hybrid.Extensions.EnumerableExtensions.DistinctBy(Of T, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.String,System.ComponentModel.ListSortDirection)
  commentId: M:Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.String,System.ComponentModel.ListSortDirection)
  isExternal: true
  name: OrderBy<T>(IEnumerable<T>, String, ListSortDirection)
  nameWithType: EnumerableExtensions.OrderBy<T>(IEnumerable<T>, String, ListSortDirection)
  fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy<T>(System.Collections.Generic.IEnumerable<T>, System.String, System.ComponentModel.ListSortDirection)
  nameWithType.vb: EnumerableExtensions.OrderBy(Of T)(IEnumerable(Of T), String, ListSortDirection)
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.OrderBy(Of T)(System.Collections.Generic.IEnumerable(Of T), System.String, System.ComponentModel.ListSortDirection)
  name.vb: OrderBy(Of T)(IEnumerable(Of T), String, ListSortDirection)
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.String,System.ComponentModel.ListSortDirection)
    name: OrderBy<T>
    nameWithType: EnumerableExtensions.OrderBy<T>
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.ListSortDirection
    name: ListSortDirection
    nameWithType: ListSortDirection
    fullName: System.ComponentModel.ListSortDirection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.String,System.ComponentModel.ListSortDirection)
    name: OrderBy(Of T)
    nameWithType: EnumerableExtensions.OrderBy(Of T)
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ComponentModel.ListSortDirection
    name: ListSortDirection
    nameWithType: ListSortDirection
    fullName: System.ComponentModel.ListSortDirection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},Hybrid.Filter.SortCondition)
  commentId: M:Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},Hybrid.Filter.SortCondition)
  isExternal: true
  name: OrderBy<T>(IEnumerable<T>, SortCondition)
  nameWithType: EnumerableExtensions.OrderBy<T>(IEnumerable<T>, SortCondition)
  fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy<T>(System.Collections.Generic.IEnumerable<T>, Hybrid.Filter.SortCondition)
  nameWithType.vb: EnumerableExtensions.OrderBy(Of T)(IEnumerable(Of T), SortCondition)
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.OrderBy(Of T)(System.Collections.Generic.IEnumerable(Of T), Hybrid.Filter.SortCondition)
  name.vb: OrderBy(Of T)(IEnumerable(Of T), SortCondition)
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},Hybrid.Filter.SortCondition)
    name: OrderBy<T>
    nameWithType: EnumerableExtensions.OrderBy<T>
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.SortCondition
    name: SortCondition
    nameWithType: SortCondition
    fullName: Hybrid.Filter.SortCondition
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},Hybrid.Filter.SortCondition)
    name: OrderBy(Of T)
    nameWithType: EnumerableExtensions.OrderBy(Of T)
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.SortCondition
    name: SortCondition
    nameWithType: SortCondition
    fullName: Hybrid.Filter.SortCondition
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},Hybrid.Filter.SortCondition{``0})
  commentId: M:Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},Hybrid.Filter.SortCondition{``0})
  isExternal: true
  name: OrderBy<T>(IEnumerable<T>, SortCondition<T>)
  nameWithType: EnumerableExtensions.OrderBy<T>(IEnumerable<T>, SortCondition<T>)
  fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy<T>(System.Collections.Generic.IEnumerable<T>, Hybrid.Filter.SortCondition<T>)
  nameWithType.vb: EnumerableExtensions.OrderBy(Of T)(IEnumerable(Of T), SortCondition(Of T))
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.OrderBy(Of T)(System.Collections.Generic.IEnumerable(Of T), Hybrid.Filter.SortCondition(Of T))
  name.vb: OrderBy(Of T)(IEnumerable(Of T), SortCondition(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},Hybrid.Filter.SortCondition{``0})
    name: OrderBy<T>
    nameWithType: EnumerableExtensions.OrderBy<T>
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.SortCondition`1
    name: SortCondition
    nameWithType: SortCondition
    fullName: Hybrid.Filter.SortCondition
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},Hybrid.Filter.SortCondition{``0})
    name: OrderBy(Of T)
    nameWithType: EnumerableExtensions.OrderBy(Of T)
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderBy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hybrid.Filter.SortCondition`1
    name: SortCondition
    nameWithType: SortCondition
    fullName: Hybrid.Filter.SortCondition
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String[])
  commentId: M:Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String[])
  isExternal: true
  name: OrderByPrefixes<T>(IEnumerable<T>, Func<T, String>, String[])
  nameWithType: EnumerableExtensions.OrderByPrefixes<T>(IEnumerable<T>, Func<T, String>, String[])
  fullName: Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.String>, System.String[])
  nameWithType.vb: EnumerableExtensions.OrderByPrefixes(Of T)(IEnumerable(Of T), Func(Of T, String), String())
  fullName.vb: Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.String), System.String())
  name.vb: OrderByPrefixes(Of T)(IEnumerable(Of T), Func(Of T, String), String())
  spec.csharp:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String[])
    name: OrderByPrefixes<T>
    nameWithType: EnumerableExtensions.OrderByPrefixes<T>
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String[])
    name: OrderByPrefixes(Of T)
    nameWithType: EnumerableExtensions.OrderByPrefixes(Of T)
    fullName: Hybrid.Extensions.EnumerableExtensions.OrderByPrefixes(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
  isExternal: true
  name: CastTo(Object, Type)
  nameWithType: ObjectExtensions.CastTo(Object, Type)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object, System.Type)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo(System.Object,System.Type)
    name: CastTo
    nameWithType: ObjectExtensions.CastTo
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions
  commentId: T:Hybrid.Extensions.ObjectExtensions
  parent: Hybrid.Extensions
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: Hybrid.Extensions.ObjectExtensions
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
  isExternal: true
  name: CastTo<T>(Object)
  nameWithType: ObjectExtensions.CastTo<T>(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object)
  name.vb: CastTo(Of T)(Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
  isExternal: true
  name: CastTo<T>(Object, T)
  nameWithType: ObjectExtensions.CastTo<T>(Object, T)
  fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>(System.Object, T)
  nameWithType.vb: ObjectExtensions.CastTo(Of T)(Object, T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)(System.Object, T)
  name.vb: CastTo(Of T)(Object, T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo<T>
    nameWithType: ObjectExtensions.CastTo<T>
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.CastTo``1(System.Object,``0)
    name: CastTo(Of T)
    nameWithType: ObjectExtensions.CastTo(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.CastTo(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  commentId: M:Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
  name: IsIn<T>(T, T[])
  nameWithType: ObjectExtensions.IsIn<T>(T, T[])
  fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>(T, T[])
  nameWithType.vb: ObjectExtensions.IsIn(Of T)(T, T())
  fullName.vb: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)(T, T())
  name.vb: IsIn(Of T)(T, T())
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn<T>
    nameWithType: ObjectExtensions.IsIn<T>
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.IsIn``1(``0,``0[])
    name: IsIn(Of T)
    nameWithType: ObjectExtensions.IsIn(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.IsIn(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  commentId: M:Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  isExternal: true
  name: ToDynamic(Object)
  nameWithType: ObjectExtensions.ToDynamic(Object)
  fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.ToDynamic(System.Object)
    name: ToDynamic
    nameWithType: ObjectExtensions.ToDynamic
    fullName: Hybrid.Extensions.ObjectExtensions.ToDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  commentId: M:Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
  name: DeepClone<T>(T)
  nameWithType: ObjectExtensions.DeepClone<T>(T)
  fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>(T)
  nameWithType.vb: ObjectExtensions.DeepClone(Of T)(T)
  fullName.vb: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)(T)
  name.vb: DeepClone(Of T)(T)
  spec.csharp:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone<T>
    nameWithType: ObjectExtensions.DeepClone<T>
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ObjectExtensions.DeepClone``1(``0)
    name: DeepClone(Of T)
    nameWithType: ObjectExtensions.DeepClone(Of T)
    fullName: Hybrid.Extensions.ObjectExtensions.DeepClone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T>
    nameWithType: ParameterCheckExtensions.Required<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``1(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T)
    nameWithType: ParameterCheckExtensions.Required(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions
  commentId: T:Hybrid.Extensions.ParameterCheckExtensions
  parent: Hybrid.Extensions
  name: ParameterCheckExtensions
  nameWithType: ParameterCheckExtensions
  fullName: Hybrid.Extensions.ParameterCheckExtensions
- uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
  isExternal: true
  name: Required<T, TException>(T, Func<T, Boolean>, String)
  nameWithType: ParameterCheckExtensions.Required<T, TException>(T, Func<T, Boolean>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>(T, System.Func<T, System.Boolean>, System.String)
  nameWithType.vb: ParameterCheckExtensions.Required(Of T, TException)(T, Func(Of T, Boolean), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)(T, System.Func(Of T, System.Boolean), System.String)
  name.vb: Required(Of T, TException)(T, Func(Of T, Boolean), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required<T, TException>
    nameWithType: ParameterCheckExtensions.Required<T, TException>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required<T, TException>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.Required``2(``0,System.Func{``0,System.Boolean},System.String)
    name: Required(Of T, TException)
    nameWithType: ParameterCheckExtensions.Required(Of T, TException)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.Required(Of T, TException)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
  isExternal: true
  name: CheckNotNull<T>(T, String)
  nameWithType: ParameterCheckExtensions.CheckNotNull<T>(T, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>(T, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNull(Of T)(T, String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)(T, System.String)
  name.vb: CheckNotNull(Of T)(T, String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull<T>
    nameWithType: ParameterCheckExtensions.CheckNotNull<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull``1(``0,System.String)
    name: CheckNotNull(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNull(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNull(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  commentId: M:Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  isExternal: true
  name: CheckNotNullOrEmpty<T>(IEnumerable<T>, String)
  nameWithType: ParameterCheckExtensions.CheckNotNullOrEmpty<T>(IEnumerable<T>, String)
  fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>, System.String)
  nameWithType.vb: ParameterCheckExtensions.CheckNotNullOrEmpty(Of T)(IEnumerable(Of T), String)
  fullName.vb: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty(Of T)(System.Collections.Generic.IEnumerable(Of T), System.String)
  name.vb: CheckNotNullOrEmpty(Of T)(IEnumerable(Of T), String)
  spec.csharp:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: CheckNotNullOrEmpty<T>
    nameWithType: ParameterCheckExtensions.CheckNotNullOrEmpty<T>
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: CheckNotNullOrEmpty(Of T)
    nameWithType: ParameterCheckExtensions.CheckNotNullOrEmpty(Of T)
    fullName: Hybrid.Extensions.ParameterCheckExtensions.CheckNotNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions
  commentId: T:Hybrid.Extensions.TryCatchExtensions
  parent: Hybrid.Extensions
  name: TryCatchExtensions
  nameWithType: TryCatchExtensions
  fullName: Hybrid.Extensions.TryCatchExtensions
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T>(T, Action<T>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T>(T, Action<T>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>(T, System.Action<T>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)(T, System.Action(Of T), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T)(T, Action(Of T), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch<T>
    nameWithType: TryCatchExtensions.TryCatch<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``1(``0,System.Action{``0},System.Action{System.Exception})
    name: TryCatch(Of T)
    nameWithType: TryCatchExtensions.TryCatch(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception), System.Action(Of T))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception},System.Action{``0})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
  isExternal: true
  name: TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  nameWithType: TryCatchExtensions.TryCatch<T, TResult>(T, Func<T, TResult>, Action<Exception>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>(T, System.Func<T, TResult>, System.Action<System.Exception>)
  nameWithType.vb: TryCatchExtensions.TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)(T, System.Func(Of T, TResult), System.Action(Of System.Exception))
  name.vb: TryCatch(Of T, TResult)(T, Func(Of T, TResult), Action(Of Exception))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch<T, TResult>
    nameWithType: TryCatchExtensions.TryCatch<T, TResult>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch<T, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryCatch``2(``0,System.Func{``0,``1},System.Action{System.Exception})
    name: TryCatch(Of T, TResult)
    nameWithType: TryCatchExtensions.TryCatch(Of T, TResult)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryCatch(Of T, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  commentId: M:Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
  isExternal: true
  name: TryFinally<T>(T, Action<T>, Action<T>)
  nameWithType: TryCatchExtensions.TryFinally<T>(T, Action<T>, Action<T>)
  fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>(T, System.Action<T>, System.Action<T>)
  nameWithType.vb: TryCatchExtensions.TryFinally(Of T)(T, Action(Of T), Action(Of T))
  fullName.vb: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)(T, System.Action(Of T), System.Action(Of T))
  name.vb: TryFinally(Of T)(T, Action(Of T), Action(Of T))
  spec.csharp:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally<T>
    nameWithType: TryCatchExtensions.TryFinally<T>
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Extensions.TryCatchExtensions.TryFinally``1(``0,System.Action{``0},System.Action{``0})
    name: TryFinally(Of T)
    nameWithType: TryCatchExtensions.TryFinally(Of T)
    fullName: Hybrid.Extensions.TryCatchExtensions.TryFinally(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
  isExternal: true
  name: ToJsonString(Object, Boolean, Boolean)
  nameWithType: JsonExtensions.ToJsonString(Object, Boolean, Boolean)
  fullName: Hybrid.Json.JsonExtensions.ToJsonString(System.Object, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Json.JsonExtensions.ToJsonString(System.Object,System.Boolean,System.Boolean)
    name: ToJsonString
    nameWithType: JsonExtensions.ToJsonString
    fullName: Hybrid.Json.JsonExtensions.ToJsonString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Json.JsonExtensions
  commentId: T:Hybrid.Json.JsonExtensions
  parent: Hybrid.Json
  name: JsonExtensions
  nameWithType: JsonExtensions
  fullName: Hybrid.Json.JsonExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
  isExternal: true
  name: MapTo<TTarget>(Object)
  nameWithType: MapperExtensions.MapTo<TTarget>(Object)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>(System.Object)
  nameWithType.vb: MapperExtensions.MapTo(Of TTarget)(Object)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)(System.Object)
  name.vb: MapTo(Of TTarget)(Object)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo<TTarget>
    nameWithType: MapperExtensions.MapTo<TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``1(System.Object)
    name: MapTo(Of TTarget)
    nameWithType: MapperExtensions.MapTo(Of TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Mapping.MapperExtensions
  commentId: T:Hybrid.Mapping.MapperExtensions
  parent: Hybrid.Mapping
  name: MapperExtensions
  nameWithType: MapperExtensions
  fullName: Hybrid.Mapping.MapperExtensions
- uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  commentId: M:Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
  name: MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType: MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>(TSource, TTarget)
  nameWithType.vb: MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  fullName.vb: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)(TSource, TTarget)
  name.vb: MapTo(Of TSource, TTarget)(TSource, TTarget)
  spec.csharp:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo<TSource, TTarget>
    nameWithType: MapperExtensions.MapTo<TSource, TTarget>
    fullName: Hybrid.Mapping.MapperExtensions.MapTo<TSource, TTarget>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Mapping.MapperExtensions.MapTo``2(``0,``1)
    name: MapTo(Of TSource, TTarget)
    nameWithType: MapperExtensions.MapTo(Of TSource, TTarget)
    fullName: Hybrid.Mapping.MapperExtensions.MapTo(Of TSource, TTarget)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  commentId: M:Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
  isExternal: true
  name: Locking(Object, Action)
  nameWithType: LockExtensions.Locking(Object, Action)
  fullName: Hybrid.Reflection.LockExtensions.Locking(System.Object, System.Action)
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking(System.Object,System.Action)
    name: Locking
    nameWithType: LockExtensions.Locking
    fullName: Hybrid.Reflection.LockExtensions.Locking
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions
  commentId: T:Hybrid.Reflection.LockExtensions
  parent: Hybrid.Reflection
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: Hybrid.Reflection.LockExtensions
- uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
  isExternal: true
  name: Locking<T>(T, Action<T>)
  nameWithType: LockExtensions.Locking<T>(T, Action<T>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<T>(T, System.Action<T>)
  nameWithType.vb: LockExtensions.Locking(Of T)(T, Action(Of T))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of T)(T, System.Action(Of T))
  name.vb: Locking(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking<T>
    nameWithType: LockExtensions.Locking<T>
    fullName: Hybrid.Reflection.LockExtensions.Locking<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(``0,System.Action{``0})
    name: Locking(Of T)
    nameWithType: LockExtensions.Locking(Of T)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
  isExternal: true
  name: Locking<TResult>(Object, Func<TResult>)
  nameWithType: LockExtensions.Locking<TResult>(Object, Func<TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>(System.Object, System.Func<TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TResult)(Object, Func(Of TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TResult)(System.Object, System.Func(Of TResult))
  name.vb: Locking(Of TResult)(Object, Func(Of TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking<TResult>
    nameWithType: LockExtensions.Locking<TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``1(System.Object,System.Func{``0})
    name: Locking(Of TResult)
    nameWithType: LockExtensions.Locking(Of TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  commentId: M:Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
  isExternal: true
  name: Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  nameWithType: LockExtensions.Locking<TSource, TResult>(TSource, Func<TSource, TResult>)
  fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>(TSource, System.Func<TSource, TResult>)
  nameWithType.vb: LockExtensions.Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  fullName.vb: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)(TSource, System.Func(Of TSource, TResult))
  name.vb: Locking(Of TSource, TResult)(TSource, Func(Of TSource, TResult))
  spec.csharp:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking<TSource, TResult>
    nameWithType: LockExtensions.Locking<TSource, TResult>
    fullName: Hybrid.Reflection.LockExtensions.Locking<TSource, TResult>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Reflection.LockExtensions.Locking``2(``0,System.Func{``0,``1})
    name: Locking(Of TSource, TResult)
    nameWithType: LockExtensions.Locking(Of TSource, TResult)
    fullName: Hybrid.Reflection.LockExtensions.Locking(Of TSource, TResult)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
  name: CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>(TEntity)
  nameWithType.vb: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)(TEntity)
  name.vb: CheckICreatedTime(Of TEntity, TKey)(TEntity)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime<TEntity, TKey>
    nameWithType: EntityExtensions.CheckICreatedTime<TEntity, TKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime<TEntity, TKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime``2(``0)
    name: CheckICreatedTime(Of TEntity, TKey)
    nameWithType: EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreatedTime(Of TEntity, TKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions
  commentId: T:Hybrid.Domain.Entities.EntityExtensions
  parent: Hybrid.Domain.Entities
  name: EntityExtensions
  nameWithType: EntityExtensions
  fullName: Hybrid.Domain.Entities.EntityExtensions
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckICreationAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckICreationAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckICreationAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  commentId: M:Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
  isExternal: true
  name: CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, IPrincipal)
  fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>(TEntity, System.Security.Principal.IPrincipal)
  nameWithType.vb: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  fullName.vb: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, System.Security.Principal.IPrincipal)
  name.vb: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)(TEntity, IPrincipal)
  spec.csharp:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited<TEntity, TKey, TUserKey>
    nameWithType: EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited<TEntity, TKey, TUserKey>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited``3(``0,System.Security.Principal.IPrincipal)
    name: CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    nameWithType: EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
    fullName: Hybrid.Domain.Entities.EntityExtensions.CheckIUpdateAudited(Of TEntity, TKey, TUserKey)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Principal.IPrincipal
    name: IPrincipal
    nameWithType: IPrincipal
    fullName: System.Security.Principal.IPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: IsNullOrEmpty<T>(IEnumerable<T>)
  nameWithType: IEnumerableExtensions.IsNullOrEmpty<T>(IEnumerable<T>)
  fullName: IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: IEnumerableExtensions.IsNullOrEmpty(Of T)(IEnumerable(Of T))
  fullName.vb: IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsNullOrEmpty(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: IsNullOrEmpty<T>
    nameWithType: IEnumerableExtensions.IsNullOrEmpty<T>
    fullName: IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: IsNullOrEmpty(Of T)
    nameWithType: IEnumerableExtensions.IsNullOrEmpty(Of T)
    fullName: IdentityServer4.Extensions.IEnumerableExtensions.IsNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IdentityServer4.Extensions.IEnumerableExtensions
  commentId: T:IdentityServer4.Extensions.IEnumerableExtensions
  parent: IdentityServer4.Extensions
  name: IEnumerableExtensions
  nameWithType: IEnumerableExtensions
  fullName: IdentityServer4.Extensions.IEnumerableExtensions
- uid: IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  commentId: M:IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  isExternal: true
  name: HasDuplicates<T, TProp>(IEnumerable<T>, Func<T, TProp>)
  nameWithType: IEnumerableExtensions.HasDuplicates<T, TProp>(IEnumerable<T>, Func<T, TProp>)
  fullName: IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates<T, TProp>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProp>)
  nameWithType.vb: IEnumerableExtensions.HasDuplicates(Of T, TProp)(IEnumerable(Of T), Func(Of T, TProp))
  fullName.vb: IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates(Of T, TProp)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, TProp))
  name.vb: HasDuplicates(Of T, TProp)(IEnumerable(Of T), Func(Of T, TProp))
  spec.csharp:
  - uid: IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: HasDuplicates<T, TProp>
    nameWithType: IEnumerableExtensions.HasDuplicates<T, TProp>
    fullName: IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates<T, TProp>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
    name: HasDuplicates(Of T, TProp)
    nameWithType: IEnumerableExtensions.HasDuplicates(Of T, TProp)
    fullName: IdentityServer4.Extensions.IEnumerableExtensions.HasDuplicates(Of T, TProp)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProp
    nameWithType: TProp
    fullName: TProp
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: OSharp.Collections
  commentId: N:OSharp.Collections
  name: OSharp.Collections
  nameWithType: OSharp.Collections
  fullName: OSharp.Collections
- uid: OSharp.Entity
  commentId: N:OSharp.Entity
  name: OSharp.Entity
  nameWithType: OSharp.Entity
  fullName: OSharp.Entity
- uid: OSharp.Extensions
  commentId: N:OSharp.Extensions
  name: OSharp.Extensions
  nameWithType: OSharp.Extensions
  fullName: OSharp.Extensions
- uid: OSharp.Json
  commentId: N:OSharp.Json
  name: OSharp.Json
  nameWithType: OSharp.Json
  fullName: OSharp.Json
- uid: OSharp.Mapping
  commentId: N:OSharp.Mapping
  name: OSharp.Mapping
  nameWithType: OSharp.Mapping
  fullName: OSharp.Mapping
- uid: OSharp.Reflection
  commentId: N:OSharp.Reflection
  name: OSharp.Reflection
  nameWithType: OSharp.Reflection
  fullName: OSharp.Reflection
- uid: Hybrid.Extensions
  commentId: N:Hybrid.Extensions
  name: Hybrid.Extensions
  nameWithType: Hybrid.Extensions
  fullName: Hybrid.Extensions
- uid: Hybrid.Json
  commentId: N:Hybrid.Json
  name: Hybrid.Json
  nameWithType: Hybrid.Json
  fullName: Hybrid.Json
- uid: Hybrid.Mapping
  commentId: N:Hybrid.Mapping
  name: Hybrid.Mapping
  nameWithType: Hybrid.Mapping
  fullName: Hybrid.Mapping
- uid: Hybrid.Reflection
  commentId: N:Hybrid.Reflection
  name: Hybrid.Reflection
  nameWithType: Hybrid.Reflection
  fullName: Hybrid.Reflection
- uid: Hybrid.Domain.Entities
  commentId: N:Hybrid.Domain.Entities
  name: Hybrid.Domain.Entities
  nameWithType: Hybrid.Domain.Entities
  fullName: Hybrid.Domain.Entities
- uid: IdentityServer4.Extensions
  commentId: N:IdentityServer4.Extensions
  name: IdentityServer4.Extensions
  nameWithType: IdentityServer4.Extensions
  fullName: IdentityServer4.Extensions
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  commentId: T:Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
  parent: Hybrid.Localization.Dictionaries.Xml
  name: XmlLocalizationDictionary
  nameWithType: XmlLocalizationDictionary
  fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomFile*
  commentId: Overload:Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomFile
  name: BuildFomFile
  nameWithType: XmlLocalizationDictionary.BuildFomFile
  fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomXmlString*
  commentId: Overload:Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomXmlString
  name: BuildFomXmlString
  nameWithType: XmlLocalizationDictionary.BuildFomXmlString
  fullName: Hybrid.Localization.Dictionaries.Xml.XmlLocalizationDictionary.BuildFomXmlString
