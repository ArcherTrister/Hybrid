### YamlMime:ManagedReference
items:
- uid: Hybrid.Json.JsonHelper
  commentId: T:Hybrid.Json.JsonHelper
  id: JsonHelper
  parent: Hybrid.Json
  children:
  - Hybrid.Json.JsonHelper.FromJson``1(System.String)
  - Hybrid.Json.JsonHelper.JsonDateTimeFormat(System.String)
  - Hybrid.Json.JsonHelper.ToJson(System.Object,System.Boolean,System.Boolean)
  langs:
  - csharp
  - vb
  name: JsonHelper
  nameWithType: JsonHelper
  fullName: Hybrid.Json.JsonHelper
  type: Class
  source:
    remote:
      path: src/Hybrid/Json/JsonHelper.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: JsonHelper
    path: ../src/Hybrid/Json/JsonHelper.cs
    startLine: 21
  assemblies:
  - Hybrid
  namespace: Hybrid.Json
  summary: "\nJSON辅助操作类\n"
  example: []
  syntax:
    content: public static class JsonHelper
    content.vb: Public Module JsonHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Hybrid.Json.JsonHelper.JsonDateTimeFormat(System.String)
  commentId: M:Hybrid.Json.JsonHelper.JsonDateTimeFormat(System.String)
  id: JsonDateTimeFormat(System.String)
  parent: Hybrid.Json.JsonHelper
  langs:
  - csharp
  - vb
  name: JsonDateTimeFormat(String)
  nameWithType: JsonHelper.JsonDateTimeFormat(String)
  fullName: Hybrid.Json.JsonHelper.JsonDateTimeFormat(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Json/JsonHelper.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: JsonDateTimeFormat
    path: ../src/Hybrid/Json/JsonHelper.cs
    startLine: 26
  assemblies:
  - Hybrid
  namespace: Hybrid.Json
  summary: "\n处理Json的时间格式为正常格式\n"
  example: []
  syntax:
    content: public static string JsonDateTimeFormat(string json)
    parameters:
    - id: json
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function JsonDateTimeFormat(json As String) As String
  overload: Hybrid.Json.JsonHelper.JsonDateTimeFormat*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Json.JsonHelper.ToJson(System.Object,System.Boolean,System.Boolean)
  commentId: M:Hybrid.Json.JsonHelper.ToJson(System.Object,System.Boolean,System.Boolean)
  id: ToJson(System.Object,System.Boolean,System.Boolean)
  parent: Hybrid.Json.JsonHelper
  langs:
  - csharp
  - vb
  name: ToJson(Object, Boolean, Boolean)
  nameWithType: JsonHelper.ToJson(Object, Boolean, Boolean)
  fullName: Hybrid.Json.JsonHelper.ToJson(System.Object, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Hybrid/Json/JsonHelper.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: ToJson
    path: ../src/Hybrid/Json/JsonHelper.cs
    startLine: 48
  assemblies:
  - Hybrid
  namespace: Hybrid.Json
  summary: "\n把对象序列化成Json字符串格式\n"
  example: []
  syntax:
    content: public static string ToJson(object object, bool camelCase = false, bool indented = false)
    parameters:
    - id: object
      type: System.Object
      description: Json 对象
    - id: camelCase
      type: System.Boolean
      description: 是否小写名称
    - id: indented
      type: System.Boolean
      description: ''
    return:
      type: System.String
      description: Json 字符串
    content.vb: Public Shared Function ToJson(object As Object, camelCase As Boolean = False, indented As Boolean = False) As String
  overload: Hybrid.Json.JsonHelper.ToJson*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Hybrid.Json.JsonHelper.FromJson``1(System.String)
  commentId: M:Hybrid.Json.JsonHelper.FromJson``1(System.String)
  id: FromJson``1(System.String)
  parent: Hybrid.Json.JsonHelper
  langs:
  - csharp
  - vb
  name: FromJson<T>(String)
  nameWithType: JsonHelper.FromJson<T>(String)
  fullName: Hybrid.Json.JsonHelper.FromJson<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Hybrid/Json/JsonHelper.cs
      branch: dev
      repo: https://github.com/ArcherTrister/Hybrid.git
    id: FromJson
    path: ../src/Hybrid/Json/JsonHelper.cs
    startLine: 68
  assemblies:
  - Hybrid
  namespace: Hybrid.Json
  summary: "\n把Json字符串转换为强类型对象\n"
  example: []
  syntax:
    content: public static T FromJson<T>(string json)
    parameters:
    - id: json
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function FromJson(Of T)(json As String) As T
  overload: Hybrid.Json.JsonHelper.FromJson*
  nameWithType.vb: JsonHelper.FromJson(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Hybrid.Json.JsonHelper.FromJson(Of T)(System.String)
  name.vb: FromJson(Of T)(String)
references:
- uid: Hybrid.Json
  commentId: N:Hybrid.Json
  name: Hybrid.Json
  nameWithType: Hybrid.Json
  fullName: Hybrid.Json
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Hybrid.Json.JsonHelper.JsonDateTimeFormat*
  commentId: Overload:Hybrid.Json.JsonHelper.JsonDateTimeFormat
  name: JsonDateTimeFormat
  nameWithType: JsonHelper.JsonDateTimeFormat
  fullName: Hybrid.Json.JsonHelper.JsonDateTimeFormat
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Hybrid.Json.JsonHelper.ToJson*
  commentId: Overload:Hybrid.Json.JsonHelper.ToJson
  name: ToJson
  nameWithType: JsonHelper.ToJson
  fullName: Hybrid.Json.JsonHelper.ToJson
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Hybrid.Json.JsonHelper.FromJson*
  commentId: Overload:Hybrid.Json.JsonHelper.FromJson
  name: FromJson
  nameWithType: JsonHelper.FromJson
  fullName: Hybrid.Json.JsonHelper.FromJson
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
