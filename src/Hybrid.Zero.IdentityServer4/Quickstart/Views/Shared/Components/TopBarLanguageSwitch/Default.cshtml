@using Microsoft.AspNetCore.Http.Features
@model Hybrid.AspNetCore.Mvc.Models.TopBarLanguageSwitchViewModel

@{
    var consentFeature = Context.Features.Get<ITrackingConsentFeature>();
    bool showBanner = !consentFeature?.CanTrack ?? false;
}

@if (Model.Languages.Any() && !showBanner)
{
    <!-- dropdownMenuLanguageLink -->
    <li class="dropdown mr-sm-3">
        <a class="dropdown-toggle" href="javascript:void(0);" role="button" id="dropdownMenuLanguageLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <i class="@Model.CurrentLanguage.Icon" title="@Model.CurrentLanguage.DisplayName"></i>
            <span>@Model.CurrentLanguage.DisplayName</span>
            <b class="caret"></b>
            <input type="hidden" id="locale" value="@Model.CurrentLanguage.Name" />
        </a>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuLanguageLink">
            @foreach (LanguageInfo language in Model.Languages)
            {
                if (language.Name != Model.CurrentLanguage.Name)
                {
                    <a class="dropdown-item text-center" href="@(ApplicationPath)Localization/ChangeCulture?cultureName=@(language.Name)&returnUrl=@(Context.Request.Path + Context.Request.QueryString.Value)"><i class="@language.Icon"></i> @language.DisplayName</a>
                }
            }
        </div>
    </li>
}